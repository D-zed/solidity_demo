{
	"id": "50842957fd88f14b32dc4c524834310f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\npragma solidity ^0.8.22;\n\nimport {Proxy} from \"../Proxy.sol\";\nimport {ERC1967Utils} from \"./ERC1967Utils.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n     * encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     *\n     * Requirements:\n     *\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    constructor(address implementation, bytes memory _data) payable {\n        ERC1967Utils.upgradeToAndCall(implementation, _data);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return ERC1967Utils.getImplementation();\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n     * function and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			".deps/npm/@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"ERC1967Proxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  mstore(0x40, 0x80)\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1081:1214  constructor(address implementation, bytes memory _data) payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1207  ERC1967Utils.upgradeToAndCall(implementation, _data) */\n  tag_5\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1185:1199  implementation */\n  dup3\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1201:1206  _data */\n  dup3\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1184  ERC1967Utils.upgradeToAndCall */\n  tag_6\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1207  ERC1967Utils.upgradeToAndCall(implementation, _data) */\n  jump\t// in\ntag_5:\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1081:1214  constructor(address implementation, bytes memory _data) payable {... */\n  pop\n  pop\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  jump(tag_46)\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\ntag_6:\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n  tag_9\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n  dup3\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n  tag_10\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n  jump\t// in\ntag_9:\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  swap1\n  0x00\n  swap1\n  log2\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n  dup1\n  mload\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n  iszero\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n  tag_11\n  jumpi\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n  tag_12\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n  dup3\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n  dup3\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n  tag_13\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n  jump\t// in\ntag_12:\n  pop\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\ntag_11:\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n  tag_15\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n  tag_16\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n  jump\t// in\ntag_15:\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\ntag_10:\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n  and\n  extcodesize\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n  0x00\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n  sub\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n  tag_18\n  jumpi\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n  mload(0x40)\n  shl(0xe0, 0x4c9c8ce3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1416:1448   */\n  dup3\n  and\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1398:1449   */\n  mstore\n    /* \"#utility.yul\":1371:1389   */\n  0x24\n  add\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\ntag_18:\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n  jump\t// out\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_13:\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":3999:4011  bytes memory */\n  0x60\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4024:4036  bool success */\n  0x00\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4038:4061  bytes memory returndata */\n  dup1\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4065:4071  target */\n  dup5\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4065:4084  target.delegatecall */\n  and\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4085:4089  data */\n  dup5\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4065:4090  target.delegatecall(data) */\n  mload(0x40)\n  tag_24\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_28\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_27)\ntag_28:\n  0x60\n  swap2\n  pop\ntag_27:\n  pop\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4023:4090  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap1\n  swap3\n  pop\n  swap1\n  pop\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n  tag_29\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4134:4140  target */\n  dup6\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4023:4090  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  dup4\n  dup4\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4107:4133  verifyCallResultFromTarget */\n  tag_30\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n  jump\t// in\ntag_29:\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4100:4162  return verifyCallResultFromTarget(target, success, returndata) */\n  swap6\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\ntag_16:\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n  callvalue\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n  iszero\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n  tag_32\n  jumpi\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n  mload(0x40)\n  shl(0xe0, 0xb398979f)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\ntag_32:\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n  jump\t// out\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\ntag_30:\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4581:4593  bytes memory */\n  0x60\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4610:4617  success */\n  dup3\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n  tag_35\n  jumpi\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n  tag_36\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4641:4651  returndata */\n  dup3\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4633:4640  _revert */\n  tag_37\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n  jump\t// in\ntag_36:\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n  jump(tag_38)\ntag_35:\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4857:4874  returndata.length */\n  dup2\n  mload\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4857:4879  returndata.length == 0 */\n  iszero\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n  dup1\n  iszero\n  tag_39\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4883:4901  target.code.length */\n  dup5\n  and\n  extcodesize\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4883:4906  target.code.length == 0 */\n  iszero\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\ntag_39:\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n  iszero\n  tag_40\n  jumpi\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n  mload(0x40)\n  shl(0xe0, 0x9996b315)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1416:1448   */\n  dup6\n  and\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1398:1449   */\n  mstore\n    /* \"#utility.yul\":1371:1389   */\n  0x24\n  add\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n  tag_19\n    /* \"#utility.yul\":1252:1455   */\n  jump\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\ntag_40:\n  pop\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4992:5002  returndata */\n  dup1\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\ntag_38:\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":5559:6046  function _revert(bytes memory returndata) private pure {... */\ntag_37:\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":5690:5707  returndata.length */\n  dup1\n  mload\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":5690:5711  returndata.length > 0 */\n  iszero\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n  tag_43\n  jumpi\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":5887:5897  returndata */\n  dup1\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":5881:5898  mload(returndata) */\n  mload\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":5943:5958  returndata_size */\n  dup1\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":5930:5940  returndata */\n  dup3\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":5926:5928  32 */\n  0x20\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":5922:5941  add(32, returndata) */\n  add\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":5915:5959  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\ntag_43:\n    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":6010:6029  Errors.FailedCall() */\n  mload(0x40)\n  shl(0xe0, 0xd6bda275)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"#utility.yul\":14:141   */\ntag_45:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1247   */\ntag_2:\n    /* \"#utility.yul\":234:240   */\n  0x00\n    /* \"#utility.yul\":242:248   */\n  dup1\n    /* \"#utility.yul\":295:297   */\n  0x40\n    /* \"#utility.yul\":283:292   */\n  dup4\n    /* \"#utility.yul\":274:281   */\n  dup6\n    /* \"#utility.yul\":270:293   */\n  sub\n    /* \"#utility.yul\":266:298   */\n  slt\n    /* \"#utility.yul\":263:315   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":311:312   */\n  0x00\n    /* \"#utility.yul\":308:309   */\n  dup1\n    /* \"#utility.yul\":301:313   */\n  revert\n    /* \"#utility.yul\":263:315   */\ntag_49:\n    /* \"#utility.yul\":337:353   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":382:413   */\n  dup2\n  and\n    /* \"#utility.yul\":372:414   */\n  dup2\n  eq\n    /* \"#utility.yul\":362:432   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":428:429   */\n  0x00\n    /* \"#utility.yul\":425:426   */\n  dup1\n    /* \"#utility.yul\":418:430   */\n  revert\n    /* \"#utility.yul\":362:432   */\ntag_50:\n    /* \"#utility.yul\":500:502   */\n  0x20\n    /* \"#utility.yul\":485:503   */\n  dup5\n  add\n    /* \"#utility.yul\":479:504   */\n  mload\n    /* \"#utility.yul\":451:456   */\n  swap1\n  swap3\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":516:546   */\n  dup2\n  gt\n    /* \"#utility.yul\":513:563   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":559:560   */\n  0x00\n    /* \"#utility.yul\":556:557   */\n  dup1\n    /* \"#utility.yul\":549:561   */\n  revert\n    /* \"#utility.yul\":513:563   */\ntag_51:\n    /* \"#utility.yul\":582:604   */\n  dup4\n  add\n    /* \"#utility.yul\":635:639   */\n  0x1f\n    /* \"#utility.yul\":627:640   */\n  dup2\n  add\n    /* \"#utility.yul\":623:650   */\n  dup6\n  sgt\n    /* \"#utility.yul\":613:668   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":664:665   */\n  0x00\n    /* \"#utility.yul\":661:662   */\n  dup1\n    /* \"#utility.yul\":654:666   */\n  revert\n    /* \"#utility.yul\":613:668   */\ntag_52:\n    /* \"#utility.yul\":691:700   */\n  dup1\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":712:742   */\n  dup2\n  gt\n    /* \"#utility.yul\":709:765   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":745:763   */\n  tag_54\n  tag_45\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":794:796   */\n  0x40\n    /* \"#utility.yul\":788:797   */\n  mload\n    /* \"#utility.yul\":886:888   */\n  0x1f\n    /* \"#utility.yul\":848:865   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":844:875   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":877:879   */\n  0x3f\n    /* \"#utility.yul\":840:880   */\n  add\n    /* \"#utility.yul\":836:890   */\n  and\n    /* \"#utility.yul\":824:891   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":906:940   */\n  dup2\n  gt\n    /* \"#utility.yul\":942:964   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":903:965   */\n  or\n    /* \"#utility.yul\":900:988   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":968:986   */\n  tag_56\n  tag_45\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1004:1006   */\n  0x40\n    /* \"#utility.yul\":997:1019   */\n  mstore\n    /* \"#utility.yul\":1028:1050   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":1069:1084   */\n  dup3\n  dup3\n  add\n    /* \"#utility.yul\":1086:1088   */\n  0x20\n    /* \"#utility.yul\":1065:1089   */\n  add\n    /* \"#utility.yul\":1062:1099   */\n  dup8\n  lt\n    /* \"#utility.yul\":1059:1116   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1112:1113   */\n  0x00\n    /* \"#utility.yul\":1109:1110   */\n  dup1\n    /* \"#utility.yul\":1102:1114   */\n  revert\n    /* \"#utility.yul\":1059:1116   */\ntag_57:\n    /* \"#utility.yul\":1161:1167   */\n  dup2\n    /* \"#utility.yul\":1156:1158   */\n  0x20\n    /* \"#utility.yul\":1152:1154   */\n  dup5\n    /* \"#utility.yul\":1148:1159   */\n  add\n    /* \"#utility.yul\":1143:1145   */\n  0x20\n    /* \"#utility.yul\":1135:1141   */\n  dup4\n    /* \"#utility.yul\":1131:1146   */\n  add\n    /* \"#utility.yul\":1125:1168   */\n  mcopy\n    /* \"#utility.yul\":1214:1215   */\n  0x00\n    /* \"#utility.yul\":1209:1211   */\n  0x20\n    /* \"#utility.yul\":1200:1206   */\n  dup4\n    /* \"#utility.yul\":1192:1198   */\n  dup4\n    /* \"#utility.yul\":1188:1207   */\n  add\n    /* \"#utility.yul\":1184:1212   */\n  add\n    /* \"#utility.yul\":1177:1216   */\n  mstore\n    /* \"#utility.yul\":1235:1241   */\n  dup1\n    /* \"#utility.yul\":1225:1241   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:1247   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1460:1761   */\ntag_25:\n    /* \"#utility.yul\":1589:1592   */\n  0x00\n    /* \"#utility.yul\":1627:1633   */\n  dup3\n    /* \"#utility.yul\":1621:1634   */\n  mload\n    /* \"#utility.yul\":1673:1679   */\n  dup1\n    /* \"#utility.yul\":1666:1670   */\n  0x20\n    /* \"#utility.yul\":1658:1664   */\n  dup6\n    /* \"#utility.yul\":1654:1671   */\n  add\n    /* \"#utility.yul\":1649:1652   */\n  dup5\n    /* \"#utility.yul\":1643:1680   */\n  mcopy\n    /* \"#utility.yul\":1735:1736   */\n  0x00\n    /* \"#utility.yul\":1699:1715   */\n  swap3\n  add\n    /* \"#utility.yul\":1724:1737   */\n  swap2\n  dup3\n  mstore\n  pop\n    /* \"#utility.yul\":1699:1715   */\n  swap2\n    /* \"#utility.yul\":1460:1761   */\n  swap1\n  pop\n  jump\t// out\ntag_46:\n    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n      mstore(0x40, 0x80)\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n      tag_5\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":2649:2658  _fallback */\n      tag_6\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n      stop\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n    tag_6:\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n      tag_8\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n      tag_9\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":2381:2396  _implementation */\n      tag_10\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n      jump\t// in\n    tag_9:\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":2371:2380  _delegate */\n      tag_11\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n      jump\t// in\n    tag_8:\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1583:1715  function _implementation() internal view virtual override returns (address) {... */\n    tag_10:\n        /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1650:1657  address */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1676:1708  ERC1967Utils.getImplementation() */\n      tag_13\n        /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1676:1708  ERC1967Utils.getImplementation() */\n    tag_13:\n        /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1669:1708  return ERC1967Utils.getImplementation() */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1583:1715  function _implementation() internal view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":949:1844  function _delegate(address implementation) internal virtual {... */\n    tag_11:\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1287:1301  calldatasize() */\n      calldatasize\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1284:1285  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1281:1282  0 */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1268:1302  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1501:1502  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1498:1499  0 */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1482:1496  calldatasize() */\n      calldatasize\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1479:1480  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1463:1477  implementation */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1456:1461  gas() */\n      gas\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1443:1503  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1577:1593  returndatasize() */\n      returndatasize\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1574:1575  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1571:1572  0 */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1556:1594  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1615:1621  result */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n      dup1\n      iszero\n      tag_17\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1797:1813  returndatasize() */\n      returndatasize\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1794:1795  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1787:1814  return(0, returndatasize()) */\n      return\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n    tag_17:\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1717:1733  returndatasize() */\n      returndatasize\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1714:1715  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":1707:1734  revert(0, returndatasize()) */\n      revert\n\n    auxdata: 0xa26469706673582212203b2d6f41bded9c19e82ca49c0b7f2b82454b931ad50245558c45f6b4e152a2e264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_45": {
									"entryPoint": null,
									"id": 45,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkNonPayable_351": {
									"entryPoint": 383,
									"id": 351,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_657": {
									"entryPoint": 511,
									"id": 657,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_131": {
									"entryPoint": 145,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_575": {
									"entryPoint": 268,
									"id": 575,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_715": {
									"entryPoint": null,
									"id": 715,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@upgradeToAndCall_167": {
									"entryPoint": 51,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_615": {
									"entryPoint": 416,
									"id": 615,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1763:8",
										"nodeType": "YulBlock",
										"src": "0:1763:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:8",
													"nodeType": "YulBlock",
													"src": "46:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:8",
																		"nodeType": "YulLiteral",
																		"src": "63:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:8",
																				"nodeType": "YulLiteral",
																				"src": "70:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:8",
																				"nodeType": "YulLiteral",
																				"src": "75:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:8"
																		},
																		"nativeSrc": "66:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:8"
																},
																"nativeSrc": "56:31:8",
																"nodeType": "YulFunctionCall",
																"src": "56:31:8"
															},
															"nativeSrc": "56:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:8",
																		"nodeType": "YulLiteral",
																		"src": "103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:8",
																		"nodeType": "YulLiteral",
																		"src": "106:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:8"
																},
																"nativeSrc": "96:15:8",
																"nodeType": "YulFunctionCall",
																"src": "96:15:8"
															},
															"nativeSrc": "96:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:8",
																		"nodeType": "YulLiteral",
																		"src": "127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:8",
																		"nodeType": "YulLiteral",
																		"src": "130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:8"
																},
																"nativeSrc": "120:15:8",
																"nodeType": "YulFunctionCall",
																"src": "120:15:8"
															},
															"nativeSrc": "120:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:8"
											},
											{
												"body": {
													"nativeSrc": "253:994:8",
													"nodeType": "YulBlock",
													"src": "253:994:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "299:16:8",
																"nodeType": "YulBlock",
																"src": "299:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "308:1:8",
																					"nodeType": "YulLiteral",
																					"src": "308:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "311:1:8",
																					"nodeType": "YulLiteral",
																					"src": "311:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "301:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "301:6:8"
																			},
																			"nativeSrc": "301:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "301:12:8"
																		},
																		"nativeSrc": "301:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "301:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "274:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "274:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "283:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "283:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "270:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "270:3:8"
																		},
																		"nativeSrc": "270:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "270:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "295:2:8",
																		"nodeType": "YulLiteral",
																		"src": "295:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "266:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "266:3:8"
																},
																"nativeSrc": "266:32:8",
																"nodeType": "YulFunctionCall",
																"src": "266:32:8"
															},
															"nativeSrc": "263:52:8",
															"nodeType": "YulIf",
															"src": "263:52:8"
														},
														{
															"nativeSrc": "324:29:8",
															"nodeType": "YulVariableDeclaration",
															"src": "324:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "343:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "343:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "337:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "337:5:8"
																},
																"nativeSrc": "337:16:8",
																"nodeType": "YulFunctionCall",
																"src": "337:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "328:5:8",
																	"nodeType": "YulTypedName",
																	"src": "328:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "416:16:8",
																"nodeType": "YulBlock",
																"src": "416:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "425:1:8",
																					"nodeType": "YulLiteral",
																					"src": "425:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "428:1:8",
																					"nodeType": "YulLiteral",
																					"src": "428:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "418:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "418:6:8"
																			},
																			"nativeSrc": "418:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "418:12:8"
																		},
																		"nativeSrc": "418:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "418:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "375:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "375:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "386:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "386:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "401:3:8",
																										"nodeType": "YulLiteral",
																										"src": "401:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "406:1:8",
																										"nodeType": "YulLiteral",
																										"src": "406:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "397:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "397:3:8"
																								},
																								"nativeSrc": "397:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "397:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "410:1:8",
																								"nodeType": "YulLiteral",
																								"src": "410:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "393:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "393:3:8"
																						},
																						"nativeSrc": "393:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "393:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "382:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "382:3:8"
																				},
																				"nativeSrc": "382:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "382:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "372:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "372:2:8"
																		},
																		"nativeSrc": "372:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "372:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "365:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:8"
																},
																"nativeSrc": "365:50:8",
																"nodeType": "YulFunctionCall",
																"src": "365:50:8"
															},
															"nativeSrc": "362:70:8",
															"nodeType": "YulIf",
															"src": "362:70:8"
														},
														{
															"nativeSrc": "441:15:8",
															"nodeType": "YulAssignment",
															"src": "441:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "451:5:8",
																"nodeType": "YulIdentifier",
																"src": "451:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "441:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "441:6:8"
																}
															]
														},
														{
															"nativeSrc": "465:39:8",
															"nodeType": "YulVariableDeclaration",
															"src": "465:39:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "489:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "489:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "500:2:8",
																				"nodeType": "YulLiteral",
																				"src": "500:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "485:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "485:3:8"
																		},
																		"nativeSrc": "485:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "485:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "479:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "479:5:8"
																},
																"nativeSrc": "479:25:8",
																"nodeType": "YulFunctionCall",
																"src": "479:25:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "469:6:8",
																	"nodeType": "YulTypedName",
																	"src": "469:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "547:16:8",
																"nodeType": "YulBlock",
																"src": "547:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "556:1:8",
																					"nodeType": "YulLiteral",
																					"src": "556:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "559:1:8",
																					"nodeType": "YulLiteral",
																					"src": "559:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "549:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "549:6:8"
																			},
																			"nativeSrc": "549:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "549:12:8"
																		},
																		"nativeSrc": "549:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "549:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "519:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "519:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "535:2:8",
																						"nodeType": "YulLiteral",
																						"src": "535:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "539:1:8",
																						"nodeType": "YulLiteral",
																						"src": "539:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "531:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "531:3:8"
																				},
																				"nativeSrc": "531:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "531:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "543:1:8",
																				"nodeType": "YulLiteral",
																				"src": "543:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "527:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "527:3:8"
																		},
																		"nativeSrc": "527:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "527:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "516:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "516:2:8"
																},
																"nativeSrc": "516:30:8",
																"nodeType": "YulFunctionCall",
																"src": "516:30:8"
															},
															"nativeSrc": "513:50:8",
															"nodeType": "YulIf",
															"src": "513:50:8"
														},
														{
															"nativeSrc": "572:32:8",
															"nodeType": "YulVariableDeclaration",
															"src": "572:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "586:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "586:9:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "597:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "597:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "582:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "582:3:8"
																},
																"nativeSrc": "582:22:8",
																"nodeType": "YulFunctionCall",
																"src": "582:22:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "576:2:8",
																	"nodeType": "YulTypedName",
																	"src": "576:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "652:16:8",
																"nodeType": "YulBlock",
																"src": "652:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "661:1:8",
																					"nodeType": "YulLiteral",
																					"src": "661:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "664:1:8",
																					"nodeType": "YulLiteral",
																					"src": "664:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "654:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "654:6:8"
																			},
																			"nativeSrc": "654:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "654:12:8"
																		},
																		"nativeSrc": "654:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "654:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "631:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "631:2:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "635:4:8",
																						"nodeType": "YulLiteral",
																						"src": "635:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "627:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "627:3:8"
																				},
																				"nativeSrc": "627:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "627:13:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "642:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "642:7:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "623:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "623:3:8"
																		},
																		"nativeSrc": "623:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "623:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "616:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "616:6:8"
																},
																"nativeSrc": "616:35:8",
																"nodeType": "YulFunctionCall",
																"src": "616:35:8"
															},
															"nativeSrc": "613:55:8",
															"nodeType": "YulIf",
															"src": "613:55:8"
														},
														{
															"nativeSrc": "677:23:8",
															"nodeType": "YulVariableDeclaration",
															"src": "677:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "697:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "697:2:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "691:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "691:5:8"
																},
																"nativeSrc": "691:9:8",
																"nodeType": "YulFunctionCall",
																"src": "691:9:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "681:6:8",
																	"nodeType": "YulTypedName",
																	"src": "681:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "743:22:8",
																"nodeType": "YulBlock",
																"src": "743:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "745:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "745:16:8"
																			},
																			"nativeSrc": "745:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "745:18:8"
																		},
																		"nativeSrc": "745:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "745:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "715:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "715:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "731:2:8",
																						"nodeType": "YulLiteral",
																						"src": "731:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "735:1:8",
																						"nodeType": "YulLiteral",
																						"src": "735:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "727:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "727:3:8"
																				},
																				"nativeSrc": "727:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "727:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "739:1:8",
																				"nodeType": "YulLiteral",
																				"src": "739:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "723:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "723:3:8"
																		},
																		"nativeSrc": "723:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "723:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "712:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "712:2:8"
																},
																"nativeSrc": "712:30:8",
																"nodeType": "YulFunctionCall",
																"src": "712:30:8"
															},
															"nativeSrc": "709:56:8",
															"nodeType": "YulIf",
															"src": "709:56:8"
														},
														{
															"nativeSrc": "774:23:8",
															"nodeType": "YulVariableDeclaration",
															"src": "774:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "794:2:8",
																		"nodeType": "YulLiteral",
																		"src": "794:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "788:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "788:5:8"
																},
																"nativeSrc": "788:9:8",
																"nodeType": "YulFunctionCall",
																"src": "788:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "778:6:8",
																	"nodeType": "YulTypedName",
																	"src": "778:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "806:85:8",
															"nodeType": "YulVariableDeclaration",
															"src": "806:85:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "828:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "828:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "852:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "852:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "860:4:8",
																										"nodeType": "YulLiteral",
																										"src": "860:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "848:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "848:3:8"
																								},
																								"nativeSrc": "848:17:8",
																								"nodeType": "YulFunctionCall",
																								"src": "848:17:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "871:2:8",
																										"nodeType": "YulLiteral",
																										"src": "871:2:8",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "867:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "867:3:8"
																								},
																								"nativeSrc": "867:7:8",
																								"nodeType": "YulFunctionCall",
																								"src": "867:7:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "844:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "844:3:8"
																						},
																						"nativeSrc": "844:31:8",
																						"nodeType": "YulFunctionCall",
																						"src": "844:31:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "877:2:8",
																						"nodeType": "YulLiteral",
																						"src": "877:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "840:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "840:3:8"
																				},
																				"nativeSrc": "840:40:8",
																				"nodeType": "YulFunctionCall",
																				"src": "840:40:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "886:2:8",
																						"nodeType": "YulLiteral",
																						"src": "886:2:8",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "882:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "882:3:8"
																				},
																				"nativeSrc": "882:7:8",
																				"nodeType": "YulFunctionCall",
																				"src": "882:7:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "836:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "836:3:8"
																		},
																		"nativeSrc": "836:54:8",
																		"nodeType": "YulFunctionCall",
																		"src": "836:54:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "824:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "824:3:8"
																},
																"nativeSrc": "824:67:8",
																"nodeType": "YulFunctionCall",
																"src": "824:67:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "810:10:8",
																	"nodeType": "YulTypedName",
																	"src": "810:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "966:22:8",
																"nodeType": "YulBlock",
																"src": "966:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "968:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "968:16:8"
																			},
																			"nativeSrc": "968:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "968:18:8"
																		},
																		"nativeSrc": "968:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "968:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "909:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "909:10:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "929:2:8",
																								"nodeType": "YulLiteral",
																								"src": "929:2:8",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "933:1:8",
																								"nodeType": "YulLiteral",
																								"src": "933:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "925:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "925:3:8"
																						},
																						"nativeSrc": "925:10:8",
																						"nodeType": "YulFunctionCall",
																						"src": "925:10:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "937:1:8",
																						"nodeType": "YulLiteral",
																						"src": "937:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "921:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "921:3:8"
																				},
																				"nativeSrc": "921:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "921:18:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "906:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "906:2:8"
																		},
																		"nativeSrc": "906:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "906:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "945:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "945:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "957:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "957:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "942:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "942:2:8"
																		},
																		"nativeSrc": "942:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "942:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "903:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "903:2:8"
																},
																"nativeSrc": "903:62:8",
																"nodeType": "YulFunctionCall",
																"src": "903:62:8"
															},
															"nativeSrc": "900:88:8",
															"nodeType": "YulIf",
															"src": "900:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1004:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1004:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1008:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "1008:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "997:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "997:6:8"
																},
																"nativeSrc": "997:22:8",
																"nodeType": "YulFunctionCall",
																"src": "997:22:8"
															},
															"nativeSrc": "997:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "997:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1035:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1035:6:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1043:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1043:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1028:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1028:6:8"
																},
																"nativeSrc": "1028:22:8",
																"nodeType": "YulFunctionCall",
																"src": "1028:22:8"
															},
															"nativeSrc": "1028:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "1028:22:8"
														},
														{
															"body": {
																"nativeSrc": "1100:16:8",
																"nodeType": "YulBlock",
																"src": "1100:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1109:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1109:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1102:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1102:6:8"
																			},
																			"nativeSrc": "1102:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1102:12:8"
																		},
																		"nativeSrc": "1102:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1102:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1073:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "1073:2:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1077:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1077:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1069:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1069:3:8"
																				},
																				"nativeSrc": "1069:15:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1069:15:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1086:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1086:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1065:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1065:3:8"
																		},
																		"nativeSrc": "1065:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1065:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1091:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "1091:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1062:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1062:2:8"
																},
																"nativeSrc": "1062:37:8",
																"nodeType": "YulFunctionCall",
																"src": "1062:37:8"
															},
															"nativeSrc": "1059:57:8",
															"nodeType": "YulIf",
															"src": "1059:57:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1135:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1135:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1143:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1143:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1131:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1131:3:8"
																		},
																		"nativeSrc": "1131:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1131:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "1152:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "1152:2:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1156:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1156:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1148:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1148:3:8"
																		},
																		"nativeSrc": "1148:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1148:11:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1161:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1161:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1125:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1125:5:8"
																},
																"nativeSrc": "1125:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1125:43:8"
															},
															"nativeSrc": "1125:43:8",
															"nodeType": "YulExpressionStatement",
															"src": "1125:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "1192:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1192:6:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1200:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1200:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1188:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1188:3:8"
																				},
																				"nativeSrc": "1188:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1188:19:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1209:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1209:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1184:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1184:3:8"
																		},
																		"nativeSrc": "1184:28:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1184:28:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1214:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1214:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1177:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1177:6:8"
																},
																"nativeSrc": "1177:39:8",
																"nodeType": "YulFunctionCall",
																"src": "1177:39:8"
															},
															"nativeSrc": "1177:39:8",
															"nodeType": "YulExpressionStatement",
															"src": "1177:39:8"
														},
														{
															"nativeSrc": "1225:16:8",
															"nodeType": "YulAssignment",
															"src": "1225:16:8",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1235:6:8",
																"nodeType": "YulIdentifier",
																"src": "1235:6:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1225:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1225:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
												"nativeSrc": "146:1101:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "211:9:8",
														"nodeType": "YulTypedName",
														"src": "211:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "222:7:8",
														"nodeType": "YulTypedName",
														"src": "222:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "234:6:8",
														"nodeType": "YulTypedName",
														"src": "234:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "242:6:8",
														"nodeType": "YulTypedName",
														"src": "242:6:8",
														"type": ""
													}
												],
												"src": "146:1101:8"
											},
											{
												"body": {
													"nativeSrc": "1353:102:8",
													"nodeType": "YulBlock",
													"src": "1353:102:8",
													"statements": [
														{
															"nativeSrc": "1363:26:8",
															"nodeType": "YulAssignment",
															"src": "1363:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1375:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1386:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1386:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1371:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1371:3:8"
																},
																"nativeSrc": "1371:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1371:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1363:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1363:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1405:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1405:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1420:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1420:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1436:3:8",
																								"nodeType": "YulLiteral",
																								"src": "1436:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1441:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1441:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1432:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1432:3:8"
																						},
																						"nativeSrc": "1432:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1432:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1445:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1445:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1428:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1428:3:8"
																				},
																				"nativeSrc": "1428:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1428:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1416:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1416:3:8"
																		},
																		"nativeSrc": "1416:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1416:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1398:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1398:6:8"
																},
																"nativeSrc": "1398:51:8",
																"nodeType": "YulFunctionCall",
																"src": "1398:51:8"
															},
															"nativeSrc": "1398:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "1398:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1252:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1322:9:8",
														"nodeType": "YulTypedName",
														"src": "1322:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1333:6:8",
														"nodeType": "YulTypedName",
														"src": "1333:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1344:4:8",
														"nodeType": "YulTypedName",
														"src": "1344:4:8",
														"type": ""
													}
												],
												"src": "1252:203:8"
											},
											{
												"body": {
													"nativeSrc": "1597:164:8",
													"nodeType": "YulBlock",
													"src": "1597:164:8",
													"statements": [
														{
															"nativeSrc": "1607:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1607:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1627:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1627:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1621:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1621:5:8"
																},
																"nativeSrc": "1621:13:8",
																"nodeType": "YulFunctionCall",
																"src": "1621:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1611:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1611:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1649:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1649:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1658:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1658:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1666:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1666:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1654:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1654:3:8"
																		},
																		"nativeSrc": "1654:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1654:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1673:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1673:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1643:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1643:5:8"
																},
																"nativeSrc": "1643:37:8",
																"nodeType": "YulFunctionCall",
																"src": "1643:37:8"
															},
															"nativeSrc": "1643:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "1643:37:8"
														},
														{
															"nativeSrc": "1689:26:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1689:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1703:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1703:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1708:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1708:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1699:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1699:3:8"
																},
																"nativeSrc": "1699:16:8",
																"nodeType": "YulFunctionCall",
																"src": "1699:16:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1693:2:8",
																	"nodeType": "YulTypedName",
																	"src": "1693:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1731:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "1731:2:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1735:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1724:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1724:6:8"
																},
																"nativeSrc": "1724:13:8",
																"nodeType": "YulFunctionCall",
																"src": "1724:13:8"
															},
															"nativeSrc": "1724:13:8",
															"nodeType": "YulExpressionStatement",
															"src": "1724:13:8"
														},
														{
															"nativeSrc": "1746:9:8",
															"nodeType": "YulAssignment",
															"src": "1746:9:8",
															"value": {
																"name": "_1",
																"nativeSrc": "1753:2:8",
																"nodeType": "YulIdentifier",
																"src": "1753:2:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1746:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1746:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "1460:301:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1573:3:8",
														"nodeType": "YulTypedName",
														"src": "1573:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1578:6:8",
														"nodeType": "YulTypedName",
														"src": "1578:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1589:3:8",
														"nodeType": "YulTypedName",
														"src": "1589:3:8",
														"type": ""
													}
												],
												"src": "1460:301:8"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := mload(_1)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        mcopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526040516103d03803806103d08339810160408190526100229161023c565b61002c8282610033565b5050610321565b61003c82610091565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561008557610080828261010c565b505050565b61008d61017f565b5050565b806001600160a01b03163b5f036100cb57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051610128919061030b565b5f60405180830381855af49150503d805f8114610160576040519150601f19603f3d011682016040523d82523d5f602084013e610165565b606091505b5090925090506101768583836101a0565b95945050505050565b341561019e5760405163b398979f60e01b815260040160405180910390fd5b565b6060826101b5576101b0826101ff565b6101f8565b81511580156101cc57506001600160a01b0384163b155b156101f557604051639996b31560e01b81526001600160a01b03851660048201526024016100c2565b50805b9392505050565b80511561020f5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b5f806040838503121561024d575f80fd5b82516001600160a01b0381168114610263575f80fd5b60208401519092506001600160401b0381111561027e575f80fd5b8301601f8101851361028e575f80fd5b80516001600160401b038111156102a7576102a7610228565b604051601f8201601f19908116603f011681016001600160401b03811182821017156102d5576102d5610228565b6040528181528282016020018710156102ec575f80fd5b8160208401602083015e5f602083830101528093505050509250929050565b5f82518060208501845e5f920191825250919050565b60a38061032d5f395ff3fe6080604052600a600c565b005b60186014601a565b6050565b565b5f604b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f80375f80365f845af43d5f803e8080156069573d5ff35b3d5ffdfea26469706673582212203b2d6f41bded9c19e82ca49c0b7f2b82454b931ad50245558c45f6b4e152a2e264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3D0 CODESIZE SUB DUP1 PUSH2 0x3D0 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x23C JUMP JUMPDEST PUSH2 0x2C DUP3 DUP3 PUSH2 0x33 JUMP JUMPDEST POP POP PUSH2 0x321 JUMP JUMPDEST PUSH2 0x3C DUP3 PUSH2 0x91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x85 JUMPI PUSH2 0x80 DUP3 DUP3 PUSH2 0x10C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8D PUSH2 0x17F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0xCB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x30B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x160 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x165 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x176 DUP6 DUP4 DUP4 PUSH2 0x1A0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1B5 JUMPI PUSH2 0x1B0 DUP3 PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1F8 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1CC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xC2 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x20F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x263 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x27E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x28E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2A7 JUMPI PUSH2 0x2A7 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2D5 JUMPI PUSH2 0x2D5 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x2EC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA3 DUP1 PUSH2 0x32D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x50 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x4B PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x69 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0x2D PUSH16 0x41BDED9C19E82CA49C0B7F2B82454B93 BYTE 0xD5 MUL GASLIMIT SSTORE DUP13 GASLIMIT 0xF6 0xB4 0xE1 MSTORE LOG2 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "600:1117:1:-:0;;;1081:133;;;;;;;;;;;;;;;;;;:::i;:::-;1155:52;1185:14;1201:5;1155:29;:52::i;:::-;1081:133;;600:1117;;2264:344:2;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:2;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2264:344;;:::o;2454:148::-;2573:18;:16;:18::i;:::-;2264:344;;:::o;1671:281::-;1748:17;-1:-1:-1;;;;;1748:29:2;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:2;;-1:-1:-1;;;;;1416:32:8;;1805:47:2;;;1398:51:8;1371:18;;1805:47:2;;;;;;;;1744:119;811:66;1872:73;;-1:-1:-1;;;;;;1872:73:2;-1:-1:-1;;;;;1872:73:2;;;;;;;;;;1671:281::o;3916:253:5:-;3999:12;4024;4038:23;4065:6;-1:-1:-1;;;;;4065:19:5;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4023:67:5;;-1:-1:-1;4023:67:5;-1:-1:-1;4107:55:5;4134:6;4023:67;;4107:26;:55::i;:::-;4100:62;3916:253;-1:-1:-1;;;;;3916:253:5:o;6113:122:2:-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:2;;;;;;;;;;;6159:70;6113:122::o;4437:582:5:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4857:17;;:22;:49;;;;-1:-1:-1;;;;;;4883:18:5;;;:23;4857:49;4853:119;;;4933:24;;-1:-1:-1;;;4933:24:5;;-1:-1:-1;;;;;1416:32:8;;4933:24:5;;;1398:51:8;1371:18;;4933:24:5;1252:203:8;4853:119:5;-1:-1:-1;4992:10:5;4605:408;4437:582;;;;;:::o;5559:487::-;5690:17;;:21;5686:354;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;-1:-1:-1;;;6010:19:5;;;;;;;;;;;14:127:8;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1101;234:6;242;295:2;283:9;274:7;270:23;266:32;263:52;;;311:1;308;301:12;263:52;337:16;;-1:-1:-1;;;;;382:31:8;;372:42;;362:70;;428:1;425;418:12;362:70;500:2;485:18;;479:25;451:5;;-1:-1:-1;;;;;;516:30:8;;513:50;;;559:1;556;549:12;513:50;582:22;;635:4;627:13;;623:27;-1:-1:-1;613:55:8;;664:1;661;654:12;613:55;691:9;;-1:-1:-1;;;;;712:30:8;;709:56;;;745:18;;:::i;:::-;794:2;788:9;886:2;848:17;;-1:-1:-1;;844:31:8;;;877:2;840:40;836:54;824:67;;-1:-1:-1;;;;;906:34:8;;942:22;;;903:62;900:88;;;968:18;;:::i;:::-;1004:2;997:22;1028;;;1069:15;;;1086:2;1065:24;1062:37;-1:-1:-1;1059:57:8;;;1112:1;1109;1102:12;1059:57;1161:6;1156:2;1152;1148:11;1143:2;1135:6;1131:15;1125:43;1214:1;1209:2;1200:6;1192;1188:19;1184:28;1177:39;1235:6;1225:16;;;;;146:1101;;;;;:::o;1460:301::-;1589:3;1627:6;1621:13;1673:6;1666:4;1658:6;1654:17;1649:3;1643:37;1735:1;1699:16;;1724:13;;;-1:-1:-1;1699:16:8;1460:301;-1:-1:-1;1460:301:8:o;:::-;600:1117:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_387": {
									"entryPoint": null,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_363": {
									"entryPoint": 80,
									"id": 363,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_379": {
									"entryPoint": 12,
									"id": 379,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_implementation_57": {
									"entryPoint": 26,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAddressSlot_715": {
									"entryPoint": null,
									"id": 715,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600a600c565b005b60186014601a565b6050565b565b5f604b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f80375f80365f845af43d5f803e8080156069573d5ff35b3d5ffdfea26469706673582212203b2d6f41bded9c19e82ca49c0b7f2b82454b931ad50245558c45f6b4e152a2e264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x50 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x4B PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x69 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0x2D PUSH16 0x41BDED9C19E82CA49C0B7F2B82454B93 BYTE 0xD5 MUL GASLIMIT SSTORE DUP13 GASLIMIT 0xF6 0xB4 0xE1 MSTORE LOG2 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "600:1117:1:-:0;;;2649:11:3;:9;:11::i;:::-;600:1117:1;2323:83:3;2371:28;2381:17;:15;:17::i;:::-;2371:9;:28::i;:::-;2323:83::o;1583:132:1:-;1650:7;1676:32;811:66:2;1519:53;-1:-1:-1;;;;;1519:53:2;;1441:138;1676:32:1;1669:39;;1583:132;:::o;949:895:3:-;1287:14;1284:1;1281;1268:34;1501:1;1498;1482:14;1479:1;1463:14;1456:5;1443:60;1577:16;1574:1;1571;1556:38;1615:6;1682:66;;;;1797:16;1794:1;1787:27;1682:66;1717:16;1714:1;1707:27"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "32600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_implementation()": "2155"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1081,
									"end": 1214,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1185,
									"end": 1199,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1201,
									"end": 1206,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1155,
									"end": 1207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1207,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1155,
									"end": 1207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2392,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2374,
									"end": 2391,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2373,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2355,
									"end": 2392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2392,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2355,
									"end": 2392,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "LOG2",
									"source": 2
								},
								{
									"begin": 2458,
									"end": 2469,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2458,
									"end": 2469,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2458,
									"end": 2473,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2454,
									"end": 2602,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2454,
									"end": 2602,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2489,
									"end": 2542,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2518,
									"end": 2535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2537,
									"end": 2541,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2489,
									"end": 2517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2489,
									"end": 2542,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2489,
									"end": 2542,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2489,
									"end": 2542,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2489,
									"end": 2542,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2264,
									"end": 2608,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2454,
									"end": 2602,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2454,
									"end": 2602,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2573,
									"end": 2589,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2573,
									"end": 2591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2264,
									"end": 2608,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1952,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1952,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1748,
									"end": 1765,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1748,
									"end": 1777,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1748,
									"end": 1777,
									"name": "EXTCODESIZE",
									"source": 2
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1782,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1744,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1744,
									"end": 1863,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4C9C8CE3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1416,
									"end": 1448,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1416,
									"end": 1448,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1398,
									"end": 1449,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1744,
									"end": 1863,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1744,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 811,
									"end": 877,
									"name": "PUSH",
									"source": 2,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1952,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3916,
									"end": 4169,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 3916,
									"end": 4169,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3999,
									"end": 4011,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 4024,
									"end": 4036,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4038,
									"end": 4061,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4071,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4065,
									"end": 4084,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4085,
									"end": 4089,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 4065,
									"end": 4090,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "GAS",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DELEGATECALL",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "RETURNDATACOPY",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4023,
									"end": 4090,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4023,
									"end": 4090,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4023,
									"end": 4090,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4107,
									"end": 4162,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 4134,
									"end": 4140,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4023,
									"end": 4090,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4023,
									"end": 4090,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4107,
									"end": 4133,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 4107,
									"end": 4162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4107,
									"end": 4162,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 4107,
									"end": 4162,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4100,
									"end": 4162,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 3916,
									"end": 4169,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3916,
									"end": 4169,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6113,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 6113,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6163,
									"end": 6172,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 6163,
									"end": 6176,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B398979F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6113,
									"end": 6235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4581,
									"end": 4593,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 4610,
									"end": 4617,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4633,
									"end": 4652,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 4641,
									"end": 4651,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4633,
									"end": 4640,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 4633,
									"end": 4652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4633,
									"end": 4652,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 4633,
									"end": 4652,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4874,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4874,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4879,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4883,
									"end": 4901,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4883,
									"end": 4901,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4883,
									"end": 4901,
									"name": "EXTCODESIZE",
									"source": 5
								},
								{
									"begin": 4883,
									"end": 4906,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4853,
									"end": 4972,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4853,
									"end": 4972,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4853,
									"end": 4972,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9996B315"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1416,
									"end": 1448,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1416,
									"end": 1448,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1398,
									"end": 1449,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1252,
									"end": 1455,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4853,
									"end": 4972,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4853,
									"end": 4972,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4992,
									"end": 5002,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4437,
									"end": 5019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5559,
									"end": 6046,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 5559,
									"end": 6046,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5690,
									"end": 5707,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5690,
									"end": 5707,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5690,
									"end": 5711,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 5686,
									"end": 6040,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 5686,
									"end": 6040,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5887,
									"end": 5897,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5881,
									"end": 5898,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5943,
									"end": 5958,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5930,
									"end": 5940,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5926,
									"end": 5928,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5922,
									"end": 5941,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5915,
									"end": 5959,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 5686,
									"end": 6040,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 5686,
									"end": 6040,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D6BDA275"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1247,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 146,
									"end": 1247,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 234,
									"end": 240,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 248,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 295,
									"end": 297,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 283,
									"end": 292,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 274,
									"end": 281,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 270,
									"end": 293,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 266,
									"end": 298,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 263,
									"end": 315,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 263,
									"end": 315,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 263,
									"end": 315,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 311,
									"end": 312,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 308,
									"end": 309,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 301,
									"end": 313,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 263,
									"end": 315,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 263,
									"end": 315,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 337,
									"end": 353,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 337,
									"end": 353,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 382,
									"end": 413,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 382,
									"end": 413,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 372,
									"end": 414,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 372,
									"end": 414,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 362,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 362,
									"end": 432,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 428,
									"end": 429,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 425,
									"end": 426,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 418,
									"end": 430,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 362,
									"end": 432,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 362,
									"end": 432,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 500,
									"end": 502,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 503,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 485,
									"end": 503,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 479,
									"end": 504,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 451,
									"end": 456,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 451,
									"end": 456,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 516,
									"end": 546,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 516,
									"end": 546,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 513,
									"end": 563,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 513,
									"end": 563,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 513,
									"end": 563,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 559,
									"end": 560,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 557,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 549,
									"end": 561,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 513,
									"end": 563,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 513,
									"end": 563,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 582,
									"end": 604,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 582,
									"end": 604,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 635,
									"end": 639,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 627,
									"end": 640,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 627,
									"end": 640,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 623,
									"end": 650,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SGT",
									"source": -1
								},
								{
									"begin": 613,
									"end": 668,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 613,
									"end": 668,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 664,
									"end": 665,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 661,
									"end": 662,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 654,
									"end": 666,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 613,
									"end": 668,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 613,
									"end": 668,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 691,
									"end": 700,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 691,
									"end": 700,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 712,
									"end": 742,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 712,
									"end": 742,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 709,
									"end": 765,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 709,
									"end": 765,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 709,
									"end": 765,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 745,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 745,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 745,
									"end": 763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 745,
									"end": 763,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 745,
									"end": 763,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 794,
									"end": 796,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 788,
									"end": 797,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 886,
									"end": 888,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 848,
									"end": 865,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 848,
									"end": 865,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 844,
									"end": 875,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 844,
									"end": 875,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 844,
									"end": 875,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 877,
									"end": 879,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 840,
									"end": 880,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 836,
									"end": 890,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 824,
									"end": 891,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 824,
									"end": 891,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 906,
									"end": 940,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 906,
									"end": 940,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 942,
									"end": 964,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 942,
									"end": 964,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 942,
									"end": 964,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 903,
									"end": 965,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 900,
									"end": 988,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 900,
									"end": 988,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 900,
									"end": 988,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 968,
									"end": 986,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 968,
									"end": 986,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 968,
									"end": 986,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 968,
									"end": 986,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 968,
									"end": 986,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1004,
									"end": 1006,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 997,
									"end": 1019,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1028,
									"end": 1050,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1028,
									"end": 1050,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1028,
									"end": 1050,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1069,
									"end": 1084,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1069,
									"end": 1084,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1069,
									"end": 1084,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1088,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1065,
									"end": 1089,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1062,
									"end": 1099,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1059,
									"end": 1116,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1059,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1059,
									"end": 1116,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1112,
									"end": 1113,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1109,
									"end": 1110,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1102,
									"end": 1114,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1059,
									"end": 1116,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1059,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1167,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1156,
									"end": 1158,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1152,
									"end": 1154,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1148,
									"end": 1159,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1143,
									"end": 1145,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1131,
									"end": 1146,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1125,
									"end": 1168,
									"name": "MCOPY",
									"source": 8
								},
								{
									"begin": 1214,
									"end": 1215,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1211,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1200,
									"end": 1206,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1192,
									"end": 1198,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1188,
									"end": 1207,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1184,
									"end": 1212,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1177,
									"end": 1216,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1235,
									"end": 1241,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1225,
									"end": 1241,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1225,
									"end": 1241,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1225,
									"end": 1241,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1225,
									"end": 1241,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1225,
									"end": 1241,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1247,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1247,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1247,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1247,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1247,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1247,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1761,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1460,
									"end": 1761,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1589,
									"end": 1592,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1627,
									"end": 1633,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1621,
									"end": 1634,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1673,
									"end": 1679,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1670,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1658,
									"end": 1664,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1654,
									"end": 1671,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 1652,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1643,
									"end": 1680,
									"name": "MCOPY",
									"source": 8
								},
								{
									"begin": 1735,
									"end": 1736,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1699,
									"end": 1715,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1699,
									"end": 1715,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1724,
									"end": 1737,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1724,
									"end": 1737,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1724,
									"end": 1737,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1699,
									"end": 1715,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1761,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1460,
									"end": 1761,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1761,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1460,
									"end": 1761,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203b2d6f41bded9c19e82ca49c0b7f2b82454b931ad50245558c45f6b4e152a2e264736f6c634300081a0033",
									".code": [
										{
											"begin": 600,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 600,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 1717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2649,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2649,
											"end": 2660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 600,
											"end": 1717,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2406,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2323,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2381,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2381,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2371,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1715,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1583,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1844,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 949,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1287,
											"end": 1301,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1284,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1282,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1302,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1502,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1496,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1479,
											"end": 1480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1477,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1503,
											"name": "DELEGATECALL",
											"source": 3
										},
										{
											"begin": 1577,
											"end": 1593,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1594,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1621,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1813,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1794,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1717,
											"end": 1733,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1734,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/interfaces/IERC1967.sol",
								".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol",
								".deps/npm/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								".deps/npm/@openzeppelin/contracts/utils/Address.sol",
								".deps/npm/@openzeppelin/contracts/utils/Errors.sol",
								".deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa3066ff86b94128a9d3956a63a0511fa1aae41bd455772ab587b32ff322acb2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7b192fd82acf6187970c80548f624b1b9c80425b62fa49e7fdb538a52de049\",\"dweb:/ipfs/QmWXG1YCde1tqDYTbNwjkZDWVgPEjzaQGSDqWkyKLzaNua\"]},\".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\".deps/npm/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\".deps/npm/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\".deps/npm/@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\".deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220760a2294559b01e5b231b405023957aa0c33282fc5379b8a05c5b632fea3e52764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220760a2294559b01e5b231b405023957aa0c33282fc5379b8a05c5b632fea3e52764736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xA2294559B01E5B231B405023957AA0C33282FC5379B8A SDIV 0xC5 0xB6 ORIGIN INVALID LOG3 0xE5 0x27 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "496:5741:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;496:5741:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220760a2294559b01e5b231b405023957aa0c33282fc5379b8a05c5b632fea3e52764736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xA2294559B01E5B231B405023957AA0C33282FC5379B8A SDIV 0xC5 0xB6 ORIGIN INVALID LOG3 0xE5 0x27 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "496:5741:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220760a2294559b01e5b231b405023957aa0c33282fc5379b8a05c5b632fea3e52764736f6c634300081a0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/interfaces/IERC1967.sol",
								".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol",
								".deps/npm/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								".deps/npm/@openzeppelin/contracts/utils/Address.sol",
								".deps/npm/@openzeppelin/contracts/utils/Errors.sol",
								".deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\".deps/npm/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\".deps/npm/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\".deps/npm/@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\".deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122074f1280d178a9b940b367c4a1debecfb30a1dea6a5cb80ed0f46809eac9835ca64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122074f1280d178a9b940b367c4a1debecfb30a1dea6a5cb80ed0f46809eac9835ca64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xF1280D178A9B940B367C4A1DEBECFB30A1DEA6A5CB DUP1 0xED 0xF CHAINID DUP1 SWAP15 0xAC SWAP9 CALLDATALOAD 0xCA PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5815:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5815:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122074f1280d178a9b940b367c4a1debecfb30a1dea6a5cb80ed0f46809eac9835ca64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xF1280D178A9B940B367C4A1DEBECFB30A1DEA6A5CB DUP1 0xED 0xF CHAINID DUP1 SWAP15 0xAC SWAP9 CALLDATALOAD 0xCA PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5815:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122074f1280d178a9b940b367c4a1debecfb30a1dea6a5cb80ed0f46809eac9835ca64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/interfaces/IERC1967.sol",
								".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol",
								".deps/npm/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								".deps/npm/@openzeppelin/contracts/utils/Address.sol",
								".deps/npm/@openzeppelin/contracts/utils/Errors.sol",
								".deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\".deps/npm/@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122052f0f9a196a9c0aa4f5b9051a86340a1f764c0bd11ceb2f33cd847e6e92430ad64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122052f0f9a196a9c0aa4f5b9051a86340a1f764c0bd11ceb2f33cd847e6e92430ad64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE CREATE 0xF9 LOG1 SWAP7 0xA9 0xC0 0xAA 0x4F JUMPDEST SWAP1 MLOAD 0xA8 PUSH4 0x40A1F764 0xC0 0xBD GT 0xCE 0xB2 RETURN EXTCODECOPY 0xD8 SELFBALANCE 0xE6 0xE9 0x24 ADDRESS 0xAD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "411:484:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122052f0f9a196a9c0aa4f5b9051a86340a1f764c0bd11ceb2f33cd847e6e92430ad64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE CREATE 0xF9 LOG1 SWAP7 0xA9 0xC0 0xAA 0x4F JUMPDEST SWAP1 MLOAD 0xA8 PUSH4 0x40A1F764 0xC0 0xBD GT 0xCE 0xB2 RETURN EXTCODECOPY 0xD8 SELFBALANCE 0xE6 0xE9 0x24 ADDRESS 0xAD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "411:484:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122052f0f9a196a9c0aa4f5b9051a86340a1f764c0bd11ceb2f33cd847e6e92430ad64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/interfaces/IERC1967.sol",
								".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol",
								".deps/npm/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								".deps/npm/@openzeppelin/contracts/utils/Address.sol",
								".deps/npm/@openzeppelin/contracts/utils/Errors.sol",
								".deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b9580f4c8de14122de48396385ae7d145a1515592d06e0e0518d3c23cb205f2664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b9580f4c8de14122de48396385ae7d145a1515592d06e0e0518d3c23cb205f2664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 PC 0xF 0x4C DUP14 0xE1 COINBASE 0x22 0xDE BASEFEE CODECOPY PUSH4 0x85AE7D14 GAS ISZERO ISZERO MSIZE 0x2D MOD 0xE0 0xE0 MLOAD DUP14 EXTCODECOPY 0x23 0xCB KECCAK256 PUSH0 0x26 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1407:2774:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b9580f4c8de14122de48396385ae7d145a1515592d06e0e0518d3c23cb205f2664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 PC 0xF 0x4C DUP14 0xE1 COINBASE 0x22 0xDE BASEFEE CODECOPY PUSH4 0x85AE7D14 GAS ISZERO ISZERO MSIZE 0x2D MOD 0xE0 0xE0 MLOAD DUP14 EXTCODECOPY 0x23 0xCB KECCAK256 PUSH0 0x26 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1407:2774:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b9580f4c8de14122de48396385ae7d145a1515592d06e0e0518d3c23cb205f2664736f6c634300081a0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/interfaces/IERC1967.sol",
								".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol",
								".deps/npm/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								".deps/npm/@openzeppelin/contracts/utils/Address.sol",
								".deps/npm/@openzeppelin/contracts/utils/Errors.sol",
								".deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/npm/@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							20
						]
					},
					"id": 21,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:0",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "IERC1967",
							"nameLocation": "245:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:0",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 7,
									"name": "Upgraded",
									"nameLocation": "339:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "348:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:0"
									},
									"src": "333:47:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:0",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 14,
									"name": "AdminChanged",
									"nameLocation": "464:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "477:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "500:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:0"
									},
									"src": "458:60:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:0",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 19,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "609:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:0"
									},
									"src": "588:45:0"
								}
							],
							"scope": 21,
							"src": "235:400:0",
							"usedErrors": [],
							"usedEvents": [
								7,
								14,
								19
							]
						}
					],
					"src": "107:529:0"
				},
				"id": 0
			},
			".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
					"exportedSymbols": {
						"ERC1967Proxy": [
							58
						],
						"ERC1967Utils": [
							352
						],
						"Proxy": [
							388
						]
					},
					"id": 59,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:1"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol",
							"file": "../Proxy.sol",
							"id": 24,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 59,
							"sourceUnit": 389,
							"src": "140:35:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 23,
										"name": "Proxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 388,
										"src": "148:5:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "./ERC1967Utils.sol",
							"id": 26,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 59,
							"sourceUnit": 353,
							"src": "176:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 25,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 352,
										"src": "184:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 28,
										"name": "Proxy",
										"nameLocations": [
											"625:5:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 388,
										"src": "625:5:1"
									},
									"id": 29,
									"nodeType": "InheritanceSpecifier",
									"src": "625:5:1"
								}
							],
							"canonicalName": "ERC1967Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 27,
								"nodeType": "StructuredDocumentation",
								"src": "226:373:1",
								"text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."
							},
							"fullyImplemented": true,
							"id": 58,
							"linearizedBaseContracts": [
								58,
								388
							],
							"name": "ERC1967Proxy",
							"nameLocation": "609:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1145:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 40,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "1185:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 41,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "1201:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 37,
															"name": "ERC1967Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "1155:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$352_$",
																"typeString": "type(library ERC1967Utils)"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1168:16:1",
														"memberName": "upgradeToAndCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 167,
														"src": "1155:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1155:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1155:52:1"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "637:439:1",
										"text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n Requirements:\n - If `data` is empty, `msg.value` must be zero."
									},
									"id": 45,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1101:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1093:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1130:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1117:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 33,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1117:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:44:1"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1145:0:1"
									},
									"scope": 58,
									"src": "1081:133:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "1659:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 52,
															"name": "ERC1967Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "1676:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$352_$",
																"typeString": "type(library ERC1967Utils)"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1689:17:1",
														"memberName": "getImplementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "1676:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1676:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 51,
												"id": 55,
												"nodeType": "Return",
												"src": "1669:39:1"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1220:358:1",
										"text": " @dev Returns the current implementation address.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
									},
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "1592:15:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 48,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1632:8:1"
									},
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1607:2:1"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1650:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1650:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1649:9:1"
									},
									"scope": 58,
									"src": "1583:132:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 59,
							"src": "600:1117:1",
							"usedErrors": [
								78,
								91,
								408,
								671
							],
							"usedEvents": [
								7
							]
						}
					],
					"src": "114:1604:1"
				},
				"id": 1
			},
			".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							658
						],
						"ERC1967Utils": [
							352
						],
						"IBeacon": [
							398
						],
						"IERC1967": [
							20
						],
						"StorageSlot": [
							804
						]
					},
					"id": 353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 60,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:2"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 62,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 399,
							"src": "140:46:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 61,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 398,
										"src": "148:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 64,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 21,
							"src": "187:55:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 63,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 20,
										"src": "195:8:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 66,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 659,
							"src": "243:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 65,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 658,
										"src": "251:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 68,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 805,
							"src": "292:56:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 67,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 804,
										"src": "300:11:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 69,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:2",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 352,
							"linearizedBaseContracts": [
								352
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:2",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 73,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "763:114:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 71,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 72,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:2",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 78,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "993:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:2"
									},
									"src": "958:59:2"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:2",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 83,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1114:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:2"
									},
									"src": "1088:41:2"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:2",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 88,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1228:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:2"
									},
									"src": "1201:43:2"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:2",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 91,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:2"
									},
									"src": "1337:26:2"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1502:77:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 99,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "1546:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 97,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "1519:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$804_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:2",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 715,
															"src": "1519:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$686_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$686_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:2",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 685,
													"src": "1519:53:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 96,
												"id": 102,
												"nodeType": "Return",
												"src": "1512:60:2"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:2",
										"text": " @dev Returns the current implementation address."
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:2"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:2"
									},
									"scope": 352,
									"src": "1441:138:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1734:218:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 110,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "1748:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "1744:119:2",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "1784:79:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 116,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "1834:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 115,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "1805:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "1798:54:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 124,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "1899:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 121,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "1872:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$804_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:2",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 715,
																"src": "1872:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$686_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$686_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 685,
														"src": "1872:53:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "1928:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:2"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:2",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1699:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:2"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:2"
									},
									"scope": 352,
									"src": "1671:281:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "2345:263:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 140,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "2374:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 139,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "2355:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 146,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "2425:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 143,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "2407:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$20_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:2",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "2407:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "EmitStatement",
												"src": "2402:41:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 149,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "2458:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 164,
													"nodeType": "Block",
													"src": "2559:43:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 161,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "2573:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 163,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:2"
														}
													]
												},
												"id": 165,
												"nodeType": "IfStatement",
												"src": "2454:148:2",
												"trueBody": {
													"id": 160,
													"nodeType": "Block",
													"src": "2475:78:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 156,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "2518:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 157,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 136,
																		"src": "2537:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 153,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "2489:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$658_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:2",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 575,
																	"src": "2489:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 159,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:2",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "2290:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "2317:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:2"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:2"
									},
									"scope": 352,
									"src": "2264:344:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:2",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 171,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "2829:105:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 169,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 170,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "3339:68:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 179,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "3383:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 177,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "3356:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$804_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:2",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 715,
															"src": "3356:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$686_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$686_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:2",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 685,
													"src": "3356:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 176,
												"id": 182,
												"nodeType": "Return",
												"src": "3349:51:2"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:2",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:2"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "3330:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:2"
									},
									"scope": 352,
									"src": "3287:120:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3535:172:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 190,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "3549:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 191,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 204,
												"nodeType": "IfStatement",
												"src": "3545:91:2",
												"trueBody": {
													"id": 203,
													"nodeType": "Block",
													"src": "3573:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 197,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 196,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "3594:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 202,
															"nodeType": "RevertStatement",
															"src": "3587:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 208,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 171,
																	"src": "3672:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 205,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "3645:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$804_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:2",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 715,
																"src": "3645:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$686_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$686_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 685,
														"src": "3645:44:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 211,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "3692:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:2"
											}
										]
									},
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:2",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3509:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:2"
									},
									"scope": 352,
									"src": "3490:217:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "3875:94:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 224,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "3912:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 226,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3924:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 221,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "3890:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$20_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:2",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 14,
														"src": "3890:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "EmitStatement",
												"src": "3885:48:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 230,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3953:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 229,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "3943:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:2"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:2",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3848:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:2"
									},
									"scope": 352,
									"src": "3827:142:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:2",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 238,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "4246:106:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 236,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 237,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "4468:69:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 246,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "4512:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 244,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "4485:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$804_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:2",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 715,
															"src": "4485:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$686_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$686_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:2",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 685,
													"src": "4485:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 243,
												"id": 249,
												"nodeType": "Return",
												"src": "4478:52:2"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:2",
										"text": " @dev Returns the current beacon."
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "4459:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:2"
									},
									"scope": 352,
									"src": "4415:122:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "4667:390:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 257,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "4681:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 267,
												"nodeType": "IfStatement",
												"src": "4677:95:2",
												"trueBody": {
													"id": 266,
													"nodeType": "Block",
													"src": "4709:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 263,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "4751:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 262,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "4730:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 265,
															"nodeType": "RevertStatement",
															"src": "4723:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 271,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "4809:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 268,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "4782:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$804_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:2",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 715,
																"src": "4782:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$686_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$686_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 273,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 685,
														"src": "4782:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 274,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "4830:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:2"
											},
											{
												"assignments": [
													278
												],
												"declarations": [
													{
														"constant": false,
														"id": 278,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:2",
														"nodeType": "VariableDeclaration",
														"scope": 296,
														"src": "4850:28:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 277,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 284,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 280,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "4889:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 279,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "4881:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$398_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$398",
																"typeString": "contract IBeacon"
															}
														},
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:2",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 397,
														"src": "4881:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 285,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "4930:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 295,
												"nodeType": "IfStatement",
												"src": "4926:125:2",
												"trueBody": {
													"id": 294,
													"nodeType": "Block",
													"src": "4969:82:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 291,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 278,
																		"src": "5019:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 290,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "4990:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 293,
															"nodeType": "RevertStatement",
															"src": "4983:57:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:2",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4640:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:2"
									},
									"scope": 352,
									"src": "4620:437:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "5661:263:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 306,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "5682:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 305,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "5671:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 312,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "5731:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 309,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "5707:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$20_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:2",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "5707:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "EmitStatement",
												"src": "5702:39:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 315,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "5756:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 334,
													"nodeType": "Block",
													"src": "5875:43:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 331,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "5889:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 333,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:2"
														}
													]
												},
												"id": 335,
												"nodeType": "IfStatement",
												"src": "5752:166:2",
												"trueBody": {
													"id": 330,
													"nodeType": "Block",
													"src": "5773:96:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 323,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 300,
																						"src": "5824:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 322,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 398,
																					"src": "5816:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$398_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$398",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:2",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 397,
																			"src": "5816:33:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 327,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "5853:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 319,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "5787:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$658_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:2",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 575,
																	"src": "5787:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 329,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:2",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "5614:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "5633:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 301,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:2"
									},
									"scope": 352,
									"src": "5582:342:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "6149:86:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 341,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 349,
												"nodeType": "IfStatement",
												"src": "6159:70:2",
												"trueBody": {
													"id": 348,
													"nodeType": "Block",
													"src": "6178:51:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 345,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "6199:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 347,
															"nodeType": "RevertStatement",
															"src": "6192:26:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:2",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:2"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:2"
									},
									"scope": 352,
									"src": "6113:122:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 353,
							"src": "496:5741:2",
							"usedErrors": [
								78,
								83,
								88,
								91
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:2"
				},
				"id": 2
			},
			".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/proxy/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							388
						]
					},
					"id": 389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 355,
								"nodeType": "StructuredDocumentation",
								"src": "125:598:3",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 388,
							"linearizedBaseContracts": [
								388
							],
							"name": "Proxy",
							"nameLocation": "742:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "1009:835:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1028:810:3",
													"nodeType": "YulBlock",
													"src": "1028:810:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1281:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1281:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1284:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1284:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1287:12:3",
																			"nodeType": "YulIdentifier",
																			"src": "1287:12:3"
																		},
																		"nativeSrc": "1287:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1287:14:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1268:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1268:12:3"
																},
																"nativeSrc": "1268:34:3",
																"nodeType": "YulFunctionCall",
																"src": "1268:34:3"
															},
															"nativeSrc": "1268:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "1268:34:3"
														},
														{
															"nativeSrc": "1429:74:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1429:74:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "1456:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:3"
																		},
																		"nativeSrc": "1456:5:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1456:5:3"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "1463:14:3",
																		"nodeType": "YulIdentifier",
																		"src": "1463:14:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1479:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1479:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1482:12:3",
																			"nodeType": "YulIdentifier",
																			"src": "1482:12:3"
																		},
																		"nativeSrc": "1482:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1482:14:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1498:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1498:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1501:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1501:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nativeSrc": "1443:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1443:12:3"
																},
																"nativeSrc": "1443:60:3",
																"nodeType": "YulFunctionCall",
																"src": "1443:60:3"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "1433:6:3",
																	"nodeType": "YulTypedName",
																	"src": "1433:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1571:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1571:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1574:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1574:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "1577:14:3",
																			"nodeType": "YulIdentifier",
																			"src": "1577:14:3"
																		},
																		"nativeSrc": "1577:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1577:16:3"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "1556:14:3",
																	"nodeType": "YulIdentifier",
																	"src": "1556:14:3"
																},
																"nativeSrc": "1556:38:3",
																"nodeType": "YulFunctionCall",
																"src": "1556:38:3"
															},
															"nativeSrc": "1556:38:3",
															"nodeType": "YulExpressionStatement",
															"src": "1556:38:3"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1689:59:3",
																		"nodeType": "YulBlock",
																		"src": "1689:59:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1714:1:3",
																							"nodeType": "YulLiteral",
																							"src": "1714:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1717:14:3",
																								"nodeType": "YulIdentifier",
																								"src": "1717:14:3"
																							},
																							"nativeSrc": "1717:16:3",
																							"nodeType": "YulFunctionCall",
																							"src": "1717:16:3"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "1707:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1707:6:3"
																					},
																					"nativeSrc": "1707:27:3",
																					"nodeType": "YulFunctionCall",
																					"src": "1707:27:3"
																				},
																				"nativeSrc": "1707:27:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "1707:27:3"
																			}
																		]
																	},
																	"nativeSrc": "1682:66:3",
																	"nodeType": "YulCase",
																	"src": "1682:66:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1687:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1687:1:3",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "1769:59:3",
																		"nodeType": "YulBlock",
																		"src": "1769:59:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1794:1:3",
																							"nodeType": "YulLiteral",
																							"src": "1794:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1797:14:3",
																								"nodeType": "YulIdentifier",
																								"src": "1797:14:3"
																							},
																							"nativeSrc": "1797:16:3",
																							"nodeType": "YulFunctionCall",
																							"src": "1797:16:3"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nativeSrc": "1787:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1787:6:3"
																					},
																					"nativeSrc": "1787:27:3",
																					"nodeType": "YulFunctionCall",
																					"src": "1787:27:3"
																				},
																				"nativeSrc": "1787:27:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "1787:27:3"
																			}
																		]
																	},
																	"nativeSrc": "1761:67:3",
																	"nodeType": "YulCase",
																	"src": "1761:67:3",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nativeSrc": "1615:6:3",
																"nodeType": "YulIdentifier",
																"src": "1615:6:3"
															},
															"nativeSrc": "1608:220:3",
															"nodeType": "YulSwitch",
															"src": "1608:220:3"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 358,
														"isOffset": false,
														"isSlot": false,
														"src": "1463:14:3",
														"valueSize": 1
													}
												],
												"id": 361,
												"nodeType": "InlineAssembly",
												"src": "1019:819:3"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "754:190:3",
										"text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "958:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "976:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "968:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:24:3"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1009:0:3"
									},
									"scope": 388,
									"src": "949:895:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1850:173:3",
										"text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."
									},
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2037:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2052:2:3"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2086:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:9:3"
									},
									"scope": 388,
									"src": "2028:67:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "2361:45:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 374,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "2381:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2381:17:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 373,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "2371:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2371:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "2371:28:3"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2101:217:3",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "2332:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2341:2:3"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2361:0:3"
									},
									"scope": 388,
									"src": "2323:83:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "2639:28:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 383,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "2649:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2649:11:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "2649:11:3"
											}
										]
									},
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "2412:186:3",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 387,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2611:2:3"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2639:0:3"
									},
									"scope": 388,
									"src": "2603:64:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 389,
							"src": "724:1945:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:2571:3"
				},
				"id": 3
			},
			".deps/npm/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							398
						]
					},
					"id": 399,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 390,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 391,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:4",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 398,
							"linearizedBaseContracts": [
								398
							],
							"name": "IBeacon",
							"nameLocation": "224:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:4",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:4"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "460:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:4"
									},
									"scope": 398,
									"src": "411:58:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 399,
							"src": "214:257:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:4"
				},
				"id": 4
			},
			".deps/npm/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							658
						],
						"Errors": [
							680
						]
					},
					"id": 659,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 400,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 659,
							"sourceUnit": 681,
							"src": "127:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 401,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 680,
										"src": "135:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 658,
							"linearizedBaseContracts": [
								658
							],
							"name": "Address",
							"nameLocation": "241:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:5",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 408,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "358:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:5"
									},
									"src": "335:39:5"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "1361:294:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 418,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$658",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$658",
																		"typeString": "library Address"
																	}
																],
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 416,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 421,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "1399:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 435,
												"nodeType": "IfStatement",
												"src": "1371:125:5",
												"trueBody": {
													"id": 434,
													"nodeType": "Block",
													"src": "1407:89:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 428,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$658",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$658",
																						"typeString": "library Address"
																					}
																				],
																				"id": 427,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 426,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:5",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 431,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "1478:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 423,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "1428:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$680_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:5",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 668,
																	"src": "1428:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 433,
															"nodeType": "RevertStatement",
															"src": "1421:64:5"
														}
													]
												}
											},
											{
												"assignments": [
													437,
													439
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "1507:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 436,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 439,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "1521:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 438,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 446,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 440,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "1548:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 442,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "1570:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:5"
											},
											{
												"condition": {
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:5",
													"subExpression": {
														"id": 447,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "1596:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "1591:58:5",
												"trueBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "1605:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 450,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 439,
																		"src": "1627:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 449,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "1619:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 452,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "1309:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "1336:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:5"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:5"
									},
									"scope": 658,
									"src": "1290:365:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "2589:62:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 467,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "2628:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "2636:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 466,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2606:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 465,
												"id": 471,
												"nodeType": "Return",
												"src": "2599:45:5"
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "2522:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "2538:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 460,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:5"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "2575:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:5"
									},
									"scope": 658,
									"src": "2500:151:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3088:294:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 487,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$658",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$658",
																		"typeString": "library Address"
																	}
																],
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 485,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 490,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3126:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3098:123:5",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "3133:88:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 497,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$658",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$658",
																						"typeString": "library Address"
																					}
																				],
																				"id": 496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 495,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:5",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 500,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 480,
																		"src": "3204:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 492,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "3154:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$680_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:5",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 668,
																	"src": "3154:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 502,
															"nodeType": "RevertStatement",
															"src": "3147:63:5"
														}
													]
												}
											},
											{
												"assignments": [
													506,
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3231:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3245:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 507,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "3298:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 509,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "3272:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3291:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "3347:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3355:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 519,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3364:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 516,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3320:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 484,
												"id": 521,
												"nodeType": "Return",
												"src": "3313:62:5"
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3006:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3022:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 477,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3041:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:5"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3074:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 482,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:5"
									},
									"scope": 658,
									"src": "2975:407:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3621:154:5",
										"statements": [
											{
												"assignments": [
													534,
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3632:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3646:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 539,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3673:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3740:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "3748:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 545,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3757:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3713:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 532,
												"id": 547,
												"nodeType": "Return",
												"src": "3706:62:5"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3549:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3565:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:5"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3607:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:5"
									},
									"scope": 658,
									"src": "3521:254:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4013:156:5",
										"statements": [
											{
												"assignments": [
													560,
													562
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4024:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 559,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 562,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4038:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 561,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"arguments": [
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4085:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 563,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4065:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4134:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4142:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4151:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 568,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4107:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 558,
												"id": 573,
												"nodeType": "Return",
												"src": "4100:62:5"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3946:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3962:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:5"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3999:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:5"
									},
									"scope": 658,
									"src": "3916:253:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4595:424:5",
										"statements": [
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:5",
													"subExpression": {
														"id": 587,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4610:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "4669:344:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 594,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "4857:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 598,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "4883:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 609,
															"nodeType": "IfStatement",
															"src": "4853:119:5",
															"trueBody": {
																"id": 608,
																"nodeType": "Block",
																"src": "4908:64:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 605,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "4950:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 604,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 408,
																				"src": "4933:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 607,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 610,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "4992:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 586,
															"id": 611,
															"nodeType": "Return",
															"src": "4985:17:5"
														}
													]
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "4605:408:5",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "4619:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "4641:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 589,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "4633:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4482:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4506:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4528:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:5"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4581:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:5"
									},
									"scope": 658,
									"src": "4437:582:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5323:122:5",
										"statements": [
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:5",
													"subExpression": {
														"id": 625,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5338:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "5397:42:5",
													"statements": [
														{
															"expression": {
																"id": 632,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "5418:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 624,
															"id": 633,
															"nodeType": "Return",
															"src": "5411:17:5"
														}
													]
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "5333:106:5",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "5347:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "5369:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 627,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "5361:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 630,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:5",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5247:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5261:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:5"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5309:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:5"
									},
									"scope": 658,
									"src": "5221:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "5614:432:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 643,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5690:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "5989:51:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 649,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "6010:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$680_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6017:10:5",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 671,
																	"src": "6010:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6010:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 653,
															"nodeType": "RevertStatement",
															"src": "6003:26:5"
														}
													]
												},
												"id": 655,
												"nodeType": "IfStatement",
												"src": "5686:354:5",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "5713:270:5",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:133:5",
																"nodeType": "YulBlock",
																"src": "5840:133:5",
																"statements": [
																	{
																		"nativeSrc": "5858:40:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5858:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5887:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "5887:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5881:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5881:5:5"
																			},
																			"nativeSrc": "5881:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5862:15:5",
																				"nodeType": "YulTypedName",
																				"src": "5862:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5926:2:5",
																							"nodeType": "YulLiteral",
																							"src": "5926:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5930:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "5930:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5922:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:5"
																					},
																					"nativeSrc": "5922:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5922:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5943:15:5",
																					"nodeType": "YulIdentifier",
																					"src": "5943:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5915:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:5"
																			},
																			"nativeSrc": "5915:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:44:5"
																		},
																		"nativeSrc": "5915:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:44:5"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5887:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5930:10:5",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 647,
															"nodeType": "InlineAssembly",
															"src": "5815:158:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:5",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "5576:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:5"
									},
									"scope": 658,
									"src": "5559:487:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 659,
							"src": "233:5815:5",
							"usedErrors": [
								408
							],
							"usedEvents": []
						}
					],
					"src": "101:5948:5"
				},
				"id": 5
			},
			".deps/npm/@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							680
						]
					},
					"id": 681,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 660,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 661,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:6",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 680,
							"linearizedBaseContracts": [
								680
							],
							"name": "Errors",
							"nameLocation": "419:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:6",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 668,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "557:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "574:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:6"
									},
									"src": "531:59:6"
								},
								{
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:6",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 671,
									"name": "FailedCall",
									"nameLocation": "696:10:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:6"
									},
									"src": "690:19:6"
								},
								{
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:6",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 674,
									"name": "FailedDeployment",
									"nameLocation": "772:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:6"
									},
									"src": "766:25:6"
								},
								{
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:6",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 679,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "884:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:6"
									},
									"src": "860:33:6"
								}
							],
							"scope": 681,
							"src": "411:484:6",
							"usedErrors": [
								668,
								671,
								674,
								679
							],
							"usedEvents": []
						}
					],
					"src": "100:796:6"
				},
				"id": 6
			},
			".deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							804
						]
					},
					"id": 805,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 682,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 683,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:7",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 804,
							"linearizedBaseContracts": [
								804
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 686,
									"members": [
										{
											"constant": false,
											"id": 685,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 686,
											"src": "1462:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 684,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:7",
									"nodeType": "StructDefinition",
									"scope": 804,
									"src": "1433:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 689,
									"members": [
										{
											"constant": false,
											"id": 688,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 689,
											"src": "1517:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 687,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:7",
									"nodeType": "StructDefinition",
									"scope": 804,
									"src": "1488:46:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 692,
									"members": [
										{
											"constant": false,
											"id": 691,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 692,
											"src": "1569:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 690,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:7",
									"nodeType": "StructDefinition",
									"scope": 804,
									"src": "1540:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 695,
									"members": [
										{
											"constant": false,
											"id": 694,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 695,
											"src": "1624:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 693,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:7",
									"nodeType": "StructDefinition",
									"scope": 804,
									"src": "1595:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 698,
									"members": [
										{
											"constant": false,
											"id": 697,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 698,
											"src": "1678:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 696,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:7",
									"nodeType": "StructDefinition",
									"scope": 804,
									"src": "1650:47:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 701,
									"members": [
										{
											"constant": false,
											"id": 700,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 701,
											"src": "1731:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 699,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:7",
									"nodeType": "StructDefinition",
									"scope": 804,
									"src": "1703:47:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 704,
									"members": [
										{
											"constant": false,
											"id": 703,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 704,
											"src": "1783:11:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 702,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:7",
									"nodeType": "StructDefinition",
									"scope": 804,
									"src": "1756:45:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "1983:79:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:7",
													"nodeType": "YulBlock",
													"src": "2018:38:7",
													"statements": [
														{
															"nativeSrc": "2032:14:7",
															"nodeType": "YulAssignment",
															"src": "2032:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:7",
																"nodeType": "YulIdentifier",
																"src": "2042:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 711,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 707,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 713,
												"nodeType": "InlineAssembly",
												"src": "1993:63:7"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:7",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1923:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 706,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:7"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1960:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$686_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 710,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 709,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 686,
														"src": "1960:11:7"
													},
													"referencedDeclaration": 686,
													"src": "1960:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$686_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:7"
									},
									"scope": 804,
									"src": "1899:163:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "2243:79:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:7",
													"nodeType": "YulBlock",
													"src": "2278:38:7",
													"statements": [
														{
															"nativeSrc": "2292:14:7",
															"nodeType": "YulAssignment",
															"src": "2292:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:7",
																"nodeType": "YulIdentifier",
																"src": "2302:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 722,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 718,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 724,
												"nodeType": "InlineAssembly",
												"src": "2253:63:7"
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:7",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "2183:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 717,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:7"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "2220:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$689_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 689,
														"src": "2220:11:7"
													},
													"referencedDeclaration": 689,
													"src": "2220:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$689_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:7"
									},
									"scope": 804,
									"src": "2159:163:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "2503:79:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:7",
													"nodeType": "YulBlock",
													"src": "2538:38:7",
													"statements": [
														{
															"nativeSrc": "2552:14:7",
															"nodeType": "YulAssignment",
															"src": "2552:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:7",
																"nodeType": "YulIdentifier",
																"src": "2562:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 733,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 729,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 735,
												"nodeType": "InlineAssembly",
												"src": "2513:63:7"
											}
										]
									},
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:7",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "2443:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 728,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:7"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "2480:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$692_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 732,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 731,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 692,
														"src": "2480:11:7"
													},
													"referencedDeclaration": 692,
													"src": "2480:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$692_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:7"
									},
									"scope": 804,
									"src": "2419:163:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "2763:79:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:7",
													"nodeType": "YulBlock",
													"src": "2798:38:7",
													"statements": [
														{
															"nativeSrc": "2812:14:7",
															"nodeType": "YulAssignment",
															"src": "2812:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:7",
																"nodeType": "YulIdentifier",
																"src": "2822:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 744,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 740,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 746,
												"nodeType": "InlineAssembly",
												"src": "2773:63:7"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:7",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2703:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 739,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:7"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2740:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$695_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 743,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 742,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 695,
														"src": "2740:11:7"
													},
													"referencedDeclaration": 695,
													"src": "2740:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$695_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:7"
									},
									"scope": 804,
									"src": "2679:163:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "3020:79:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:7",
													"nodeType": "YulBlock",
													"src": "3055:38:7",
													"statements": [
														{
															"nativeSrc": "3069:14:7",
															"nodeType": "YulAssignment",
															"src": "3069:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:7",
																"nodeType": "YulIdentifier",
																"src": "3079:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 751,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 757,
												"nodeType": "InlineAssembly",
												"src": "3030:63:7"
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:7",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "2961:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 750,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:7"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "2998:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$698_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 754,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 753,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 698,
														"src": "2998:10:7"
													},
													"referencedDeclaration": 698,
													"src": "2998:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$698_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:7"
									},
									"scope": 804,
									"src": "2938:161:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "3277:79:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:7",
													"nodeType": "YulBlock",
													"src": "3312:38:7",
													"statements": [
														{
															"nativeSrc": "3326:14:7",
															"nodeType": "YulAssignment",
															"src": "3326:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:7",
																"nodeType": "YulIdentifier",
																"src": "3336:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 766,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 762,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 768,
												"nodeType": "InlineAssembly",
												"src": "3287:63:7"
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:7",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "3218:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 761,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:7"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "3255:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$701_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 765,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 764,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 701,
														"src": "3255:10:7"
													},
													"referencedDeclaration": 701,
													"src": "3255:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$701_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:7"
									},
									"scope": 804,
									"src": "3195:161:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "3558:85:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:7",
													"nodeType": "YulBlock",
													"src": "3593:44:7",
													"statements": [
														{
															"nativeSrc": "3607:20:7",
															"nodeType": "YulAssignment",
															"src": "3607:20:7",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:7",
																"nodeType": "YulIdentifier",
																"src": "3617:10:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 777,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 773,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:7",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 779,
												"nodeType": "InlineAssembly",
												"src": "3568:69:7"
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:7",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "3491:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 772,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:7"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "3536:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$701_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 776,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 775,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 701,
														"src": "3536:10:7"
													},
													"referencedDeclaration": 701,
													"src": "3536:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$701_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:7"
									},
									"scope": 804,
									"src": "3468:175:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "3818:79:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:7",
													"nodeType": "YulBlock",
													"src": "3853:38:7",
													"statements": [
														{
															"nativeSrc": "3867:14:7",
															"nodeType": "YulAssignment",
															"src": "3867:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:7",
																"nodeType": "YulIdentifier",
																"src": "3877:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 788,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 784,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 790,
												"nodeType": "InlineAssembly",
												"src": "3828:63:7"
											}
										]
									},
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:7",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "3760:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 783,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:7"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "3797:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$704_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 787,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 786,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 704,
														"src": "3797:9:7"
													},
													"referencedDeclaration": 704,
													"src": "3797:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$704_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:7"
									},
									"scope": 804,
									"src": "3738:159:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "4094:85:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:7",
													"nodeType": "YulBlock",
													"src": "4129:44:7",
													"statements": [
														{
															"nativeSrc": "4143:20:7",
															"nodeType": "YulAssignment",
															"src": "4143:20:7",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:7",
																"nodeType": "YulIdentifier",
																"src": "4153:10:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 799,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 795,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:7",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 801,
												"nodeType": "InlineAssembly",
												"src": "4104:69:7"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:7",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4029:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 794,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:7"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4073:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$704_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 798,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 797,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 704,
														"src": "4073:9:7"
													},
													"referencedDeclaration": 704,
													"src": "4073:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$704_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:7"
									},
									"scope": 804,
									"src": "4007:172:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 805,
							"src": "1407:2774:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:7"
				},
				"id": 7
			}
		}
	}
}