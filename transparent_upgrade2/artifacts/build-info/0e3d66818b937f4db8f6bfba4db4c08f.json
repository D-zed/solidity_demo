{
	"id": "0e3d66818b937f4db8f6bfba4db4c08f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"transparent_upgrade2/BoxV1.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\r\n\r\ncontract BoxV1 is Initializable{\r\n    uint public x;\r\n    // constructor(uint _x){\r\n    //     x=_x;\r\n    // }   \r\n\r\n    function initialize(uint _val) external initializer{\r\n        x=_val;\r\n    }\r\n\r\n    function cal() external {\r\n        x =x +1;\r\n    }\r\n\r\n    function showInvoke() external pure returns (bytes memory){\r\n        return abi.encodeWithSelector(this.initialize.selector,1);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"transparent_upgrade2/BoxV1.sol": {
				"BoxV1": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "cal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_val",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "showInvoke",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "x",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"transparent_upgrade2/BoxV1.sol\":128:528  contract BoxV1 is Initializable{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"transparent_upgrade2/BoxV1.sol\":128:528  contract BoxV1 is Initializable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0c55699c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x75beac87\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb7c738f4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xfe4b84df\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"transparent_upgrade2/BoxV1.sol\":166:179  uint public x */\n    tag_3:\n      tag_7\n      sload(0x00)\n      dup2\n      jump\n    tag_7:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"transparent_upgrade2/BoxV1.sol\":166:179  uint public x */\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"transparent_upgrade2/BoxV1.sol\":391:525  function showInvoke() external pure returns (bytes memory){... */\n    tag_4:\n      tag_11\n        /* \"transparent_upgrade2/BoxV1.sol\":467:517  abi.encodeWithSelector(this.initialize.selector,1) */\n      0x40\n      dup1\n      mload\n        /* \"transparent_upgrade2/BoxV1.sol\":515:516  1 */\n      0x01\n        /* \"transparent_upgrade2/BoxV1.sol\":467:517  abi.encodeWithSelector(this.initialize.selector,1) */\n      0x24\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":1084:1120   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"transparent_upgrade2/BoxV1.sol\":467:517  abi.encodeWithSelector(this.initialize.selector,1) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":1057:1075   */\n      0x44\n      swap1\n      swap2\n      add\n        /* \"transparent_upgrade2/BoxV1.sol\":467:517  abi.encodeWithSelector(this.initialize.selector,1) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xfe4b84df)\n      or\n      swap1\n      mstore\n      swap1\n        /* \"transparent_upgrade2/BoxV1.sol\":391:525  function showInvoke() external pure returns (bytes memory){... */\n      jump\n    tag_11:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n        /* \"transparent_upgrade2/BoxV1.sol\":333:383  function cal() external {... */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"transparent_upgrade2/BoxV1.sol\":249:325  function initialize(uint _val) external initializer{... */\n    tag_6:\n      tag_15\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n        /* \"transparent_upgrade2/BoxV1.sol\":333:383  function cal() external {... */\n    tag_16:\n        /* \"transparent_upgrade2/BoxV1.sol\":371:372  x */\n      sload(0x00)\n        /* \"transparent_upgrade2/BoxV1.sol\":371:375  x +1 */\n      tag_25\n      swap1\n        /* \"transparent_upgrade2/BoxV1.sol\":374:375  1 */\n      0x01\n        /* \"transparent_upgrade2/BoxV1.sol\":371:375  x +1 */\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"transparent_upgrade2/BoxV1.sol\":368:369  x */\n      0x00\n        /* \"transparent_upgrade2/BoxV1.sol\":368:375  x =x +1 */\n      sstore\n        /* \"transparent_upgrade2/BoxV1.sol\":333:383  function cal() external {... */\n      jump\t// out\n        /* \"transparent_upgrade2/BoxV1.sol\":249:325  function initialize(uint _val) external initializer{... */\n    tag_20:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_28\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_29\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_28:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0xff\n      shl(0x40, 0x01)\n      dup3\n      div\n      and\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_30\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n    tag_30:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4788:4799  initialized */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4803:4804  1 */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_31\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4816:4820  this */\n      address\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n    tag_31:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_32\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4871:4883  construction */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4870:4883  !construction */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n    tag_32:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n      iszero\n      tag_33\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4966:4967  1 */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_34\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n    tag_34:\n        /* \"transparent_upgrade2/BoxV1.sol\":311:312  x */\n      0x00\n        /* \"transparent_upgrade2/BoxV1.sol\":311:317  x=_val */\n      dup7\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_36\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":1511:1561   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":1499:1501   */\n      0x20\n        /* \"#utility.yul\":1484:1502   */\n      add\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4092:5171  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"transparent_upgrade2/BoxV1.sol\":249:325  function initialize(uint _val) external initializer{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n    tag_40:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":9171:9213  bytes32 slot = _initializableStorageSlot() */\n      swap3\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:742   */\n    tag_14:\n        /* \"#utility.yul\":306:310   */\n      0x00\n        /* \"#utility.yul\":335:337   */\n      0x20\n        /* \"#utility.yul\":364:366   */\n      dup1\n        /* \"#utility.yul\":353:362   */\n      dup4\n        /* \"#utility.yul\":346:367   */\n      mstore\n        /* \"#utility.yul\":396:402   */\n      dup4\n        /* \"#utility.yul\":390:403   */\n      mload\n        /* \"#utility.yul\":439:445   */\n      dup1\n        /* \"#utility.yul\":434:436   */\n      0x20\n        /* \"#utility.yul\":423:432   */\n      dup6\n        /* \"#utility.yul\":419:437   */\n      add\n        /* \"#utility.yul\":412:446   */\n      mstore\n        /* \"#utility.yul\":464:465   */\n      0x00\n        /* \"#utility.yul\":474:614   */\n    tag_46:\n        /* \"#utility.yul\":488:494   */\n      dup2\n        /* \"#utility.yul\":485:486   */\n      dup2\n        /* \"#utility.yul\":482:495   */\n      lt\n        /* \"#utility.yul\":474:614   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":583:597   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":579:602   */\n      dup4\n      add\n        /* \"#utility.yul\":573:603   */\n      mload\n        /* \"#utility.yul\":549:566   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":568:570   */\n      0x40\n        /* \"#utility.yul\":545:571   */\n      add\n        /* \"#utility.yul\":538:604   */\n      mstore\n        /* \"#utility.yul\":503:513   */\n      dup3\n      add\n        /* \"#utility.yul\":474:614   */\n      jump(tag_46)\n    tag_48:\n        /* \"#utility.yul\":478:481   */\n      pop\n        /* \"#utility.yul\":663:664   */\n      0x00\n        /* \"#utility.yul\":658:660   */\n      0x40\n        /* \"#utility.yul\":649:655   */\n      dup3\n        /* \"#utility.yul\":638:647   */\n      dup7\n        /* \"#utility.yul\":634:656   */\n      add\n        /* \"#utility.yul\":630:661   */\n      add\n        /* \"#utility.yul\":623:665   */\n      mstore\n        /* \"#utility.yul\":733:735   */\n      0x40\n        /* \"#utility.yul\":726:728   */\n      0x1f\n        /* \"#utility.yul\":722:729   */\n      not\n        /* \"#utility.yul\":717:719   */\n      0x1f\n        /* \"#utility.yul\":709:715   */\n      dup4\n        /* \"#utility.yul\":705:720   */\n      add\n        /* \"#utility.yul\":701:730   */\n      and\n        /* \"#utility.yul\":690:699   */\n      dup6\n        /* \"#utility.yul\":686:731   */\n      add\n        /* \"#utility.yul\":682:736   */\n      add\n        /* \"#utility.yul\":674:736   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":196:742   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":747:927   */\n    tag_19:\n        /* \"#utility.yul\":806:812   */\n      0x00\n        /* \"#utility.yul\":859:861   */\n      0x20\n        /* \"#utility.yul\":847:856   */\n      dup3\n        /* \"#utility.yul\":838:845   */\n      dup5\n        /* \"#utility.yul\":834:857   */\n      sub\n        /* \"#utility.yul\":830:862   */\n      slt\n        /* \"#utility.yul\":827:879   */\n      iszero\n      tag_50\n      jumpi\n        /* \"#utility.yul\":875:876   */\n      0x00\n        /* \"#utility.yul\":872:873   */\n      dup1\n        /* \"#utility.yul\":865:877   */\n      revert\n        /* \"#utility.yul\":827:879   */\n    tag_50:\n      pop\n        /* \"#utility.yul\":898:921   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":747:927   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1353   */\n    tag_26:\n        /* \"#utility.yul\":1196:1205   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":1217:1227   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1214:1347   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":1269:1279   */\n      0x4e487b71\n        /* \"#utility.yul\":1264:1267   */\n      0xe0\n        /* \"#utility.yul\":1260:1280   */\n      shl\n        /* \"#utility.yul\":1257:1258   */\n      0x00\n        /* \"#utility.yul\":1250:1281   */\n      mstore\n        /* \"#utility.yul\":1304:1308   */\n      0x11\n        /* \"#utility.yul\":1301:1302   */\n      0x04\n        /* \"#utility.yul\":1294:1309   */\n      mstore\n        /* \"#utility.yul\":1332:1336   */\n      0x24\n        /* \"#utility.yul\":1329:1330   */\n      0x00\n        /* \"#utility.yul\":1322:1337   */\n      revert\n\n    auxdata: 0xa264697066735822122037f13c6f960fa6981f27b14a000eb423fd6b44f690a4261aecadb7b91017af3e64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506102bb8061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80630c55699c1461004e57806375beac8714610069578063b7c738f4146100b7578063fe4b84df146100c1575b5f80fd5b6100565f5481565b6040519081526020015b60405180910390f35b6100aa6040805160016024808301919091528251808303909101815260449091019091526020810180516001600160e01b031663fe4b84df60e01b17905290565b6040516100609190610203565b6100bf6100d4565b005b6100bf6100cf36600461024f565b6100e5565b5f546100e1906001610266565b5f55565b5f6100ee6101d9565b805490915060ff600160401b820416159067ffffffffffffffff165f811580156101155750825b90505f8267ffffffffffffffff1660011480156101315750303b155b90508115801561013f575080155b1561015d5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561018757845460ff60401b1916600160401b1785555b5f86905583156101d157845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005b92915050565b5f602080835283518060208501525f5b8181101561022f57858101830151858201604001528201610213565b505f604082860101526040601f19601f8301168501019250505092915050565b5f6020828403121561025f575f80fd5b5035919050565b808201808211156101fd57634e487b7160e01b5f52601160045260245ffdfea264697066735822122037f13c6f960fa6981f27b14a000eb423fd6b44f690a4261aecadb7b91017af3e64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BB DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC55699C EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x75BEAC87 EQ PUSH2 0x69 JUMPI DUP1 PUSH4 0xB7C738F4 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0xC1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xFE4B84DF PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60 SWAP2 SWAP1 PUSH2 0x203 JUMP JUMPDEST PUSH2 0xBF PUSH2 0xD4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBF PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0x24F JUMP JUMPDEST PUSH2 0xE5 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0xE1 SWAP1 PUSH1 0x1 PUSH2 0x266 JUMP JUMPDEST PUSH0 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0xEE PUSH2 0x1D9 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x115 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x131 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x13F JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x15D JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x187 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH0 DUP7 SWAP1 SSTORE DUP4 ISZERO PUSH2 0x1D1 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x22F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x213 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1FD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY CALL EXTCODECOPY PUSH16 0x960FA6981F27B14A000EB423FD6B44F6 SWAP1 LOG4 0x26 BYTE 0xEC 0xAD 0xB7 0xB9 LT OR 0xAF RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "128:400:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_getInitializableStorage_266": {
									"entryPoint": 473,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_252": {
									"entryPoint": null,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@cal_296": {
									"entryPoint": 212,
									"id": 296,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_286": {
									"entryPoint": 229,
									"id": 286,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@showInvoke_310": {
									"entryPoint": null,
									"id": 310,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@x_274": {
									"entryPoint": null,
									"id": 274,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1569:2",
										"nodeType": "YulBlock",
										"src": "0:1569:2",
										"statements": [
											{
												"nativeSrc": "6:3:2",
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:2",
													"nodeType": "YulBlock",
													"src": "115:76:2",
													"statements": [
														{
															"nativeSrc": "125:26:2",
															"nodeType": "YulAssignment",
															"src": "125:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:2",
																		"nodeType": "YulLiteral",
																		"src": "148:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:2"
																},
																"nativeSrc": "133:18:2",
																"nodeType": "YulFunctionCall",
																"src": "133:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:2"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:2"
																},
																"nativeSrc": "160:25:2",
																"nodeType": "YulFunctionCall",
																"src": "160:25:2"
															},
															"nativeSrc": "160:25:2",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:2",
														"nodeType": "YulTypedName",
														"src": "84:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:2",
														"nodeType": "YulTypedName",
														"src": "95:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:2",
														"nodeType": "YulTypedName",
														"src": "106:4:2",
														"type": ""
													}
												],
												"src": "14:177:2"
											},
											{
												"body": {
													"nativeSrc": "315:427:2",
													"nodeType": "YulBlock",
													"src": "315:427:2",
													"statements": [
														{
															"nativeSrc": "325:12:2",
															"nodeType": "YulVariableDeclaration",
															"src": "325:12:2",
															"value": {
																"kind": "number",
																"nativeSrc": "335:2:2",
																"nodeType": "YulLiteral",
																"src": "335:2:2",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "329:2:2",
																	"nodeType": "YulTypedName",
																	"src": "329:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "353:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "353:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "364:2:2",
																		"nodeType": "YulLiteral",
																		"src": "364:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "346:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "346:6:2"
																},
																"nativeSrc": "346:21:2",
																"nodeType": "YulFunctionCall",
																"src": "346:21:2"
															},
															"nativeSrc": "346:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "346:21:2"
														},
														{
															"nativeSrc": "376:27:2",
															"nodeType": "YulVariableDeclaration",
															"src": "376:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "396:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "396:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "390:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "390:5:2"
																},
																"nativeSrc": "390:13:2",
																"nodeType": "YulFunctionCall",
																"src": "390:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "380:6:2",
																	"nodeType": "YulTypedName",
																	"src": "380:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "423:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "423:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "434:2:2",
																				"nodeType": "YulLiteral",
																				"src": "434:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "419:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "419:3:2"
																		},
																		"nativeSrc": "419:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "419:18:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "439:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "412:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "412:6:2"
																},
																"nativeSrc": "412:34:2",
																"nodeType": "YulFunctionCall",
																"src": "412:34:2"
															},
															"nativeSrc": "412:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "412:34:2"
														},
														{
															"nativeSrc": "455:10:2",
															"nodeType": "YulVariableDeclaration",
															"src": "455:10:2",
															"value": {
																"kind": "number",
																"nativeSrc": "464:1:2",
																"nodeType": "YulLiteral",
																"src": "464:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "459:1:2",
																	"nodeType": "YulTypedName",
																	"src": "459:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "524:90:2",
																"nodeType": "YulBlock",
																"src": "524:90:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "553:9:2",
																									"nodeType": "YulIdentifier",
																									"src": "553:9:2"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "564:1:2",
																									"nodeType": "YulIdentifier",
																									"src": "564:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "549:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "549:3:2"
																							},
																							"nativeSrc": "549:17:2",
																							"nodeType": "YulFunctionCall",
																							"src": "549:17:2"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "568:2:2",
																							"nodeType": "YulLiteral",
																							"src": "568:2:2",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "545:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "545:3:2"
																					},
																					"nativeSrc": "545:26:2",
																					"nodeType": "YulFunctionCall",
																					"src": "545:26:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "587:6:2",
																											"nodeType": "YulIdentifier",
																											"src": "587:6:2"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "595:1:2",
																											"nodeType": "YulIdentifier",
																											"src": "595:1:2"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "583:3:2",
																										"nodeType": "YulIdentifier",
																										"src": "583:3:2"
																									},
																									"nativeSrc": "583:14:2",
																									"nodeType": "YulFunctionCall",
																									"src": "583:14:2"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "599:2:2",
																									"nodeType": "YulIdentifier",
																									"src": "599:2:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "579:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "579:3:2"
																							},
																							"nativeSrc": "579:23:2",
																							"nodeType": "YulFunctionCall",
																							"src": "579:23:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "573:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "573:5:2"
																					},
																					"nativeSrc": "573:30:2",
																					"nodeType": "YulFunctionCall",
																					"src": "573:30:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "538:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "538:6:2"
																			},
																			"nativeSrc": "538:66:2",
																			"nodeType": "YulFunctionCall",
																			"src": "538:66:2"
																		},
																		"nativeSrc": "538:66:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "538:66:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "485:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "485:1:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "488:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "488:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "482:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "482:2:2"
																},
																"nativeSrc": "482:13:2",
																"nodeType": "YulFunctionCall",
																"src": "482:13:2"
															},
															"nativeSrc": "474:140:2",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "496:19:2",
																"nodeType": "YulBlock",
																"src": "496:19:2",
																"statements": [
																	{
																		"nativeSrc": "498:15:2",
																		"nodeType": "YulAssignment",
																		"src": "498:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "507:1:2",
																					"nodeType": "YulIdentifier",
																					"src": "507:1:2"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "510:2:2",
																					"nodeType": "YulIdentifier",
																					"src": "510:2:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "503:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "503:3:2"
																			},
																			"nativeSrc": "503:10:2",
																			"nodeType": "YulFunctionCall",
																			"src": "503:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "498:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "498:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "478:3:2",
																"nodeType": "YulBlock",
																"src": "478:3:2",
																"statements": []
															},
															"src": "474:140:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "638:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "638:9:2"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "649:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "649:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "634:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "634:3:2"
																				},
																				"nativeSrc": "634:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "634:22:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "658:2:2",
																				"nodeType": "YulLiteral",
																				"src": "658:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "630:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "630:3:2"
																		},
																		"nativeSrc": "630:31:2",
																		"nodeType": "YulFunctionCall",
																		"src": "630:31:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "663:1:2",
																		"nodeType": "YulLiteral",
																		"src": "663:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "623:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "623:6:2"
																},
																"nativeSrc": "623:42:2",
																"nodeType": "YulFunctionCall",
																"src": "623:42:2"
															},
															"nativeSrc": "623:42:2",
															"nodeType": "YulExpressionStatement",
															"src": "623:42:2"
														},
														{
															"nativeSrc": "674:62:2",
															"nodeType": "YulAssignment",
															"src": "674:62:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "690:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "690:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "709:6:2",
																								"nodeType": "YulIdentifier",
																								"src": "709:6:2"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "717:2:2",
																								"nodeType": "YulLiteral",
																								"src": "717:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "705:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "705:3:2"
																						},
																						"nativeSrc": "705:15:2",
																						"nodeType": "YulFunctionCall",
																						"src": "705:15:2"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "726:2:2",
																								"nodeType": "YulLiteral",
																								"src": "726:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "722:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "722:3:2"
																						},
																						"nativeSrc": "722:7:2",
																						"nodeType": "YulFunctionCall",
																						"src": "722:7:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "701:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "701:3:2"
																				},
																				"nativeSrc": "701:29:2",
																				"nodeType": "YulFunctionCall",
																				"src": "701:29:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "686:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "686:3:2"
																		},
																		"nativeSrc": "686:45:2",
																		"nodeType": "YulFunctionCall",
																		"src": "686:45:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "733:2:2",
																		"nodeType": "YulLiteral",
																		"src": "733:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "682:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "682:3:2"
																},
																"nativeSrc": "682:54:2",
																"nodeType": "YulFunctionCall",
																"src": "682:54:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "674:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "674:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "196:546:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:2",
														"nodeType": "YulTypedName",
														"src": "284:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "295:6:2",
														"nodeType": "YulTypedName",
														"src": "295:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "306:4:2",
														"nodeType": "YulTypedName",
														"src": "306:4:2",
														"type": ""
													}
												],
												"src": "196:546:2"
											},
											{
												"body": {
													"nativeSrc": "817:110:2",
													"nodeType": "YulBlock",
													"src": "817:110:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "863:16:2",
																"nodeType": "YulBlock",
																"src": "863:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "872:1:2",
																					"nodeType": "YulLiteral",
																					"src": "872:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "875:1:2",
																					"nodeType": "YulLiteral",
																					"src": "875:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "865:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "865:6:2"
																			},
																			"nativeSrc": "865:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "865:12:2"
																		},
																		"nativeSrc": "865:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "865:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "838:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "838:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "847:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "847:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "834:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "834:3:2"
																		},
																		"nativeSrc": "834:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "834:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "859:2:2",
																		"nodeType": "YulLiteral",
																		"src": "859:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "830:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "830:3:2"
																},
																"nativeSrc": "830:32:2",
																"nodeType": "YulFunctionCall",
																"src": "830:32:2"
															},
															"nativeSrc": "827:52:2",
															"nodeType": "YulIf",
															"src": "827:52:2"
														},
														{
															"nativeSrc": "888:33:2",
															"nodeType": "YulAssignment",
															"src": "888:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "911:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "911:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "898:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "898:12:2"
																},
																"nativeSrc": "898:23:2",
																"nodeType": "YulFunctionCall",
																"src": "898:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "888:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "888:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "747:180:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "783:9:2",
														"nodeType": "YulTypedName",
														"src": "783:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "794:7:2",
														"nodeType": "YulTypedName",
														"src": "794:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "806:6:2",
														"nodeType": "YulTypedName",
														"src": "806:6:2",
														"type": ""
													}
												],
												"src": "747:180:2"
											},
											{
												"body": {
													"nativeSrc": "1039:87:2",
													"nodeType": "YulBlock",
													"src": "1039:87:2",
													"statements": [
														{
															"nativeSrc": "1049:26:2",
															"nodeType": "YulAssignment",
															"src": "1049:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1061:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1061:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1072:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1072:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1057:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1057:3:2"
																},
																"nativeSrc": "1057:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1057:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1049:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1049:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1091:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1091:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1106:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1106:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1114:4:2",
																				"nodeType": "YulLiteral",
																				"src": "1114:4:2",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1102:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1102:3:2"
																		},
																		"nativeSrc": "1102:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1102:17:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1084:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1084:6:2"
																},
																"nativeSrc": "1084:36:2",
																"nodeType": "YulFunctionCall",
																"src": "1084:36:2"
															},
															"nativeSrc": "1084:36:2",
															"nodeType": "YulExpressionStatement",
															"src": "1084:36:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nativeSrc": "932:194:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1008:9:2",
														"nodeType": "YulTypedName",
														"src": "1008:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1019:6:2",
														"nodeType": "YulTypedName",
														"src": "1019:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1030:4:2",
														"nodeType": "YulTypedName",
														"src": "1030:4:2",
														"type": ""
													}
												],
												"src": "932:194:2"
											},
											{
												"body": {
													"nativeSrc": "1179:174:2",
													"nodeType": "YulBlock",
													"src": "1179:174:2",
													"statements": [
														{
															"nativeSrc": "1189:16:2",
															"nodeType": "YulAssignment",
															"src": "1189:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1200:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1200:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1203:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1203:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1196:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1196:3:2"
																},
																"nativeSrc": "1196:9:2",
																"nodeType": "YulFunctionCall",
																"src": "1196:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "1189:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1189:3:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1236:111:2",
																"nodeType": "YulBlock",
																"src": "1236:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1257:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1257:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1264:3:2",
																							"nodeType": "YulLiteral",
																							"src": "1264:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1269:10:2",
																							"nodeType": "YulLiteral",
																							"src": "1269:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1260:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "1260:3:2"
																					},
																					"nativeSrc": "1260:20:2",
																					"nodeType": "YulFunctionCall",
																					"src": "1260:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1250:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1250:6:2"
																			},
																			"nativeSrc": "1250:31:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1250:31:2"
																		},
																		"nativeSrc": "1250:31:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1250:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1301:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1301:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1304:4:2",
																					"nodeType": "YulLiteral",
																					"src": "1304:4:2",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1294:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1294:6:2"
																			},
																			"nativeSrc": "1294:15:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1294:15:2"
																		},
																		"nativeSrc": "1294:15:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1294:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1329:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1329:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1332:4:2",
																					"nodeType": "YulLiteral",
																					"src": "1332:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1322:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1322:6:2"
																			},
																			"nativeSrc": "1322:15:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1322:15:2"
																		},
																		"nativeSrc": "1322:15:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1322:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1220:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1220:1:2"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "1223:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1223:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1217:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "1217:2:2"
																},
																"nativeSrc": "1217:10:2",
																"nodeType": "YulFunctionCall",
																"src": "1217:10:2"
															},
															"nativeSrc": "1214:133:2",
															"nodeType": "YulIf",
															"src": "1214:133:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "1131:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1162:1:2",
														"nodeType": "YulTypedName",
														"src": "1162:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1165:1:2",
														"nodeType": "YulTypedName",
														"src": "1165:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "1171:3:2",
														"nodeType": "YulTypedName",
														"src": "1171:3:2",
														"type": ""
													}
												],
												"src": "1131:222:2"
											},
											{
												"body": {
													"nativeSrc": "1466:101:2",
													"nodeType": "YulBlock",
													"src": "1466:101:2",
													"statements": [
														{
															"nativeSrc": "1476:26:2",
															"nodeType": "YulAssignment",
															"src": "1476:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1488:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1488:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1499:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1499:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1484:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1484:3:2"
																},
																"nativeSrc": "1484:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1484:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1476:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1476:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1518:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1518:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1533:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1533:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1541:18:2",
																				"nodeType": "YulLiteral",
																				"src": "1541:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1529:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:2"
																		},
																		"nativeSrc": "1529:31:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1529:31:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1511:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1511:6:2"
																},
																"nativeSrc": "1511:50:2",
																"nodeType": "YulFunctionCall",
																"src": "1511:50:2"
															},
															"nativeSrc": "1511:50:2",
															"nodeType": "YulExpressionStatement",
															"src": "1511:50:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "1358:209:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1435:9:2",
														"nodeType": "YulTypedName",
														"src": "1435:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1446:6:2",
														"nodeType": "YulTypedName",
														"src": "1446:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1457:4:2",
														"nodeType": "YulTypedName",
														"src": "1457:4:2",
														"type": ""
													}
												],
												"src": "1358:209:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c80630c55699c1461004e57806375beac8714610069578063b7c738f4146100b7578063fe4b84df146100c1575b5f80fd5b6100565f5481565b6040519081526020015b60405180910390f35b6100aa6040805160016024808301919091528251808303909101815260449091019091526020810180516001600160e01b031663fe4b84df60e01b17905290565b6040516100609190610203565b6100bf6100d4565b005b6100bf6100cf36600461024f565b6100e5565b5f546100e1906001610266565b5f55565b5f6100ee6101d9565b805490915060ff600160401b820416159067ffffffffffffffff165f811580156101155750825b90505f8267ffffffffffffffff1660011480156101315750303b155b90508115801561013f575080155b1561015d5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561018757845460ff60401b1916600160401b1785555b5f86905583156101d157845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005b92915050565b5f602080835283518060208501525f5b8181101561022f57858101830151858201604001528201610213565b505f604082860101526040601f19601f8301168501019250505092915050565b5f6020828403121561025f575f80fd5b5035919050565b808201808211156101fd57634e487b7160e01b5f52601160045260245ffdfea264697066735822122037f13c6f960fa6981f27b14a000eb423fd6b44f690a4261aecadb7b91017af3e64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC55699C EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x75BEAC87 EQ PUSH2 0x69 JUMPI DUP1 PUSH4 0xB7C738F4 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0xC1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xFE4B84DF PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60 SWAP2 SWAP1 PUSH2 0x203 JUMP JUMPDEST PUSH2 0xBF PUSH2 0xD4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBF PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0x24F JUMP JUMPDEST PUSH2 0xE5 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0xE1 SWAP1 PUSH1 0x1 PUSH2 0x266 JUMP JUMPDEST PUSH0 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0xEE PUSH2 0x1D9 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x115 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x131 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x13F JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x15D JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x187 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH0 DUP7 SWAP1 SSTORE DUP4 ISZERO PUSH2 0x1D1 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x22F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x213 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1FD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY CALL EXTCODECOPY PUSH16 0x960FA6981F27B14A000EB423FD6B44F6 SWAP1 LOG4 0x26 BYTE 0xEC 0xAD 0xB7 0xB9 LT OR 0xAF RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "128:400:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;166:13;;;;;;;;;160:25:2;;;148:2;133:18;166:13:1;;;;;;;;391:134;;467:50;;;515:1;467:50;;;;1084:36:2;;;;467:50:1;;;;;;;;;;1057:18:2;;;;467:50:1;;;;;;;;-1:-1:-1;;;;;467:50:1;-1:-1:-1;;;467:50:1;;;;391:134;;;;;;;;:::i;333:50::-;;;:::i;:::-;;249:76;;;;;;:::i;:::-;;:::i;333:50::-;371:1;;:4;;374:1;371:4;:::i;:::-;368:1;:7;333:50::o;249:76::-;4158:30:0;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:0;-1:-1:-1;;;4302:15:0;;;4301:16;;4348:14;;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;:16;;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:0;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:0;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:0;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:0;-1:-1:-1;;;5011:22:0;;;4977:67;311:1:1::1;:6:::0;;;5064:101:0;;;;5098:23;;-1:-1:-1;;;;5098:23:0;;;5140:14;;-1:-1:-1;1511:50:2;;5140:14:0;;1499:2:2;1484:18;5140:14:0;;;;;;;5064:101;4092:1079;;;;;249:76:1;:::o;9071:205:0:-;9129:30;;3147:66;9186:27;9171:42;9071:205;-1:-1:-1;;9071:205:0:o;196:546:2:-;306:4;335:2;364;353:9;346:21;396:6;390:13;439:6;434:2;423:9;419:18;412:34;464:1;474:140;488:6;485:1;482:13;474:140;;;583:14;;;579:23;;573:30;549:17;;;568:2;545:26;538:66;503:10;;474:140;;;478:3;663:1;658:2;649:6;638:9;634:22;630:31;623:42;733:2;726;722:7;717:2;709:6;705:15;701:29;690:9;686:45;682:54;674:62;;;;196:546;;;;:::o;747:180::-;806:6;859:2;847:9;838:7;834:23;830:32;827:52;;;875:1;872;865:12;827:52;-1:-1:-1;898:23:2;;747:180;-1:-1:-1;747:180:2:o;1131:222::-;1196:9;;;1217:10;;;1214:133;;;1269:10;1264:3;1260:20;1257:1;1250:31;1304:4;1301:1;1294:15;1332:4;1329:1;1322:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "139800",
								"executionCost": "181",
								"totalCost": "139981"
							},
							"external": {
								"cal()": "24444",
								"initialize(uint256)": "101084",
								"showInvoke()": "infinite",
								"x()": "2260"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 128,
									"end": 528,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 128,
									"end": 528,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 128,
									"end": 528,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 128,
									"end": 528,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 128,
									"end": 528,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 128,
									"end": 528,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 128,
									"end": 528,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 528,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 128,
									"end": 528,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 528,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 128,
									"end": 528,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 128,
									"end": 528,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 128,
									"end": 528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 128,
									"end": 528,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 528,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 128,
									"end": 528,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 528,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 528,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 128,
									"end": 528,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 528,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122037f13c6f960fa6981f27b14a000eb423fd6b44f690a4261aecadb7b91017af3e64736f6c63430008180033",
									".code": [
										{
											"begin": 128,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 128,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 528,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 528,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 128,
											"end": 528,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "C55699C"
										},
										{
											"begin": 128,
											"end": 528,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 128,
											"end": 528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "75BEAC87"
										},
										{
											"begin": 128,
											"end": 528,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "B7C738F4"
										},
										{
											"begin": 128,
											"end": 528,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 128,
											"end": 528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "FE4B84DF"
										},
										{
											"begin": 128,
											"end": 528,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 128,
											"end": 528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 528,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 166,
											"end": 179,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 166,
											"end": 179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 166,
											"end": 179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 166,
											"end": 179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 179,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 166,
											"end": 179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 166,
											"end": 179,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 166,
											"end": 179,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 166,
											"end": 179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 166,
											"end": 179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 166,
											"end": 179,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 166,
											"end": 179,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 166,
											"end": 179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 166,
											"end": 179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 166,
											"end": 179,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 166,
											"end": 179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 166,
											"end": 179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 166,
											"end": 179,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 166,
											"end": 179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 166,
											"end": 179,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 391,
											"end": 525,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 391,
											"end": 525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 391,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 515,
											"end": 516,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FE4B84DF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 391,
											"end": 525,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 391,
											"end": 525,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 391,
											"end": 525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 391,
											"end": 525,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 525,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 391,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 391,
											"end": 525,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 391,
											"end": 525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 391,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 391,
											"end": 525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 333,
											"end": 383,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 333,
											"end": 383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 333,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 333,
											"end": 383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 333,
											"end": 383,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 333,
											"end": 383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 383,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 249,
											"end": 325,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 249,
											"end": 325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 249,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 249,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 249,
											"end": 325,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 249,
											"end": 325,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 249,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 249,
											"end": 325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 249,
											"end": 325,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 249,
											"end": 325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 249,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 333,
											"end": 383,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 333,
											"end": 383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 372,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 371,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 371,
											"end": 375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 374,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 371,
											"end": 375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 375,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 371,
											"end": 375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 375,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 333,
											"end": 383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 249,
											"end": 325,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 311,
											"end": 312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 311,
											"end": 317,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 311,
											"end": 317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 311,
											"end": 317,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1511,
											"end": 1561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1561,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1501,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1484,
											"end": 1502,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 249,
											"end": 325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 249,
											"end": 325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 0,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9071,
											"end": 9276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 196,
											"end": 742,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 196,
											"end": 742,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 306,
											"end": 310,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 337,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 364,
											"end": 366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 353,
											"end": 362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 346,
											"end": 367,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 396,
											"end": 402,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 390,
											"end": 403,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 439,
											"end": 445,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 434,
											"end": 436,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 432,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 419,
											"end": 437,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 412,
											"end": 446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 464,
											"end": 465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 474,
											"end": 614,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 474,
											"end": 614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 488,
											"end": 494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 485,
											"end": 486,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 482,
											"end": 495,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 474,
											"end": 614,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 474,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 474,
											"end": 614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 597,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 583,
											"end": 597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 579,
											"end": 602,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 579,
											"end": 602,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 573,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 549,
											"end": 566,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 549,
											"end": 566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 549,
											"end": 566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 568,
											"end": 570,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 571,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 538,
											"end": 604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 503,
											"end": 513,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 503,
											"end": 513,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 474,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 474,
											"end": 614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 474,
											"end": 614,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 474,
											"end": 614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 478,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 663,
											"end": 664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 660,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 655,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 638,
											"end": 647,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 634,
											"end": 656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 630,
											"end": 661,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 623,
											"end": 665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 733,
											"end": 735,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 726,
											"end": 728,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 722,
											"end": 729,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 717,
											"end": 719,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 709,
											"end": 715,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 705,
											"end": 720,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 701,
											"end": 730,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 690,
											"end": 699,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 686,
											"end": 731,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 682,
											"end": 736,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 674,
											"end": 736,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 674,
											"end": 736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 674,
											"end": 736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 674,
											"end": 736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 196,
											"end": 742,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 196,
											"end": 742,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 196,
											"end": 742,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 196,
											"end": 742,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 196,
											"end": 742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 747,
											"end": 927,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 747,
											"end": 927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 806,
											"end": 812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 838,
											"end": 845,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 834,
											"end": 857,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 830,
											"end": 862,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 827,
											"end": 879,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 827,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 827,
											"end": 879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 875,
											"end": 876,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 873,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 865,
											"end": 877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 827,
											"end": 879,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 827,
											"end": 879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 898,
											"end": 921,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 747,
											"end": 927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 747,
											"end": 927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1353,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1131,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1196,
											"end": 1205,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1196,
											"end": 1205,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1196,
											"end": 1205,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1227,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1214,
											"end": 1347,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1214,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 1264,
											"end": 1267,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1260,
											"end": 1280,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1258,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1304,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1301,
											"end": 1302,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1294,
											"end": 1309,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1332,
											"end": 1336,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1329,
											"end": 1330,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1337,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/utils/Initializable.sol",
								"transparent_upgrade2/BoxV1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"cal()": "b7c738f4",
							"initialize(uint256)": "fe4b84df",
							"showInvoke()": "75beac87",
							"x()": "0c55699c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showInvoke\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"x\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"transparent_upgrade2/BoxV1.sol\":\"BoxV1\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"transparent_upgrade2/BoxV1.sol\":{\"keccak256\":\"0xbc619aa59eebb9511e51e2ddaa344ad80560f2201dc875fb6ad01f2bf573267b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01bd397cd078ffe8e9d9f8721f259c4e25647bf87f36046ba5bb045fddab47ab\",\"dweb:/ipfs/QmZ32S954RjqC1sq4oBcorskvs48NXjjC2fr9JuPK9vy4Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 274,
								"contract": "transparent_upgrade2/BoxV1.sol:BoxV1",
								"label": "x",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							267
						]
					},
					"id": 268,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 267,
							"linearizedBaseContracts": [
								267
							],
							"name": "Initializable",
							"nameLocation": "2367:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:0",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2813:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 5,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2950:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 8,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:0",
									"nodeType": "StructDefinition",
									"scope": 267,
									"src": "2685:290:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 13,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 267,
									"src": "3098:115:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 11,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:0",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 16,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:0"
									},
									"src": "3285:30:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:0",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 19,
									"name": "NotInitializing",
									"nameLocation": "3389:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:0"
									},
									"src": "3383:24:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 24,
									"name": "Initialized",
									"nameLocation": "3514:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "3526:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 21,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:0"
									},
									"src": "3508:34:0"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4092:1079:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4158:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 28,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 27,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "4158:20:0"
															},
															"referencedDeclaration": 10,
															"src": "4158:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 30,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "4191:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:0"
											},
											{
												"assignments": [
													34
												],
												"declarations": [
													{
														"constant": false,
														"id": 34,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4279:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 33,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 38,
												"initialValue": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:0",
													"subExpression": {
														"expression": {
															"id": 35,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4302:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "4302:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:0"
											},
											{
												"assignments": [
													40
												],
												"declarations": [
													{
														"constant": false,
														"id": 40,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4327:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 39,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"expression": {
														"id": 41,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4348:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "4348:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:0"
											},
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4704:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 44,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 51,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 46,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4724:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 49,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "4744:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:0"
											},
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4768:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 52,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 66,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 54,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4788:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 59,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$267",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$267",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 57,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:0",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:0",
														"subExpression": {
															"id": 67,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4854:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:0",
														"subExpression": {
															"id": 69,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "4871:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "IfStatement",
												"src": "4849:91:0",
												"trueBody": {
													"id": 75,
													"nodeType": "Block",
													"src": "4885:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 72,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "4906:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 74,
															"nodeType": "RevertStatement",
															"src": "4899:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 77,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4949:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "4949:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:0"
											},
											{
												"condition": {
													"id": 83,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "4981:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 91,
												"nodeType": "IfStatement",
												"src": "4977:67:0",
												"trueBody": {
													"id": 90,
													"nodeType": "Block",
													"src": "4997:47:0",
													"statements": [
														{
															"expression": {
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 84,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5011:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5011:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 89,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:0"
														}
													]
												}
											},
											{
												"id": 92,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:0"
											},
											{
												"condition": {
													"id": 93,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "5068:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"nodeType": "IfStatement",
												"src": "5064:101:0",
												"trueBody": {
													"id": 104,
													"nodeType": "Block",
													"src": "5084:81:0",
													"statements": [
														{
															"expression": {
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 94,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5098:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5098:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 100,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "5140:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 103,
															"nodeType": "EmitStatement",
															"src": "5135:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 107,
									"name": "initializer",
									"nameLocation": "4078:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:0"
									},
									"src": "4069:1102:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "6289:392:0",
										"statements": [
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "6355:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 113,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 112,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "6355:20:0"
															},
															"referencedDeclaration": 10,
															"src": "6355:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 117,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "6388:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 118,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6429:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6429:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 120,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6448:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:0",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "6448:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 122,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6466:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "6425:105:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "6475:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 125,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "6496:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "6489:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 130,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6539:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "6539:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 133,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "6556:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:0"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 136,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6573:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6573:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:0"
											},
											{
												"id": 142,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:0"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 143,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6616:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6616:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 150,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6666:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 149,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "6654:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "EmitStatement",
												"src": "6649:25:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 154,
									"name": "reinitializer",
									"nameLocation": "6259:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "6273:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 109,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:0"
									},
									"src": "6250:431:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6919:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 157,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "6929:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:0"
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:0"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 162,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:0"
									},
									"src": "6891:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "7134:89:0",
										"statements": [
											{
												"condition": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 166,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7149:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 173,
												"nodeType": "IfStatement",
												"src": "7144:73:0",
												"trueBody": {
													"id": 172,
													"nodeType": "Block",
													"src": "7168:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "7189:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 171,
															"nodeType": "RevertStatement",
															"src": "7182:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:0",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:0"
									},
									"scope": 267,
									"src": "7082:141:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "7758:373:0",
										"statements": [
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "7824:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 180,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 179,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "7824:20:0"
															},
															"referencedDeclaration": 10,
															"src": "7824:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 182,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "7857:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:0"
											},
											{
												"condition": {
													"expression": {
														"id": 185,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "7898:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "7898:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "7894:76:0",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "7915:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 187,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "7936:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 189,
															"nodeType": "RevertStatement",
															"src": "7929:30:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 192,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "7983:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "7983:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 195,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 194,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "IfStatement",
												"src": "7979:146:0",
												"trueBody": {
													"id": 218,
													"nodeType": "Block",
													"src": "8019:106:0",
													"statements": [
														{
															"expression": {
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 200,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "8033:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:0",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6,
																	"src": "8033:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 203,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 209,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 212,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 211,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 210,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "8085:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 217,
															"nodeType": "EmitStatement",
															"src": "8080:34:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:0"
									},
									"scope": 267,
									"src": "7709:422:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "8306:63:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 227,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "8323:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "8323:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 226,
												"id": 230,
												"nodeType": "Return",
												"src": "8316:46:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "8298:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 224,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:0"
									},
									"scope": 267,
									"src": "8241:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "8541:64:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 238,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "8558:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "8558:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 237,
												"id": 241,
												"nodeType": "Return",
												"src": "8551:47:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "8535:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:0"
									},
									"scope": 267,
									"src": "8485:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "8896:45:0",
										"statements": [
											{
												"expression": {
													"id": 249,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 13,
													"src": "8913:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 248,
												"id": 250,
												"nodeType": "Return",
												"src": "8906:28:0"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:0",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:0"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "8887:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 246,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:0"
									},
									"scope": 267,
									"src": "8819:122:0",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "9161:115:0",
										"statements": [
											{
												"assignments": [
													260
												],
												"declarations": [
													{
														"constant": false,
														"id": 260,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 265,
														"src": "9171:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 259,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 263,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 261,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "9186:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:0"
											},
											{
												"AST": {
													"nativeSrc": "9232:38:0",
													"nodeType": "YulBlock",
													"src": "9232:38:0",
													"statements": [
														{
															"nativeSrc": "9246:14:0",
															"nodeType": "YulAssignment",
															"src": "9246:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "9256:4:0",
																"nodeType": "YulIdentifier",
																"src": "9256:4:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "9246:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 257,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 260,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:0",
														"valueSize": 1
													}
												],
												"id": 264,
												"nodeType": "InlineAssembly",
												"src": "9223:47:0"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:0",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "9129:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 255,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "9129:20:0"
													},
													"referencedDeclaration": 10,
													"src": "9129:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:0"
									},
									"scope": 267,
									"src": "9071:205:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 268,
							"src": "2349:6929:0",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "113:9166:0"
				},
				"id": 0
			},
			"transparent_upgrade2/BoxV1.sol": {
				"ast": {
					"absolutePath": "transparent_upgrade2/BoxV1.sol",
					"exportedSymbols": {
						"BoxV1": [
							311
						],
						"Initializable": [
							267
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 269,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
							"id": 270,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 312,
							"sourceUnit": 268,
							"src": "61:63:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 271,
										"name": "Initializable",
										"nameLocations": [
											"146:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 267,
										"src": "146:13:1"
									},
									"id": 272,
									"nodeType": "InheritanceSpecifier",
									"src": "146:13:1"
								}
							],
							"canonicalName": "BoxV1",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311,
								267
							],
							"name": "BoxV1",
							"nameLocation": "137:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0c55699c",
									"id": 274,
									"mutability": "mutable",
									"name": "x",
									"nameLocation": "178:1:1",
									"nodeType": "VariableDeclaration",
									"scope": 311,
									"src": "166:13:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 273,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "166:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "300:25:1",
										"statements": [
											{
												"expression": {
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 281,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "311:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 282,
														"name": "_val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "313:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "311:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "311:6:1"
											}
										]
									},
									"functionSelector": "fe4b84df",
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 279,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 278,
												"name": "initializer",
												"nameLocations": [
													"289:11:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 107,
												"src": "289:11:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "289:11:1"
										}
									],
									"name": "initialize",
									"nameLocation": "258:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "_val",
												"nameLocation": "274:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "269:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "269:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:11:1"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "300:0:1"
									},
									"scope": 311,
									"src": "249:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "357:26:1",
										"statements": [
											{
												"expression": {
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 289,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "368:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 290,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "371:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "374:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "371:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "368:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "368:7:1"
											}
										]
									},
									"functionSelector": "b7c738f4",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cal",
									"nameLocation": "342:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "345:2:1"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "357:0:1"
									},
									"scope": 311,
									"src": "333:50:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "449:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 303,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "490:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BoxV1_$311",
																		"typeString": "contract BoxV1"
																	}
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "495:10:1",
																"memberName": "initialize",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 286,
																"src": "490:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																	"typeString": "function (uint256) external"
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "506:8:1",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "490:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"hexValue": "31",
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "515:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"id": 301,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "467:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "471:18:1",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "467:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "467:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 300,
												"id": 308,
												"nodeType": "Return",
												"src": "460:57:1"
											}
										]
									},
									"functionSelector": "75beac87",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "showInvoke",
									"nameLocation": "400:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:2:1"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "436:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 298,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "436:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "435:14:1"
									},
									"scope": 311,
									"src": "391:134:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 312,
							"src": "128:400:1",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "33:495:1"
				},
				"id": 1
			}
		}
	}
}