{
	"id": "309127394b34fd4a44ea23b70205a7ab",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"five/MostSignificanBit.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\n//使用二分搜索代码找到最显著的位\r\ncontract MostSignificantBit {\r\n\r\n    // 10101010 ->7\r\n    function findMostSignificantBit(uint x) external pure returns(uint8 r){\r\n        if(x>= 2**128){\r\n            x>>=128;\r\n            r+=128;\r\n        }\r\n        if(x>= 2**64){\r\n            x>>=64;\r\n            r+=64;\r\n        }\r\n        if(x>= 2**32){\r\n            x>>=32;\r\n            r+=32;\r\n        }\r\n        if(x>= 2**16){\r\n            x>>=16;\r\n            r+=16;\r\n        }\r\n        if(x>= 2**8){\r\n            x>>=8;\r\n            r+=8;\r\n        }\r\n\r\n        // if(x>= 2**4){\r\n        //     x>>=4;\r\n        //     r+=4;\r\n        // }\r\n        // 使用内联汇编来处理剩余的 4 位\r\n        assembly {\r\n            // 检查 x 是否大于 0xf（二进制 1111）\r\n            // 如果大于，gt(x, 0xf) 返回 1，否则返回 0\r\n            // 将结果左移 2 位，相当于乘以 4\r\n            let f := shl(2, gt(x, 0xf))\r\n            // 将 x 右移 f 位，去掉低 f 位\r\n            x := shr(f, x)\r\n            // 将 r 和 f 进行按位或操作，更新 r 的值\r\n            r := or(r, f)\r\n        }\r\n\r\n\r\n        // if(x>= 2**2){\r\n        //     x>>=2;\r\n        //     r+=2;\r\n        // }\r\n        // 使用内联汇编来处理剩余的 2 位\r\n        assembly {\r\n            // 检查 x 是否大于 0x3（二进制 11）\r\n            // 如果大于，gt(x, 0x3) 返回 1，否则返回 0\r\n            // 将结果左移 1 位，相当于乘以 2\r\n            let f := shl(1, gt(x, 0x3))\r\n            // 将 x 右移 f 位，去掉低 f 位\r\n            x := shr(f, x)\r\n            // 将 r 和 f 进行按位或操作，更新 r 的值\r\n            r := or(r, f)\r\n        }\r\n        // if(x>=2){\r\n        //     r+=1;\r\n        // }\r\n        // 使用内联汇编来处理最后 1 位\r\n        assembly {\r\n            // 检查 x 是否大于 0x1（二进制 1）\r\n            // 如果大于，gt(x, 0x1) 返回 1，否则返回 0\r\n            let f := gt(x, 0x1)\r\n            // 将 r 和 f 相加，更新 r 的值\r\n            r := add(r, f)\r\n        }\r\n    }\r\n\r\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"five/MostSignificanBit.sol": {
				"MostSignificantBit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "findMostSignificantBit",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "r",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"five/MostSignificanBit.sol\":109:2168  contract MostSignificantBit {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"five/MostSignificanBit.sol\":109:2168  contract MostSignificantBit {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x483d868d\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"five/MostSignificanBit.sol\":167:2163  function findMostSignificantBit(uint x) external pure returns(uint8 r){... */\n    tag_3:\n      tag_4\n      tag_5\n      calldatasize\n      0x04\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n        /* \"#utility.yul\":371:375   */\n      0xff\n        /* \"#utility.yul\":359:376   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":341:377   */\n      dup2\n      mstore\n        /* \"#utility.yul\":329:331   */\n      0x20\n        /* \"#utility.yul\":314:332   */\n      add\n        /* \"five/MostSignificanBit.sol\":167:2163  function findMostSignificantBit(uint x) external pure returns(uint8 r){... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"five/MostSignificanBit.sol\":229:236  uint8 r */\n      0x00\n      shl(0x80, 0x01)\n        /* \"five/MostSignificanBit.sol\":251:252  x */\n      dup3\n        /* \"five/MostSignificanBit.sol\":251:261  x>= 2**128 */\n      lt\n        /* \"five/MostSignificanBit.sol\":248:317  if(x>= 2**128){... */\n      tag_11\n      jumpi\n        /* \"five/MostSignificanBit.sol\":281:284  128 */\n      0x80\n        /* \"five/MostSignificanBit.sol\":277:284  x>>=128 */\n      swap2\n      dup3\n      shr\n      swap2\n        /* \"five/MostSignificanBit.sol\":299:305  r+=128 */\n      tag_12\n      swap1\n      dup3\n      tag_13\n      jump\t// in\n    tag_12:\n      swap1\n      pop\n        /* \"five/MostSignificanBit.sol\":248:317  if(x>= 2**128){... */\n    tag_11:\n        /* \"five/MostSignificanBit.sol\":334:339  2**64 */\n      0x010000000000000000\n        /* \"five/MostSignificanBit.sol\":330:331  x */\n      dup3\n        /* \"five/MostSignificanBit.sol\":330:339  x>= 2**64 */\n      lt\n        /* \"five/MostSignificanBit.sol\":327:393  if(x>= 2**64){... */\n      tag_14\n      jumpi\n        /* \"five/MostSignificanBit.sol\":359:361  64 */\n      0x40\n        /* \"five/MostSignificanBit.sol\":355:361  x>>=64 */\n      swap2\n      dup3\n      shr\n      swap2\n        /* \"five/MostSignificanBit.sol\":376:381  r+=64 */\n      tag_15\n      swap1\n      dup3\n      tag_13\n      jump\t// in\n    tag_15:\n      swap1\n      pop\n        /* \"five/MostSignificanBit.sol\":327:393  if(x>= 2**64){... */\n    tag_14:\n        /* \"five/MostSignificanBit.sol\":410:415  2**32 */\n      0x0100000000\n        /* \"five/MostSignificanBit.sol\":406:407  x */\n      dup3\n        /* \"five/MostSignificanBit.sol\":406:415  x>= 2**32 */\n      lt\n        /* \"five/MostSignificanBit.sol\":403:469  if(x>= 2**32){... */\n      tag_16\n      jumpi\n        /* \"five/MostSignificanBit.sol\":435:437  32 */\n      0x20\n        /* \"five/MostSignificanBit.sol\":431:437  x>>=32 */\n      swap2\n      dup3\n      shr\n      swap2\n        /* \"five/MostSignificanBit.sol\":452:457  r+=32 */\n      tag_17\n      swap1\n      dup3\n      tag_13\n      jump\t// in\n    tag_17:\n      swap1\n      pop\n        /* \"five/MostSignificanBit.sol\":403:469  if(x>= 2**32){... */\n    tag_16:\n        /* \"five/MostSignificanBit.sol\":486:491  2**16 */\n      0x010000\n        /* \"five/MostSignificanBit.sol\":482:483  x */\n      dup3\n        /* \"five/MostSignificanBit.sol\":482:491  x>= 2**16 */\n      lt\n        /* \"five/MostSignificanBit.sol\":479:545  if(x>= 2**16){... */\n      tag_18\n      jumpi\n        /* \"five/MostSignificanBit.sol\":511:513  16 */\n      0x10\n        /* \"five/MostSignificanBit.sol\":507:513  x>>=16 */\n      swap2\n      dup3\n      shr\n      swap2\n        /* \"five/MostSignificanBit.sol\":528:533  r+=16 */\n      tag_19\n      swap1\n      dup3\n      tag_13\n      jump\t// in\n    tag_19:\n      swap1\n      pop\n        /* \"five/MostSignificanBit.sol\":479:545  if(x>= 2**16){... */\n    tag_18:\n        /* \"five/MostSignificanBit.sol\":562:566  2**8 */\n      0x0100\n        /* \"five/MostSignificanBit.sol\":558:559  x */\n      dup3\n        /* \"five/MostSignificanBit.sol\":558:566  x>= 2**8 */\n      lt\n        /* \"five/MostSignificanBit.sol\":555:618  if(x>= 2**8){... */\n      tag_20\n      jumpi\n        /* \"five/MostSignificanBit.sol\":586:587  8 */\n      0x08\n        /* \"five/MostSignificanBit.sol\":582:587  x>>=8 */\n      swap2\n      dup3\n      shr\n      swap2\n        /* \"five/MostSignificanBit.sol\":602:606  r+=8 */\n      tag_21\n      swap1\n      dup3\n      tag_13\n      jump\t// in\n    tag_21:\n      swap1\n      pop\n        /* \"five/MostSignificanBit.sol\":555:618  if(x>= 2**8){... */\n    tag_20:\n        /* \"five/MostSignificanBit.sol\":1004:1007  0xf */\n      0x0f\n        /* \"five/MostSignificanBit.sol\":998:1008  gt(x, 0xf) */\n      dup3\n      gt\n        /* \"five/MostSignificanBit.sol\":995:996  2 */\n      0x02\n        /* \"five/MostSignificanBit.sol\":991:1009  shl(2, gt(x, 0xf)) */\n      shl\n        /* \"five/MostSignificanBit.sol\":1177:1185  or(r, f) */\n      swap1\n      dup2\n      or\n        /* \"five/MostSignificanBit.sol\":1582:1585  0x3 */\n      0x03\n        /* \"five/MostSignificanBit.sol\":1081:1090  shr(f, x) */\n      swap3\n      swap1\n      swap2\n      shr\n        /* \"five/MostSignificanBit.sol\":1576:1586  gt(x, 0x3) */\n      swap2\n      dup3\n      gt\n        /* \"five/MostSignificanBit.sol\":1573:1574  1 */\n      0x01\n        /* \"five/MostSignificanBit.sol\":1569:1587  shl(1, gt(x, 0x3)) */\n      swap1\n      dup2\n      shl\n        /* \"five/MostSignificanBit.sol\":1755:1763  or(r, f) */\n      swap2\n      dup3\n      or\n        /* \"five/MostSignificanBit.sol\":1659:1668  shr(f, x) */\n      swap3\n      swap1\n      swap2\n      shr\n        /* \"five/MostSignificanBit.sol\":2054:2064  gt(x, 0x1) */\n      gt\n        /* \"five/MostSignificanBit.sol\":2136:2145  add(r, f) */\n      add\n      swap1\n        /* \"five/MostSignificanBit.sol\":167:2163  function findMostSignificantBit(uint x) external pure returns(uint8 r){... */\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_6:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_24\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_24:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":388:633   */\n    tag_13:\n        /* \"#utility.yul\":476:480   */\n      0xff\n        /* \"#utility.yul\":455:467   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":469:481   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":451:482   */\n      add\n      swap1\n        /* \"#utility.yul\":494:507   */\n      dup2\n      gt\n        /* \"#utility.yul\":491:627   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":549:559   */\n      0x4e487b71\n        /* \"#utility.yul\":544:547   */\n      0xe0\n        /* \"#utility.yul\":540:560   */\n      shl\n        /* \"#utility.yul\":537:538   */\n      0x00\n        /* \"#utility.yul\":530:561   */\n      mstore\n        /* \"#utility.yul\":584:588   */\n      0x11\n        /* \"#utility.yul\":581:582   */\n      0x04\n        /* \"#utility.yul\":574:589   */\n      mstore\n        /* \"#utility.yul\":612:616   */\n      0x24\n        /* \"#utility.yul\":609:610   */\n      0x00\n        /* \"#utility.yul\":602:617   */\n      revert\n        /* \"#utility.yul\":491:627   */\n    tag_27:\n        /* \"#utility.yul\":388:633   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209f3519f1e8ea540c59f97c494a6b1e8080100afbe874b3094aa4a03b638def2864736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b5061018c8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063483d868d1461002d575b5f5ffd5b61004061003b366004610114565b610056565b60405160ff909116815260200160405180910390f35b5f600160801b821061007557608091821c91610072908261012b565b90505b68010000000000000000821061009857604091821c91610095908261012b565b90505b64010000000082106100b757602091821c916100b4908261012b565b90505b6201000082106100d457601091821c916100d1908261012b565b90505b61010082106100f057600891821c916100ed908261012b565b90505b600f821160021b90811760039290911c918211600190811b9182179290911c110190565b5f60208284031215610124575f5ffd5b5035919050565b60ff818116838216019081111561015057634e487b7160e01b5f52601160045260245ffd5b9291505056fea26469706673582212209f3519f1e8ea540c59f97c494a6b1e8080100afbe874b3094aa4a03b638def2864736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18C DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x483D868D EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x3B CALLDATASIZE PUSH1 0x4 PUSH2 0x114 JUMP JUMPDEST PUSH2 0x56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x75 JUMPI PUSH1 0x80 SWAP2 DUP3 SHR SWAP2 PUSH2 0x72 SWAP1 DUP3 PUSH2 0x12B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x98 JUMPI PUSH1 0x40 SWAP2 DUP3 SHR SWAP2 PUSH2 0x95 SWAP1 DUP3 PUSH2 0x12B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0xB7 JUMPI PUSH1 0x20 SWAP2 DUP3 SHR SWAP2 PUSH2 0xB4 SWAP1 DUP3 PUSH2 0x12B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0xD4 JUMPI PUSH1 0x10 SWAP2 DUP3 SHR SWAP2 PUSH2 0xD1 SWAP1 DUP3 PUSH2 0x12B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0xF0 JUMPI PUSH1 0x8 SWAP2 DUP3 SHR SWAP2 PUSH2 0xED SWAP1 DUP3 PUSH2 0x12B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0xF DUP3 GT PUSH1 0x2 SHL SWAP1 DUP2 OR PUSH1 0x3 SWAP3 SWAP1 SWAP2 SHR SWAP2 DUP3 GT PUSH1 0x1 SWAP1 DUP2 SHL SWAP2 DUP3 OR SWAP3 SWAP1 SWAP2 SHR GT ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x150 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 CALLDATALOAD NOT CALL 0xE8 0xEA SLOAD 0xC MSIZE EXTDELEGATECALL PUSH29 0x494A6B1E8080100AFBE874B3094AA4A03B638DEF2864736F6C63430008 SAR STOP CALLER ",
							"sourceMap": "109:2059:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@findMostSignificantBit_87": {
									"entryPoint": 86,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint8": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:635:1",
										"nodeType": "YulBlock",
										"src": "0:635:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:1",
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:1",
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:1",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:1",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nativeSrc": "132:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nativeSrc": "132:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nativeSrc": "101:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:1",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nativeSrc": "97:32:1",
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nativeSrc": "94:52:1",
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nativeSrc": "155:33:1",
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nativeSrc": "165:23:1",
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:1",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:1",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:1",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nativeSrc": "296:87:1",
													"nodeType": "YulBlock",
													"src": "296:87:1",
													"statements": [
														{
															"nativeSrc": "306:26:1",
															"nodeType": "YulAssignment",
															"src": "306:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "318:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "318:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "329:2:1",
																		"nodeType": "YulLiteral",
																		"src": "329:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "314:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "314:3:1"
																},
																"nativeSrc": "314:18:1",
																"nodeType": "YulFunctionCall",
																"src": "314:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "306:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "306:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "348:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "348:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "363:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "371:4:1",
																				"nodeType": "YulLiteral",
																				"src": "371:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "359:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "359:3:1"
																		},
																		"nativeSrc": "359:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "359:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "341:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "341:6:1"
																},
																"nativeSrc": "341:36:1",
																"nodeType": "YulFunctionCall",
																"src": "341:36:1"
															},
															"nativeSrc": "341:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "341:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "199:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "265:9:1",
														"nodeType": "YulTypedName",
														"src": "265:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "276:6:1",
														"nodeType": "YulTypedName",
														"src": "276:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "287:4:1",
														"nodeType": "YulTypedName",
														"src": "287:4:1",
														"type": ""
													}
												],
												"src": "199:184:1"
											},
											{
												"body": {
													"nativeSrc": "434:199:1",
													"nodeType": "YulBlock",
													"src": "434:199:1",
													"statements": [
														{
															"nativeSrc": "444:38:1",
															"nodeType": "YulAssignment",
															"src": "444:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "459:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "459:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "462:4:1",
																				"nodeType": "YulLiteral",
																				"src": "462:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "455:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "455:3:1"
																		},
																		"nativeSrc": "455:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "455:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "473:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "473:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "476:4:1",
																				"nodeType": "YulLiteral",
																				"src": "476:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "469:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "469:3:1"
																		},
																		"nativeSrc": "469:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "469:12:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "451:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "451:3:1"
																},
																"nativeSrc": "451:31:1",
																"nodeType": "YulFunctionCall",
																"src": "451:31:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "444:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "444:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "516:111:1",
																"nodeType": "YulBlock",
																"src": "516:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "537:1:1",
																					"nodeType": "YulLiteral",
																					"src": "537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "544:3:1",
																							"nodeType": "YulLiteral",
																							"src": "544:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "549:10:1",
																							"nodeType": "YulLiteral",
																							"src": "549:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "540:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "540:3:1"
																					},
																					"nativeSrc": "540:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "540:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "530:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "530:6:1"
																			},
																			"nativeSrc": "530:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "530:31:1"
																		},
																		"nativeSrc": "530:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "530:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "581:1:1",
																					"nodeType": "YulLiteral",
																					"src": "581:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "584:4:1",
																					"nodeType": "YulLiteral",
																					"src": "584:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "574:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "574:6:1"
																			},
																			"nativeSrc": "574:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "574:15:1"
																		},
																		"nativeSrc": "574:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "574:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "609:1:1",
																					"nodeType": "YulLiteral",
																					"src": "609:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "612:4:1",
																					"nodeType": "YulLiteral",
																					"src": "612:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "602:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "602:6:1"
																			},
																			"nativeSrc": "602:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "602:15:1"
																		},
																		"nativeSrc": "602:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "602:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "497:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "497:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "502:4:1",
																		"nodeType": "YulLiteral",
																		"src": "502:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "494:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "494:2:1"
																},
																"nativeSrc": "494:13:1",
																"nodeType": "YulFunctionCall",
																"src": "494:13:1"
															},
															"nativeSrc": "491:136:1",
															"nodeType": "YulIf",
															"src": "491:136:1"
														}
													]
												},
												"name": "checked_add_t_uint8",
												"nativeSrc": "388:245:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "417:1:1",
														"nodeType": "YulTypedName",
														"src": "417:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "420:1:1",
														"nodeType": "YulTypedName",
														"src": "420:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "426:3:1",
														"nodeType": "YulTypedName",
														"src": "426:3:1",
														"type": ""
													}
												],
												"src": "388:245:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        sum := add(and(x, 0xff), and(y, 0xff))\n        if gt(sum, 0xff)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063483d868d1461002d575b5f5ffd5b61004061003b366004610114565b610056565b60405160ff909116815260200160405180910390f35b5f600160801b821061007557608091821c91610072908261012b565b90505b68010000000000000000821061009857604091821c91610095908261012b565b90505b64010000000082106100b757602091821c916100b4908261012b565b90505b6201000082106100d457601091821c916100d1908261012b565b90505b61010082106100f057600891821c916100ed908261012b565b90505b600f821160021b90811760039290911c918211600190811b9182179290911c110190565b5f60208284031215610124575f5ffd5b5035919050565b60ff818116838216019081111561015057634e487b7160e01b5f52601160045260245ffd5b9291505056fea26469706673582212209f3519f1e8ea540c59f97c494a6b1e8080100afbe874b3094aa4a03b638def2864736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x483D868D EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x3B CALLDATASIZE PUSH1 0x4 PUSH2 0x114 JUMP JUMPDEST PUSH2 0x56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x75 JUMPI PUSH1 0x80 SWAP2 DUP3 SHR SWAP2 PUSH2 0x72 SWAP1 DUP3 PUSH2 0x12B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x98 JUMPI PUSH1 0x40 SWAP2 DUP3 SHR SWAP2 PUSH2 0x95 SWAP1 DUP3 PUSH2 0x12B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0xB7 JUMPI PUSH1 0x20 SWAP2 DUP3 SHR SWAP2 PUSH2 0xB4 SWAP1 DUP3 PUSH2 0x12B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0xD4 JUMPI PUSH1 0x10 SWAP2 DUP3 SHR SWAP2 PUSH2 0xD1 SWAP1 DUP3 PUSH2 0x12B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0xF0 JUMPI PUSH1 0x8 SWAP2 DUP3 SHR SWAP2 PUSH2 0xED SWAP1 DUP3 PUSH2 0x12B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0xF DUP3 GT PUSH1 0x2 SHL SWAP1 DUP2 OR PUSH1 0x3 SWAP3 SWAP1 SWAP2 SHR SWAP2 DUP3 GT PUSH1 0x1 SWAP1 DUP2 SHL SWAP2 DUP3 OR SWAP3 SWAP1 SWAP2 SHR GT ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x150 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 CALLDATALOAD NOT CALL 0xE8 0xEA SLOAD 0xC MSIZE EXTDELEGATECALL PUSH29 0x494A6B1E8080100AFBE874B3094AA4A03B638DEF2864736F6C63430008 SAR STOP CALLER ",
							"sourceMap": "109:2059:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;167:1996;;;;;;:::i;:::-;;:::i;:::-;;;371:4:1;359:17;;;341:36;;329:2;314:18;167:1996:0;;;;;;;;229:7;-1:-1:-1;;;251:1:0;:10;248:69;;281:3;277:7;;;;299:6;;;;:::i;:::-;;;248:69;334:5;330:1;:9;327:66;;359:2;355:6;;;;376:5;;;;:::i;:::-;;;327:66;410:5;406:1;:9;403:66;;435:2;431:6;;;;452:5;;;;:::i;:::-;;;403:66;486:5;482:1;:9;479:66;;511:2;507:6;;;;528:5;;;;:::i;:::-;;;479:66;562:4;558:1;:8;555:63;;586:1;582:5;;;;602:4;;;;:::i;:::-;;;555:63;1004:3;998:10;;995:1;991:18;1177:8;;;1582:3;1081:9;;;;1576:10;;;1573:1;1569:18;;;1755:8;;;1659:9;;;;2054:10;2136:9;;167:1996::o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;388:245::-;476:4;455:12;;;469;;;451:31;;494:13;;491:136;;;549:10;544:3;540:20;537:1;530:31;584:4;581:1;574:15;612:4;609:1;602:15;491:136;388:245;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "79200",
								"executionCost": "127",
								"totalCost": "79327"
							},
							"external": {
								"findMostSignificantBit(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 109,
									"end": 2168,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 109,
									"end": 2168,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 109,
									"end": 2168,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 109,
									"end": 2168,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 109,
									"end": 2168,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 2168,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 109,
									"end": 2168,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 109,
									"end": 2168,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 109,
									"end": 2168,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 2168,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 2168,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 109,
									"end": 2168,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 109,
									"end": 2168,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 109,
									"end": 2168,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 109,
									"end": 2168,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 2168,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 2168,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 2168,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 2168,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 109,
									"end": 2168,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 2168,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209f3519f1e8ea540c59f97c494a6b1e8080100afbe874b3094aa4a03b638def2864736f6c634300081d0033",
									".code": [
										{
											"begin": 109,
											"end": 2168,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "PUSH",
											"source": 0,
											"value": "483D868D"
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 2168,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 167,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 167,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 371,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 359,
											"end": 376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 359,
											"end": 376,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 359,
											"end": 376,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 341,
											"end": 377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 341,
											"end": 377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 329,
											"end": 331,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 314,
											"end": 332,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 167,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 229,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 251,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 251,
											"end": 261,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 248,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 248,
											"end": 317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 284,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 277,
											"end": 284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 277,
											"end": 284,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 277,
											"end": 284,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 277,
											"end": 284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 299,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 299,
											"end": 305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 299,
											"end": 305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 299,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 299,
											"end": 305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 299,
											"end": 305,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 299,
											"end": 305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 299,
											"end": 305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 299,
											"end": 305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 248,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 248,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 334,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000"
										},
										{
											"begin": 330,
											"end": 331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 330,
											"end": 339,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 327,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 327,
											"end": 393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 359,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 355,
											"end": 361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 361,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 355,
											"end": 361,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 355,
											"end": 361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 376,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 376,
											"end": 381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 376,
											"end": 381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 376,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 376,
											"end": 381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 376,
											"end": 381,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 376,
											"end": 381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 376,
											"end": 381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 376,
											"end": 381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 327,
											"end": 393,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 327,
											"end": 393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 410,
											"end": 415,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 406,
											"end": 407,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 406,
											"end": 415,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 403,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 403,
											"end": 469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 435,
											"end": 437,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 431,
											"end": 437,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 431,
											"end": 437,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 431,
											"end": 437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 452,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 452,
											"end": 457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 457,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 452,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 452,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 452,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 452,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 452,
											"end": 457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 403,
											"end": 469,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 403,
											"end": 469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 486,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 482,
											"end": 483,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 482,
											"end": 491,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 479,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 479,
											"end": 545,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 511,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 507,
											"end": 513,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 507,
											"end": 513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 528,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 528,
											"end": 533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 528,
											"end": 533,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 528,
											"end": 533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 479,
											"end": 545,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 479,
											"end": 545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 562,
											"end": 566,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 558,
											"end": 559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 558,
											"end": 566,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 555,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 555,
											"end": 618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 586,
											"end": 587,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 582,
											"end": 587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 582,
											"end": 587,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 582,
											"end": 587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 602,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 602,
											"end": 606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 602,
											"end": 606,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 602,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 602,
											"end": 606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 602,
											"end": 606,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 602,
											"end": 606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 602,
											"end": 606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 602,
											"end": 606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 618,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 555,
											"end": 618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1007,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 995,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 991,
											"end": 1009,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1185,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1585,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1081,
											"end": 1090,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1090,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1090,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1586,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1569,
											"end": 1587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1587,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1668,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1668,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2054,
											"end": 2064,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2136,
											"end": 2145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2136,
											"end": 2145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 388,
											"end": 633,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 388,
											"end": 633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 476,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 455,
											"end": 467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 455,
											"end": 467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 455,
											"end": 467,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 469,
											"end": 481,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 469,
											"end": 481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 469,
											"end": 481,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 451,
											"end": 482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 451,
											"end": 482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 494,
											"end": 507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 494,
											"end": 507,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 491,
											"end": 627,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 491,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 491,
											"end": 627,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 549,
											"end": 559,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 544,
											"end": 547,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 540,
											"end": 560,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 537,
											"end": 538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 584,
											"end": 588,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 581,
											"end": 582,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 612,
											"end": 616,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 609,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 602,
											"end": 617,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 491,
											"end": 627,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 491,
											"end": 627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 388,
											"end": 633,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 388,
											"end": 633,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 388,
											"end": 633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 388,
											"end": 633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 388,
											"end": 633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"five/MostSignificanBit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"findMostSignificantBit(uint256)": "483d868d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"findMostSignificantBit\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"r\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"five/MostSignificanBit.sol\":\"MostSignificantBit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"five/MostSignificanBit.sol\":{\"keccak256\":\"0x7a0097f6cccd768ecf3fa26648dd92f16e0137e2b50be8e71f0377d002048557\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bf8d413145603db1d12072557e080791e7abb407ea968386ac715468a19d8d2\",\"dweb:/ipfs/QmSJ6xwx1y6tDB81AtgmYA1b1GZPuRWjr2Rm1VzbNdrfEq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"five/MostSignificanBit.sol": {
				"ast": {
					"absolutePath": "five/MostSignificanBit.sol",
					"exportedSymbols": {
						"MostSignificantBit": [
							88
						]
					},
					"id": 89,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MostSignificantBit",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "MostSignificantBit",
							"nameLocation": "118:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "237:1926:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "251:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "255:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "313238",
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "258:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "128"
														},
														"src": "255:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														}
													},
													"src": "251:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 22,
												"nodeType": "IfStatement",
												"src": "248:69:0",
												"trueBody": {
													"id": 21,
													"nodeType": "Block",
													"src": "262:55:0",
													"statements": [
														{
															"expression": {
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 13,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "277:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 14,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "281:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "277:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 16,
															"nodeType": "ExpressionStatement",
															"src": "277:7:0"
														},
														{
															"expression": {
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 17,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "299:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 18,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "302:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "299:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 20,
															"nodeType": "ExpressionStatement",
															"src": "299:6:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 23,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "330:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_18446744073709551616_by_1",
															"typeString": "int_const 18446744073709551616"
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "334:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3634",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "337:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														},
														"src": "334:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18446744073709551616_by_1",
															"typeString": "int_const 18446744073709551616"
														}
													},
													"src": "330:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 37,
												"nodeType": "IfStatement",
												"src": "327:66:0",
												"trueBody": {
													"id": 36,
													"nodeType": "Block",
													"src": "340:53:0",
													"statements": [
														{
															"expression": {
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 28,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "355:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "359:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "355:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 31,
															"nodeType": "ExpressionStatement",
															"src": "355:6:0"
														},
														{
															"expression": {
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 32,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "376:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "379:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "376:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 35,
															"nodeType": "ExpressionStatement",
															"src": "376:5:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 38,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "406:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_4294967296_by_1",
															"typeString": "int_const 4294967296"
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "410:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3332",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "413:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "410:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4294967296_by_1",
															"typeString": "int_const 4294967296"
														}
													},
													"src": "406:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 52,
												"nodeType": "IfStatement",
												"src": "403:66:0",
												"trueBody": {
													"id": 51,
													"nodeType": "Block",
													"src": "416:53:0",
													"statements": [
														{
															"expression": {
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 43,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "431:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 44,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "435:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "431:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 46,
															"nodeType": "ExpressionStatement",
															"src": "431:6:0"
														},
														{
															"expression": {
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 47,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "452:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 48,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "455:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "452:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 50,
															"nodeType": "ExpressionStatement",
															"src": "452:5:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 53,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "482:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_65536_by_1",
															"typeString": "int_const 65536"
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "486:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3136",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "489:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "16"
														},
														"src": "486:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65536_by_1",
															"typeString": "int_const 65536"
														}
													},
													"src": "482:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 67,
												"nodeType": "IfStatement",
												"src": "479:66:0",
												"trueBody": {
													"id": 66,
													"nodeType": "Block",
													"src": "492:53:0",
													"statements": [
														{
															"expression": {
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 58,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "507:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "511:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "507:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 61,
															"nodeType": "ExpressionStatement",
															"src": "507:6:0"
														},
														{
															"expression": {
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 62,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "528:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "531:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "528:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 65,
															"nodeType": "ExpressionStatement",
															"src": "528:5:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "558:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "562:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "38",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "565:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"src": "562:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														}
													},
													"src": "558:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "555:63:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "567:51:0",
													"statements": [
														{
															"expression": {
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 73,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "582:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 74,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "586:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "582:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 76,
															"nodeType": "ExpressionStatement",
															"src": "582:5:0"
														},
														{
															"expression": {
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 77,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "602:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "605:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "602:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 80,
															"nodeType": "ExpressionStatement",
															"src": "602:4:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "779:417:0",
													"nodeType": "YulBlock",
													"src": "779:417:0",
													"statements": [
														{
															"nativeSrc": "982:27:0",
															"nodeType": "YulVariableDeclaration",
															"src": "982:27:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "995:1:0",
																		"nodeType": "YulLiteral",
																		"src": "995:1:0",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "1001:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "1001:1:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1004:3:0",
																				"nodeType": "YulLiteral",
																				"src": "1004:3:0",
																				"type": "",
																				"value": "0xf"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "998:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "998:2:0"
																		},
																		"nativeSrc": "998:10:0",
																		"nodeType": "YulFunctionCall",
																		"src": "998:10:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "991:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "991:3:0"
																},
																"nativeSrc": "991:18:0",
																"nodeType": "YulFunctionCall",
																"src": "991:18:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "986:1:0",
																	"nodeType": "YulTypedName",
																	"src": "986:1:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1076:14:0",
															"nodeType": "YulAssignment",
															"src": "1076:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "1085:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1085:1:0"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "1088:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1088:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1081:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:0"
																},
																"nativeSrc": "1081:9:0",
																"nodeType": "YulFunctionCall",
																"src": "1081:9:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "1076:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "1076:1:0"
																}
															]
														},
														{
															"nativeSrc": "1172:13:0",
															"nodeType": "YulAssignment",
															"src": "1172:13:0",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "1180:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1180:1:0"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "1183:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1183:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1177:2:0",
																	"nodeType": "YulIdentifier",
																	"src": "1177:2:0"
																},
																"nativeSrc": "1177:8:0",
																"nodeType": "YulFunctionCall",
																"src": "1177:8:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "1172:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "1172:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 6,
														"isOffset": false,
														"isSlot": false,
														"src": "1172:1:0",
														"valueSize": 1
													},
													{
														"declaration": 6,
														"isOffset": false,
														"isSlot": false,
														"src": "1180:1:0",
														"valueSize": 1
													},
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "1001:1:0",
														"valueSize": 1
													},
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "1076:1:0",
														"valueSize": 1
													},
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "1088:1:0",
														"valueSize": 1
													}
												],
												"id": 83,
												"nodeType": "InlineAssembly",
												"src": "770:426:0"
											},
											{
												"AST": {
													"nativeSrc": "1359:415:0",
													"nodeType": "YulBlock",
													"src": "1359:415:0",
													"statements": [
														{
															"nativeSrc": "1560:27:0",
															"nodeType": "YulVariableDeclaration",
															"src": "1560:27:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1573:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1573:1:0",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "1579:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "1579:1:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1582:3:0",
																				"nodeType": "YulLiteral",
																				"src": "1582:3:0",
																				"type": "",
																				"value": "0x3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1576:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "1576:2:0"
																		},
																		"nativeSrc": "1576:10:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1576:10:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1569:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "1569:3:0"
																},
																"nativeSrc": "1569:18:0",
																"nodeType": "YulFunctionCall",
																"src": "1569:18:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "1564:1:0",
																	"nodeType": "YulTypedName",
																	"src": "1564:1:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1654:14:0",
															"nodeType": "YulAssignment",
															"src": "1654:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "1663:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1663:1:0"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "1666:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1666:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1659:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "1659:3:0"
																},
																"nativeSrc": "1659:9:0",
																"nodeType": "YulFunctionCall",
																"src": "1659:9:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "1654:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "1654:1:0"
																}
															]
														},
														{
															"nativeSrc": "1750:13:0",
															"nodeType": "YulAssignment",
															"src": "1750:13:0",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "1758:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1758:1:0"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "1761:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1761:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1755:2:0",
																	"nodeType": "YulIdentifier",
																	"src": "1755:2:0"
																},
																"nativeSrc": "1755:8:0",
																"nodeType": "YulFunctionCall",
																"src": "1755:8:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "1750:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "1750:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 6,
														"isOffset": false,
														"isSlot": false,
														"src": "1750:1:0",
														"valueSize": 1
													},
													{
														"declaration": 6,
														"isOffset": false,
														"isSlot": false,
														"src": "1758:1:0",
														"valueSize": 1
													},
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "1579:1:0",
														"valueSize": 1
													},
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "1654:1:0",
														"valueSize": 1
													},
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "1666:1:0",
														"valueSize": 1
													}
												],
												"id": 84,
												"nodeType": "InlineAssembly",
												"src": "1350:424:0"
											},
											{
												"AST": {
													"nativeSrc": "1903:253:0",
													"nodeType": "YulBlock",
													"src": "1903:253:0",
													"statements": [
														{
															"nativeSrc": "2045:19:0",
															"nodeType": "YulVariableDeclaration",
															"src": "2045:19:0",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2057:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2057:1:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2060:3:0",
																		"nodeType": "YulLiteral",
																		"src": "2060:3:0",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2054:2:0",
																	"nodeType": "YulIdentifier",
																	"src": "2054:2:0"
																},
																"nativeSrc": "2054:10:0",
																"nodeType": "YulFunctionCall",
																"src": "2054:10:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "2049:1:0",
																	"nodeType": "YulTypedName",
																	"src": "2049:1:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2131:14:0",
															"nodeType": "YulAssignment",
															"src": "2131:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "2140:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2140:1:0"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "2143:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "2143:1:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2136:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "2136:3:0"
																},
																"nativeSrc": "2136:9:0",
																"nodeType": "YulFunctionCall",
																"src": "2136:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2131:1:0",
																	"nodeType": "YulIdentifier",
																	"src": "2131:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 6,
														"isOffset": false,
														"isSlot": false,
														"src": "2131:1:0",
														"valueSize": 1
													},
													{
														"declaration": 6,
														"isOffset": false,
														"isSlot": false,
														"src": "2140:1:0",
														"valueSize": 1
													},
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "2057:1:0",
														"valueSize": 1
													}
												],
												"id": 85,
												"nodeType": "InlineAssembly",
												"src": "1894:262:0"
											}
										]
									},
									"functionSelector": "483d868d",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findMostSignificantBit",
									"nameLocation": "176:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "204:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "199:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "199:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "198:8:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "235:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "229:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 5,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "229:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "228:9:0"
									},
									"scope": 88,
									"src": "167:1996:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 89,
							"src": "109:2059:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:2135:0"
				},
				"id": 0
			}
		}
	}
}