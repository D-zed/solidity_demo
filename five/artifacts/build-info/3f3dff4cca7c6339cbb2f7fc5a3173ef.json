{
	"id": "3f3dff4cca7c6339cbb2f7fc5a3173ef",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"five/AMM.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\n//测试此还需要同事启动两个IERC20合约\r\ncontract CSAMM{\r\n    // 两种币的合约的地址\r\n    IERC20 public immutable token0;\r\n    IERC20 public immutable token1;\r\n   \r\n    // 流动性池储备量 分别是两种币的个数，余额\r\n    uint public reserve0;\r\n    uint public reserve1;\r\n    // 总流动性份额\r\n    uint public totalSupply;\r\n\r\n    // 用户份额映射\r\n    mapping(address => uint) public balanceOf;\r\n\r\n    constructor(address _token0, address _token1){\r\n        token0=IERC20(_token0);\r\n        token1=IERC20(_token1);\r\n    }\r\n\r\n    /**\r\n     * @dev 铸造流动性份额（内部函数）\r\n     * @param _to 接收地址\r\n     * @param _amount 份额数量\r\n     */\r\n    function _mint(address _to,uint _amount)private  {\r\n        balanceOf[_to] +=_amount;\r\n        totalSupply+=_amount;\r\n    }\r\n\r\n    /**\r\n     * @dev 销毁流动性份额（内部函数）\r\n     * @param _from 来源地址\r\n     * @param _amount 份额数量\r\n     */\r\n    function _burn(address _from,uint _amount)private{\r\n        balanceOf[_from] -= _amount;\r\n        totalSupply-=_amount;\r\n    }\r\n\r\n    /**\r\n     * @dev 更新储备量（内部函数）\r\n     * @param _res0 新的token0储备\r\n     * @param _res1 新的token1储备\r\n     */\r\n    function _update(uint _res0,uint _res1)private  {\r\n        reserve0 = _res0;\r\n        reserve1=_res1;\r\n    }\r\n    \r\n    \r\n    // 事件：流动性添加\r\n    event Deposit(address indexed user, uint amount0, uint amount1);\r\n\r\n\r\n    /**\r\n     * @dev 代币交换函数\r\n     * @param _tokenIn 输入代币地址\r\n     * @param _amountIn 输入数量\r\n     * @return amountOut 实际输出数量\r\n      交换的过程加入入参为 token0 5，则需要\r\n     */\r\n    function swap(address _tokenIn,uint _amountIn) external\r\n    returns (uint amountOut)\r\n    {\r\n        require(\r\n            _tokenIn==address(token0)||_tokenIn==address(token1),\r\n            \"invalid token\"\r\n        );\r\n\r\n        bool isToken0=_tokenIn==address(token0);\r\n\r\n        (IERC20 tokenIn,IERC20 tokenOut,uint resIn,uint resOut) = isToken0 ? (token0,token1,reserve0,reserve1):(token1,token0,reserve1,reserve0);\r\n\r\n       \r\n        //token.transferFrom(from, to, value);\r\n        tokenIn.transferFrom(msg.sender, address(this), _amountIn);\r\n        uint amountIn=tokenIn.balanceOf(address(this)) - resIn;\r\n\r\n        //calculate amount out (include fees)\r\n        // 0.003 fee\r\n        amountOut = (amountIn * 997)/1000;\r\n\r\n        //update reserve0 and reserve1\r\n        (uint res0,uint res1) = isToken0 ? (resIn-_amountIn, resOut+amountOut):(resOut+amountOut, resIn-_amountIn);\r\n        _update(res0, res1);\r\n        //transfer token out\r\n        tokenOut.transfer(msg.sender,amountOut);\r\n    }\r\n    /**\r\n     * @dev 添加流动性\r\n     * @param _amount0 存入的token0数量\r\n     * @param _amount1 存入的token1数量\r\n     * @return shares 获得的流动性份额\r\n     */\r\n    function addLiquidity(uint _amount0,uint _amount1) external returns(uint shares) {\r\n        // token0.transferFrom(from, to, value);\r\n        token0.transferFrom(msg.sender, address(this), _amount0);\r\n        token1.transferFrom(msg.sender, address(this), _amount1);\r\n        //token0的余额\r\n        uint bal0= token0.balanceOf(address(this));\r\n        //token1的余额\r\n        uint bal1= token1.balanceOf(address(this));\r\n\r\n        uint d0= bal0 - reserve0;\r\n        uint d1= bal1 -reserve1;\r\n        /*\r\n        自动做市商（AMM）中添加流动性时，如何计算用户应获得的流动性份额（Shares）\r\n        a = amount in 用户注入的资产数量（amount in）\r\n        L = total liquidity 流动性池的当前总流动性（total liquidity）当前总币的数量\r\n        S = shares to mint 用户应获得的新铸造份额（shares to mint）\r\n        T = total supply 现有流动性份额的总供应量（total supply）当前总份额\r\n        (L + a) / L = (T + s) / T\r\n        s = a * T / L\r\n        */\r\n\r\n        if(totalSupply==0){\r\n            //初始的份额和余额 1:1\r\n            shares = d0 + d1;\r\n        }else {\r\n            shares = ((d0+d1)*totalSupply)/(reserve0+reserve1);\r\n        }\r\n\r\n        require(shares >0,\"shares = 0\");\r\n        _mint(msg.sender, shares);\r\n\r\n        _update(bal0, bal1);\r\n\r\n    }\r\n    \r\n    /**\r\n     * @dev 移除流动性\r\n     * @param _shares 销毁的份额数量\r\n     * @return d0 返回的token0数量\r\n     * @return d1 返回的token1数量\r\n     */\r\n    function removeLiquidity(uint _shares) external returns (uint d0,uint d1){\r\n        /*\r\n        自动做市商（AMM）中添加流动性时，如何计算用户应获得的流动性份额（Shares）\r\n        a = amount in 用户注入的资产数量（amount in）\r\n        L = total liquidity 流动性池的当前总流动性（total liquidity）\r\n        S = shares to mint 用户应获得的新铸造份额（shares to mint）\r\n        T = total supply 现有流动性份额的总供应量（total supply）当前总份额\r\n        (L + a) / L = (T + s) / T\r\n        a = L * s / T\r\n         (d0+d1) = (reserve0 + reserve1) * s / T (1)\r\n\r\n          d0/d1=reserve0/reserve1 因为时恒和的所以这个比例为斜率，相等 (2) ->d1=d0*reserve1/reserve0 (3)     \r\n          将3带入1 ->  d0 +d0*reserve1/reserve0=(reserve0 + reserve1) * s / T\r\n          -> d0*reserve0/reserve0 +d0*reserve1/reserve0=(reserve0 + reserve1) * s / T\r\n          d0*(reserve0+reserve1)/reserve0=(reserve0 + reserve1) * s / T\r\n          d0/reserve0=s/T\r\n          d0=reserve0 * s/T \r\n          d1同理\r\n\r\n        */\r\n        //由份额计算出来 币 的数量\r\n        d0= (reserve0 * _shares) / totalSupply;\r\n        d1= (reserve1 * _shares) / totalSupply;\r\n\r\n        _burn(msg.sender, _shares);\r\n\r\n        // 币的储备量减去由消减的份额算出来的币的数量，然后更新储备量\r\n        _update(reserve0-d0,reserve1 -d1);\r\n\r\n        if (d0 >0) {\r\n            token0.transfer(msg.sender, d0);\r\n        } \r\n        \r\n        if (d1 > 0){\r\n            token1.transfer(msg.sender, d1);\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"five/AMM.sol": {
				"CSAMM": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount1",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "d0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "d1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenIn",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amountIn",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addLiquidity(uint256,uint256)": {
								"details": "添加流动性",
								"params": {
									"_amount0": "存入的token0数量",
									"_amount1": "存入的token1数量"
								},
								"returns": {
									"shares": "获得的流动性份额"
								}
							},
							"removeLiquidity(uint256)": {
								"details": "移除流动性",
								"params": {
									"_shares": "销毁的份额数量"
								},
								"returns": {
									"d0": "返回的token0数量",
									"d1": "返回的token1数量"
								}
							},
							"swap(address,uint256)": {
								"details": "代币交换函数",
								"params": {
									"_amountIn": "输入数量",
									"_tokenIn": "输入代币地址"
								},
								"returns": {
									"amountOut": "实际输出数量 交换的过程加入入参为 token0 5，则需要"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"five/AMM.sol\":171:6210  contract CSAMM{... */\n  mstore(0x40, 0xc0)\n    /* \"five/AMM.sol\":564:683  constructor(address _token0, address _token1){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"five/AMM.sol\":620:642  token0=IERC20(_token0) */\n  swap2\n  dup3\n  and\n  0x80\n  mstore\n    /* \"five/AMM.sol\":653:675  token1=IERC20(_token1) */\n  and\n  0xa0\n  mstore\n    /* \"five/AMM.sol\":171:6210  contract CSAMM{... */\n  jump(tag_8)\n    /* \"#utility.yul\":14:191   */\ntag_7:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  0x00\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_10:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  0x00\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_12\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  0x00\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_12:\n    /* \"#utility.yul\":375:415   */\n  tag_13\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_7\n  jump\t// in\ntag_13:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_14\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_7\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\ntag_8:\n    /* \"five/AMM.sol\":171:6210  contract CSAMM{... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n  0x00\n  assignImmutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"five/AMM.sol\":171:6210  contract CSAMM{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9c8f9f23\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x9cd441da\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd004f0f7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_11\n      jumpi\n      revert(0x00, 0x00)\n    tag_12:\n      dup1\n      0x0dfe1681\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x443cb4bc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5a76f25e\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"five/AMM.sol\":228:258  IERC20 public immutable token0 */\n    tag_3:\n      tag_13\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n      dup2\n      jump\n    tag_13:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":192:224   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":174:225   */\n      dup2\n      mstore\n        /* \"#utility.yul\":162:164   */\n      0x20\n        /* \"#utility.yul\":147:165   */\n      add\n        /* \"five/AMM.sol\":228:258  IERC20 public immutable token0 */\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"five/AMM.sol\":455:478  uint public totalSupply */\n    tag_4:\n      tag_17\n      sload(0x02)\n      dup2\n      jump\n    tag_17:\n      mload(0x40)\n        /* \"#utility.yul\":382:407   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":370:372   */\n      0x20\n        /* \"#utility.yul\":355:373   */\n      add\n        /* \"five/AMM.sol\":455:478  uint public totalSupply */\n      tag_15\n        /* \"#utility.yul\":236:413   */\n      jump\n        /* \"five/AMM.sol\":374:394  uint public reserve0 */\n    tag_5:\n      tag_17\n      sload(0x00)\n      dup2\n      jump\n        /* \"five/AMM.sol\":401:421  uint public reserve1 */\n    tag_6:\n      tag_17\n      sload(0x01)\n      dup2\n      jump\n        /* \"five/AMM.sol\":514:555  mapping(address => uint) public balanceOf */\n    tag_7:\n      tag_17\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"five/AMM.sol\":4594:6207  function removeLiquidity(uint _shares) external returns (uint d0,uint d1){... */\n    tag_8:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1192:1217   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1248:1250   */\n      0x20\n        /* \"#utility.yul\":1233:1251   */\n      dup4\n      add\n        /* \"#utility.yul\":1226:1260   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1165:1183   */\n      add\n        /* \"five/AMM.sol\":4594:6207  function removeLiquidity(uint _shares) external returns (uint d0,uint d1){... */\n      tag_15\n        /* \"#utility.yul\":1018:1266   */\n      jump\n        /* \"five/AMM.sol\":3045:4408  function addLiquidity(uint _amount0,uint _amount1) external returns(uint shares) {... */\n    tag_9:\n      tag_17\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"five/AMM.sol\":1849:2852  function swap(address _tokenIn,uint _amountIn) external... */\n    tag_10:\n      tag_17\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n        /* \"five/AMM.sol\":265:295  IERC20 public immutable token1 */\n    tag_11:\n      tag_13\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n      dup2\n      jump\n        /* \"five/AMM.sol\":4594:6207  function removeLiquidity(uint _shares) external returns (uint d0,uint d1){... */\n    tag_35:\n        /* \"five/AMM.sol\":4651:4658  uint d0 */\n      0x00\n        /* \"five/AMM.sol\":4659:4666  uint d1 */\n      0x00\n        /* \"five/AMM.sol\":5783:5794  totalSupply */\n      sload(0x02)\n        /* \"five/AMM.sol\":5772:5779  _shares */\n      dup4\n        /* \"five/AMM.sol\":5761:5769  reserve0 */\n      sload(0x00)\n        /* \"five/AMM.sol\":5761:5779  reserve0 * _shares */\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"five/AMM.sol\":5760:5794  (reserve0 * _shares) / totalSupply */\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"five/AMM.sol\":5756:5794  d0= (reserve0 * _shares) / totalSupply */\n      swap2\n      pop\n        /* \"five/AMM.sol\":5832:5843  totalSupply */\n      sload(0x02)\n        /* \"five/AMM.sol\":5821:5828  _shares */\n      dup4\n        /* \"five/AMM.sol\":5810:5818  reserve1 */\n      sload(0x01)\n        /* \"five/AMM.sol\":5810:5828  reserve1 * _shares */\n      tag_56\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_56:\n        /* \"five/AMM.sol\":5809:5843  (reserve1 * _shares) / totalSupply */\n      tag_57\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_57:\n        /* \"five/AMM.sol\":5805:5843  d1= (reserve1 * _shares) / totalSupply */\n      swap1\n      pop\n        /* \"five/AMM.sol\":5856:5882  _burn(msg.sender, _shares) */\n      tag_58\n        /* \"five/AMM.sol\":5862:5872  msg.sender */\n      caller\n        /* \"five/AMM.sol\":5874:5881  _shares */\n      dup5\n        /* \"five/AMM.sol\":5856:5861  _burn */\n      tag_59\n        /* \"five/AMM.sol\":5856:5882  _burn(msg.sender, _shares) */\n      jump\t// in\n    tag_58:\n        /* \"five/AMM.sol\":5995:6028  _update(reserve0-d0,reserve1 -d1) */\n      tag_60\n        /* \"five/AMM.sol\":6012:6014  d0 */\n      dup3\n        /* \"five/AMM.sol\":6003:6011  reserve0 */\n      sload(0x00)\n        /* \"five/AMM.sol\":6003:6014  reserve0-d0 */\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"five/AMM.sol\":6025:6027  d1 */\n      dup3\n        /* \"five/AMM.sol\":6015:6023  reserve1 */\n      sload(0x01)\n        /* \"five/AMM.sol\":6015:6027  reserve1 -d1 */\n      tag_63\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_63:\n        /* \"five/AMM.sol\":1440:1448  reserve0 */\n      0x00\n        /* \"five/AMM.sol\":1440:1456  reserve0 = _res0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"five/AMM.sol\":1467:1475  reserve1 */\n      0x01\n        /* \"five/AMM.sol\":1467:1481  reserve1=_res1 */\n      sstore\n        /* \"five/AMM.sol\":1381:1489  function _update(uint _res0,uint _res1)private  {... */\n      jump\n        /* \"five/AMM.sol\":5995:6028  _update(reserve0-d0,reserve1 -d1) */\n    tag_60:\n        /* \"five/AMM.sol\":6045:6050  d0 >0 */\n      dup2\n      iszero\n        /* \"five/AMM.sol\":6041:6110  if (d0 >0) {... */\n      tag_65\n      jumpi\n        /* \"five/AMM.sol\":6067:6098  token0.transfer(msg.sender, d0) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"five/AMM.sol\":6083:6093  msg.sender */\n      caller\n        /* \"five/AMM.sol\":6067:6098  token0.transfer(msg.sender, d0) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2761:2812   */\n      mstore\n        /* \"#utility.yul\":2828:2846   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2821:2855   */\n      dup4\n      swap1\n      mstore\n        /* \"five/AMM.sol\":6067:6073  token0 */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/AMM.sol\":6067:6082  token0.transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2734:2752   */\n      0x44\n      add\n        /* \"five/AMM.sol\":6067:6098  token0.transfer(msg.sender, d0) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      pop\n        /* \"five/AMM.sol\":6041:6110  if (d0 >0) {... */\n    tag_65:\n        /* \"five/AMM.sol\":6135:6141  d1 > 0 */\n      dup1\n      iszero\n        /* \"five/AMM.sol\":6131:6200  if (d1 > 0){... */\n      tag_72\n      jumpi\n        /* \"five/AMM.sol\":6157:6188  token1.transfer(msg.sender, d1) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"five/AMM.sol\":6173:6183  msg.sender */\n      caller\n        /* \"five/AMM.sol\":6157:6188  token1.transfer(msg.sender, d1) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2761:2812   */\n      mstore\n        /* \"#utility.yul\":2828:2846   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2821:2855   */\n      dup3\n      swap1\n      mstore\n        /* \"five/AMM.sol\":6157:6163  token1 */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/AMM.sol\":6157:6172  token1.transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2734:2752   */\n      0x44\n      add\n        /* \"five/AMM.sol\":6157:6188  token1.transfer(msg.sender, d1) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_75:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_76:\n      pop\n        /* \"five/AMM.sol\":6131:6200  if (d1 > 0){... */\n    tag_72:\n        /* \"five/AMM.sol\":4594:6207  function removeLiquidity(uint _shares) external returns (uint d0,uint d1){... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"five/AMM.sol\":3045:4408  function addLiquidity(uint _amount0,uint _amount1) external returns(uint shares) {... */\n    tag_41:\n        /* \"five/AMM.sol\":3187:3243  token0.transferFrom(msg.sender, address(this), _amount0) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"five/AMM.sol\":3207:3217  msg.sender */\n      caller\n        /* \"five/AMM.sol\":3187:3243  token0.transferFrom(msg.sender, address(this), _amount0) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3350:3401   */\n      mstore\n        /* \"five/AMM.sol\":3227:3231  this */\n      address\n        /* \"#utility.yul\":3417:3435   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3410:3470   */\n      mstore\n        /* \"#utility.yul\":3486:3504   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3479:3513   */\n      dup4\n      swap1\n      mstore\n        /* \"five/AMM.sol\":3113:3124  uint shares */\n      0x00\n      swap1\n        /* \"five/AMM.sol\":3187:3193  token0 */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/AMM.sol\":3187:3206  token0.transferFrom */\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":3323:3341   */\n      0x64\n      add\n        /* \"five/AMM.sol\":3187:3243  token0.transferFrom(msg.sender, address(this), _amount0) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_82:\n      pop\n        /* \"five/AMM.sol\":3254:3310  token1.transferFrom(msg.sender, address(this), _amount1) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"five/AMM.sol\":3274:3284  msg.sender */\n      caller\n        /* \"five/AMM.sol\":3254:3310  token1.transferFrom(msg.sender, address(this), _amount1) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3350:3401   */\n      mstore\n        /* \"five/AMM.sol\":3294:3298  this */\n      address\n        /* \"#utility.yul\":3417:3435   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3410:3470   */\n      mstore\n        /* \"#utility.yul\":3486:3504   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3479:3513   */\n      dup4\n      swap1\n      mstore\n        /* \"five/AMM.sol\":3254:3260  token1 */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/AMM.sol\":3254:3273  token1.transferFrom */\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":3323:3341   */\n      0x64\n      add\n        /* \"five/AMM.sol\":3254:3310  token1.transferFrom(msg.sender, address(this), _amount1) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_86:\n      pop\n        /* \"five/AMM.sol\":3359:3390  token0.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"five/AMM.sol\":3384:3388  this */\n      address\n        /* \"five/AMM.sol\":3359:3390  token0.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":174:225   */\n      mstore\n        /* \"five/AMM.sol\":3348:3357  uint bal0 */\n      0x00\n      swap1\n        /* \"five/AMM.sol\":3359:3365  token0 */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/AMM.sol\":3359:3375  token0.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":147:165   */\n      0x24\n      add\n        /* \"five/AMM.sol\":3359:3390  token0.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"five/AMM.sol\":3439:3470  token1.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"five/AMM.sol\":3464:3468  this */\n      address\n        /* \"five/AMM.sol\":3439:3470  token1.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":174:225   */\n      mstore\n        /* \"five/AMM.sol\":3348:3390  uint bal0= token0.balanceOf(address(this)) */\n      swap1\n      swap2\n      pop\n        /* \"five/AMM.sol\":3428:3437  uint bal1 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/AMM.sol\":3439:3445  token1 */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n        /* \"five/AMM.sol\":3439:3455  token1.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":147:165   */\n      0x24\n      add\n        /* \"five/AMM.sol\":3439:3470  token1.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_96:\n        /* \"five/AMM.sol\":3428:3470  uint bal1= token1.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"five/AMM.sol\":3483:3490  uint d0 */\n      0x00\n        /* \"five/AMM.sol\":3499:3507  reserve0 */\n      sload(0x00)\n        /* \"five/AMM.sol\":3492:3496  bal0 */\n      dup4\n        /* \"five/AMM.sol\":3492:3507  bal0 - reserve0 */\n      tag_97\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_97:\n        /* \"five/AMM.sol\":3483:3507  uint d0= bal0 - reserve0 */\n      swap1\n      pop\n        /* \"five/AMM.sol\":3518:3525  uint d1 */\n      0x00\n        /* \"five/AMM.sol\":3533:3541  reserve1 */\n      sload(0x01)\n        /* \"five/AMM.sol\":3527:3531  bal1 */\n      dup4\n        /* \"five/AMM.sol\":3527:3541  bal1 -reserve1 */\n      tag_98\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_98:\n        /* \"five/AMM.sol\":3518:3541  uint d1= bal1 -reserve1 */\n      swap1\n      pop\n        /* \"five/AMM.sol\":4103:4114  totalSupply */\n      sload(0x02)\n        /* \"five/AMM.sol\":4116:4117  0 */\n      0x00\n        /* \"five/AMM.sol\":4103:4117  totalSupply==0 */\n      sub\n        /* \"five/AMM.sol\":4100:4287  if(totalSupply==0){... */\n      tag_99\n      jumpi\n        /* \"five/AMM.sol\":4186:4193  d0 + d1 */\n      tag_100\n        /* \"five/AMM.sol\":4191:4193  d1 */\n      dup2\n        /* \"five/AMM.sol\":4186:4188  d0 */\n      dup4\n        /* \"five/AMM.sol\":4186:4193  d0 + d1 */\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"five/AMM.sol\":4177:4193  shares = d0 + d1 */\n      swap5\n      pop\n        /* \"five/AMM.sol\":4100:4287  if(totalSupply==0){... */\n      jump(tag_102)\n    tag_99:\n        /* \"five/AMM.sol\":4266:4274  reserve1 */\n      sload(0x01)\n        /* \"five/AMM.sol\":4257:4265  reserve0 */\n      sload(0x00)\n        /* \"five/AMM.sol\":4257:4274  reserve0+reserve1 */\n      tag_103\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_103:\n        /* \"five/AMM.sol\":4243:4254  totalSupply */\n      sload(0x02)\n        /* \"five/AMM.sol\":4236:4241  d0+d1 */\n      tag_104\n        /* \"five/AMM.sol\":4239:4241  d1 */\n      dup4\n        /* \"five/AMM.sol\":4236:4238  d0 */\n      dup6\n        /* \"five/AMM.sol\":4236:4241  d0+d1 */\n      tag_101\n      jump\t// in\n    tag_104:\n        /* \"five/AMM.sol\":4235:4254  (d0+d1)*totalSupply */\n      tag_105\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_105:\n        /* \"five/AMM.sol\":4234:4275  ((d0+d1)*totalSupply)/(reserve0+reserve1) */\n      tag_106\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_106:\n        /* \"five/AMM.sol\":4225:4275  shares = ((d0+d1)*totalSupply)/(reserve0+reserve1) */\n      swap5\n      pop\n        /* \"five/AMM.sol\":4100:4287  if(totalSupply==0){... */\n    tag_102:\n        /* \"five/AMM.sol\":4315:4316  0 */\n      0x00\n        /* \"five/AMM.sol\":4307:4313  shares */\n      dup6\n        /* \"five/AMM.sol\":4307:4316  shares >0 */\n      gt\n        /* \"five/AMM.sol\":4299:4330  require(shares >0,\"shares = 0\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4253:4255   */\n      0x20\n        /* \"five/AMM.sol\":4299:4330  require(shares >0,\"shares = 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4235:4256   */\n      mstore\n        /* \"#utility.yul\":4292:4294   */\n      0x0a\n        /* \"#utility.yul\":4272:4290   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4265:4295   */\n      mstore\n      shl(0xb4, 0x0736861726573203d203)\n        /* \"#utility.yul\":4311:4329   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4304:4344   */\n      mstore\n        /* \"#utility.yul\":4361:4379   */\n      0x64\n      add\n        /* \"five/AMM.sol\":4299:4330  require(shares >0,\"shares = 0\") */\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"five/AMM.sol\":4341:4366  _mint(msg.sender, shares) */\n      tag_110\n        /* \"five/AMM.sol\":4347:4357  msg.sender */\n      caller\n        /* \"five/AMM.sol\":4359:4365  shares */\n      dup7\n        /* \"five/AMM.sol\":4341:4346  _mint */\n      tag_111\n        /* \"five/AMM.sol\":4341:4366  _mint(msg.sender, shares) */\n      jump\t// in\n    tag_110:\n      pop\n      pop\n        /* \"five/AMM.sol\":1440:1448  reserve0 */\n      0x00\n        /* \"five/AMM.sol\":1440:1456  reserve0 = _res0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"five/AMM.sol\":1467:1475  reserve1 */\n      0x01\n        /* \"five/AMM.sol\":1467:1481  reserve1=_res1 */\n      sstore\n        /* \"five/AMM.sol\":3045:4408  function addLiquidity(uint _amount0,uint _amount1) external returns(uint shares) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"five/AMM.sol\":1849:2852  function swap(address _tokenIn,uint _amountIn) external... */\n    tag_46:\n        /* \"five/AMM.sol\":1919:1933  uint amountOut */\n      0x00\n        /* \"five/AMM.sol\":1991:1997  token0 */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/AMM.sol\":1973:1998  _tokenIn==address(token0) */\n      and\n        /* \"five/AMM.sol\":1973:1981  _tokenIn */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/AMM.sol\":1973:1998  _tokenIn==address(token0) */\n      and\n      eq\n        /* \"five/AMM.sol\":1973:2025  _tokenIn==address(token0)||_tokenIn==address(token1) */\n      dup1\n      tag_114\n      jumpi\n      pop\n        /* \"five/AMM.sol\":2018:2024  token1 */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/AMM.sol\":2000:2025  _tokenIn==address(token1) */\n      and\n        /* \"five/AMM.sol\":2000:2008  _tokenIn */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/AMM.sol\":2000:2025  _tokenIn==address(token1) */\n      and\n      eq\n        /* \"five/AMM.sol\":1973:2025  _tokenIn==address(token0)||_tokenIn==address(token1) */\n    tag_114:\n        /* \"five/AMM.sol\":1951:2066  require(... */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4592:4594   */\n      0x20\n        /* \"five/AMM.sol\":1951:2066  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4574:4595   */\n      mstore\n        /* \"#utility.yul\":4631:4633   */\n      0x0d\n        /* \"#utility.yul\":4611:4629   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4604:4634   */\n      mstore\n      shl(0x99, 0x34b73b30b634b2103a37b5b2b7)\n        /* \"#utility.yul\":4650:4668   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4643:4686   */\n      mstore\n        /* \"#utility.yul\":4703:4721   */\n      0x64\n      add\n        /* \"five/AMM.sol\":1951:2066  require(... */\n      tag_108\n        /* \"#utility.yul\":4390:4727   */\n      jump\n        /* \"five/AMM.sol\":1951:2066  require(... */\n    tag_115:\n        /* \"five/AMM.sol\":2079:2092  bool isToken0 */\n      0x00\n        /* \"five/AMM.sol\":2111:2117  token0 */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/AMM.sol\":2093:2118  _tokenIn==address(token0) */\n      and\n        /* \"five/AMM.sol\":2093:2101  _tokenIn */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/AMM.sol\":2093:2118  _tokenIn==address(token0) */\n      and\n      eq\n        /* \"five/AMM.sol\":2079:2118  bool isToken0=_tokenIn==address(token0) */\n      swap1\n      pop\n        /* \"five/AMM.sol\":2132:2146  IERC20 tokenIn */\n      0x00\n        /* \"five/AMM.sol\":2147:2162  IERC20 tokenOut */\n      0x00\n        /* \"five/AMM.sol\":2163:2173  uint resIn */\n      0x00\n        /* \"five/AMM.sol\":2174:2185  uint resOut */\n      0x00\n        /* \"five/AMM.sol\":2189:2197  isToken0 */\n      dup5\n        /* \"five/AMM.sol\":2189:2267  isToken0 ? (token0,token1,reserve0,reserve1):(token1,token0,reserve1,reserve0) */\n      tag_118\n      jumpi\n        /* \"five/AMM.sol\":2235:2241  token1 */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n        /* \"five/AMM.sol\":2242:2248  token0 */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"five/AMM.sol\":2249:2257  reserve1 */\n      sload(0x01)\n        /* \"five/AMM.sol\":2258:2266  reserve0 */\n      sload(0x00)\n        /* \"five/AMM.sol\":2189:2267  isToken0 ? (token0,token1,reserve0,reserve1):(token1,token0,reserve1,reserve0) */\n      jump(tag_119)\n    tag_118:\n        /* \"five/AMM.sol\":2201:2207  token0 */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"five/AMM.sol\":2208:2214  token1 */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n        /* \"five/AMM.sol\":2215:2223  reserve0 */\n      sload(0x00)\n        /* \"five/AMM.sol\":2224:2232  reserve1 */\n      sload(0x01)\n        /* \"five/AMM.sol\":2189:2267  isToken0 ? (token0,token1,reserve0,reserve1):(token1,token0,reserve1,reserve0) */\n    tag_119:\n        /* \"five/AMM.sol\":2337:2395  tokenIn.transferFrom(msg.sender, address(this), _amountIn) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"five/AMM.sol\":2358:2368  msg.sender */\n      caller\n        /* \"five/AMM.sol\":2337:2395  tokenIn.transferFrom(msg.sender, address(this), _amountIn) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3350:3401   */\n      mstore\n        /* \"five/AMM.sol\":2378:2382  this */\n      address\n        /* \"#utility.yul\":3417:3435   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3410:3470   */\n      mstore\n        /* \"#utility.yul\":3486:3504   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3479:3513   */\n      dup13\n      swap1\n      mstore\n        /* \"five/AMM.sol\":2131:2267  (IERC20 tokenIn,IERC20 tokenOut,uint resIn,uint resOut) = isToken0 ? (token0,token1,reserve0,reserve1):(token1,token0,reserve1,reserve0) */\n      swap4\n      swap8\n      pop\n      swap2\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/AMM.sol\":2337:2357  tokenIn.transferFrom */\n      dup6\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":3323:3341   */\n      0x64\n      add\n        /* \"five/AMM.sol\":2337:2395  tokenIn.transferFrom(msg.sender, address(this), _amountIn) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_123:\n      pop\n        /* \"five/AMM.sol\":2420:2452  tokenIn.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"five/AMM.sol\":2446:2450  this */\n      address\n        /* \"five/AMM.sol\":2420:2452  tokenIn.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":174:225   */\n      mstore\n        /* \"five/AMM.sol\":2406:2419  uint amountIn */\n      0x00\n      swap1\n        /* \"five/AMM.sol\":2455:2460  resIn */\n      dup4\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/AMM.sol\":2420:2437  tokenIn.balanceOf */\n      dup8\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":147:165   */\n      0x24\n      add\n        /* \"five/AMM.sol\":2420:2452  tokenIn.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_127:\n        /* \"five/AMM.sol\":2420:2460  tokenIn.balanceOf(address(this)) - resIn */\n      tag_128\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_128:\n        /* \"five/AMM.sol\":2406:2460  uint amountIn=tokenIn.balanceOf(address(this)) - resIn */\n      swap1\n      pop\n        /* \"five/AMM.sol\":2571:2575  1000 */\n      0x03e8\n        /* \"five/AMM.sol\":2555:2569  amountIn * 997 */\n      tag_129\n        /* \"five/AMM.sol\":2406:2460  uint amountIn=tokenIn.balanceOf(address(this)) - resIn */\n      dup3\n        /* \"five/AMM.sol\":2566:2569  997 */\n      0x03e5\n        /* \"five/AMM.sol\":2555:2569  amountIn * 997 */\n      tag_53\n      jump\t// in\n    tag_129:\n        /* \"five/AMM.sol\":2554:2575  (amountIn * 997)/1000 */\n      tag_130\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_130:\n        /* \"five/AMM.sol\":2542:2575  amountOut = (amountIn * 997)/1000 */\n      swap7\n      pop\n        /* \"five/AMM.sol\":2629:2638  uint res0 */\n      0x00\n        /* \"five/AMM.sol\":2639:2648  uint res1 */\n      0x00\n        /* \"five/AMM.sol\":2652:2660  isToken0 */\n      dup8\n        /* \"five/AMM.sol\":2652:2734  isToken0 ? (resIn-_amountIn, resOut+amountOut):(resOut+amountOut, resIn-_amountIn) */\n      tag_131\n      jumpi\n        /* \"five/AMM.sol\":2700:2716  resOut+amountOut */\n      tag_132\n        /* \"five/AMM.sol\":2707:2716  amountOut */\n      dup10\n        /* \"five/AMM.sol\":2700:2706  resOut */\n      dup6\n        /* \"five/AMM.sol\":2700:2716  resOut+amountOut */\n      tag_101\n      jump\t// in\n    tag_132:\n        /* \"five/AMM.sol\":2718:2733  resIn-_amountIn */\n      tag_133\n        /* \"five/AMM.sol\":2724:2733  _amountIn */\n      dup12\n        /* \"five/AMM.sol\":2718:2723  resIn */\n      dup8\n        /* \"five/AMM.sol\":2718:2733  resIn-_amountIn */\n      tag_62\n      jump\t// in\n    tag_133:\n        /* \"five/AMM.sol\":2652:2734  isToken0 ? (resIn-_amountIn, resOut+amountOut):(resOut+amountOut, resIn-_amountIn) */\n      jump(tag_136)\n    tag_131:\n        /* \"five/AMM.sol\":2664:2679  resIn-_amountIn */\n      tag_135\n        /* \"five/AMM.sol\":2670:2679  _amountIn */\n      dup11\n        /* \"five/AMM.sol\":2664:2669  resIn */\n      dup7\n        /* \"five/AMM.sol\":2664:2679  resIn-_amountIn */\n      tag_62\n      jump\t// in\n    tag_135:\n        /* \"five/AMM.sol\":2681:2697  resOut+amountOut */\n      tag_136\n        /* \"five/AMM.sol\":2688:2697  amountOut */\n      dup11\n        /* \"five/AMM.sol\":2681:2687  resOut */\n      dup7\n        /* \"five/AMM.sol\":2681:2697  resOut+amountOut */\n      tag_101\n      jump\t// in\n    tag_136:\n        /* \"five/AMM.sol\":2628:2734  (uint res0,uint res1) = isToken0 ? (resIn-_amountIn, resOut+amountOut):(resOut+amountOut, resIn-_amountIn) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"five/AMM.sol\":2745:2764  _update(res0, res1) */\n      tag_137\n        /* \"five/AMM.sol\":2753:2757  res0 */\n      dup3\n        /* \"five/AMM.sol\":2759:2763  res1 */\n      dup3\n        /* \"five/AMM.sol\":1440:1448  reserve0 */\n      0x00\n        /* \"five/AMM.sol\":1440:1456  reserve0 = _res0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"five/AMM.sol\":1467:1475  reserve1 */\n      0x01\n        /* \"five/AMM.sol\":1467:1481  reserve1=_res1 */\n      sstore\n        /* \"five/AMM.sol\":1381:1489  function _update(uint _res0,uint _res1)private  {... */\n      jump\n        /* \"five/AMM.sol\":2745:2764  _update(res0, res1) */\n    tag_137:\n        /* \"five/AMM.sol\":2805:2844  tokenOut.transfer(msg.sender,amountOut) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"five/AMM.sol\":2823:2833  msg.sender */\n      caller\n        /* \"five/AMM.sol\":2805:2844  tokenOut.transfer(msg.sender,amountOut) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2761:2812   */\n      mstore\n        /* \"#utility.yul\":2828:2846   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2821:2855   */\n      dup11\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/AMM.sol\":2805:2822  tokenOut.transfer */\n      dup8\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2734:2752   */\n      0x44\n      add\n        /* \"five/AMM.sol\":2805:2844  tokenOut.transfer(msg.sender,amountOut) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_141:\n      pop\n        /* \"five/AMM.sol\":1940:2852  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"five/AMM.sol\":1849:2852  function swap(address _tokenIn,uint _amountIn) external... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"five/AMM.sol\":1102:1228  function _burn(address _from,uint _amount)private{... */\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/AMM.sol\":1162:1178  balanceOf[_from] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"five/AMM.sol\":1162:1171  balanceOf */\n      0x03\n        /* \"five/AMM.sol\":1162:1178  balanceOf[_from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"five/AMM.sol\":1162:1189  balanceOf[_from] -= _amount */\n      dup1\n      sload\n        /* \"five/AMM.sol\":1182:1189  _amount */\n      dup4\n      swap3\n        /* \"five/AMM.sol\":1162:1178  balanceOf[_from] */\n      swap1\n        /* \"five/AMM.sol\":1162:1189  balanceOf[_from] -= _amount */\n      tag_143\n      swap1\n        /* \"five/AMM.sol\":1182:1189  _amount */\n      dup5\n      swap1\n        /* \"five/AMM.sol\":1162:1189  balanceOf[_from] -= _amount */\n      tag_62\n      jump\t// in\n    tag_143:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"five/AMM.sol\":1213:1220  _amount */\n      dup1\n        /* \"five/AMM.sol\":1200:1211  totalSupply */\n      0x02\n      0x00\n        /* \"five/AMM.sol\":1200:1220  totalSupply-=_amount */\n      dup3\n      dup3\n      sload\n      tag_144\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_144:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"five/AMM.sol\":1102:1228  function _burn(address _from,uint _amount)private{... */\n      jump\t// out\n        /* \"five/AMM.sol\":830:953  function _mint(address _to,uint _amount)private  {... */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/AMM.sol\":890:904  balanceOf[_to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"five/AMM.sol\":890:899  balanceOf */\n      0x03\n        /* \"five/AMM.sol\":890:904  balanceOf[_to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"five/AMM.sol\":890:914  balanceOf[_to] +=_amount */\n      dup1\n      sload\n        /* \"five/AMM.sol\":907:914  _amount */\n      dup4\n      swap3\n        /* \"five/AMM.sol\":890:904  balanceOf[_to] */\n      swap1\n        /* \"five/AMM.sol\":890:914  balanceOf[_to] +=_amount */\n      tag_147\n      swap1\n        /* \"five/AMM.sol\":907:914  _amount */\n      dup5\n      swap1\n        /* \"five/AMM.sol\":890:914  balanceOf[_to] +=_amount */\n      tag_101\n      jump\t// in\n    tag_147:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"five/AMM.sol\":938:945  _amount */\n      dup1\n        /* \"five/AMM.sol\":925:936  totalSupply */\n      0x02\n      0x00\n        /* \"five/AMM.sol\":925:945  totalSupply+=_amount */\n      dup3\n      dup3\n      sload\n      tag_144\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n        /* \"#utility.yul\":418:591   */\n    tag_149:\n        /* \"#utility.yul\":486:506   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":535:566   */\n      dup2\n      and\n        /* \"#utility.yul\":525:567   */\n      dup2\n      eq\n        /* \"#utility.yul\":515:585   */\n      tag_155\n      jumpi\n        /* \"#utility.yul\":581:582   */\n      0x00\n        /* \"#utility.yul\":578:579   */\n      0x00\n        /* \"#utility.yul\":571:583   */\n      revert\n        /* \"#utility.yul\":515:585   */\n    tag_155:\n        /* \"#utility.yul\":418:591   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":596:782   */\n    tag_29:\n        /* \"#utility.yul\":655:661   */\n      0x00\n        /* \"#utility.yul\":708:710   */\n      0x20\n        /* \"#utility.yul\":696:705   */\n      dup3\n        /* \"#utility.yul\":687:694   */\n      dup5\n        /* \"#utility.yul\":683:706   */\n      sub\n        /* \"#utility.yul\":679:711   */\n      slt\n        /* \"#utility.yul\":676:728   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":724:725   */\n      0x00\n        /* \"#utility.yul\":721:722   */\n      0x00\n        /* \"#utility.yul\":714:726   */\n      revert\n        /* \"#utility.yul\":676:728   */\n    tag_157:\n        /* \"#utility.yul\":747:776   */\n      tag_158\n        /* \"#utility.yul\":766:775   */\n      dup3\n        /* \"#utility.yul\":747:776   */\n      tag_149\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":737:776   */\n      swap4\n        /* \"#utility.yul\":596:782   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":787:1013   */\n    tag_34:\n        /* \"#utility.yul\":846:852   */\n      0x00\n        /* \"#utility.yul\":899:901   */\n      0x20\n        /* \"#utility.yul\":887:896   */\n      dup3\n        /* \"#utility.yul\":878:885   */\n      dup5\n        /* \"#utility.yul\":874:897   */\n      sub\n        /* \"#utility.yul\":870:902   */\n      slt\n        /* \"#utility.yul\":867:919   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":915:916   */\n      0x00\n        /* \"#utility.yul\":912:913   */\n      0x00\n        /* \"#utility.yul\":905:917   */\n      revert\n        /* \"#utility.yul\":867:919   */\n    tag_160:\n      pop\n        /* \"#utility.yul\":960:983   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":787:1013   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1271:1617   */\n    tag_40:\n        /* \"#utility.yul\":1339:1345   */\n      0x00\n        /* \"#utility.yul\":1347:1353   */\n      0x00\n        /* \"#utility.yul\":1400:1402   */\n      0x40\n        /* \"#utility.yul\":1388:1397   */\n      dup4\n        /* \"#utility.yul\":1379:1386   */\n      dup6\n        /* \"#utility.yul\":1375:1398   */\n      sub\n        /* \"#utility.yul\":1371:1403   */\n      slt\n        /* \"#utility.yul\":1368:1420   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1416:1417   */\n      0x00\n        /* \"#utility.yul\":1413:1414   */\n      0x00\n        /* \"#utility.yul\":1406:1418   */\n      revert\n        /* \"#utility.yul\":1368:1420   */\n    tag_163:\n      pop\n      pop\n        /* \"#utility.yul\":1461:1484   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1581:1583   */\n      0x20\n        /* \"#utility.yul\":1566:1584   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1553:1585   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1271:1617   */\n      jump\t// out\n        /* \"#utility.yul\":1622:1922   */\n    tag_45:\n        /* \"#utility.yul\":1690:1696   */\n      0x00\n        /* \"#utility.yul\":1698:1704   */\n      0x00\n        /* \"#utility.yul\":1751:1753   */\n      0x40\n        /* \"#utility.yul\":1739:1748   */\n      dup4\n        /* \"#utility.yul\":1730:1737   */\n      dup6\n        /* \"#utility.yul\":1726:1749   */\n      sub\n        /* \"#utility.yul\":1722:1754   */\n      slt\n        /* \"#utility.yul\":1719:1771   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":1767:1768   */\n      0x00\n        /* \"#utility.yul\":1764:1765   */\n      0x00\n        /* \"#utility.yul\":1757:1769   */\n      revert\n        /* \"#utility.yul\":1719:1771   */\n    tag_165:\n        /* \"#utility.yul\":1790:1819   */\n      tag_166\n        /* \"#utility.yul\":1809:1818   */\n      dup4\n        /* \"#utility.yul\":1790:1819   */\n      tag_149\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1780:1819   */\n      swap5\n        /* \"#utility.yul\":1888:1890   */\n      0x20\n        /* \"#utility.yul\":1873:1891   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1860:1892   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1622:1922   */\n      jump\t// out\n        /* \"#utility.yul\":1927:2054   */\n    tag_150:\n        /* \"#utility.yul\":1988:1998   */\n      0x4e487b71\n        /* \"#utility.yul\":1983:1986   */\n      0xe0\n        /* \"#utility.yul\":1979:1999   */\n      shl\n        /* \"#utility.yul\":1976:1977   */\n      0x00\n        /* \"#utility.yul\":1969:2000   */\n      mstore\n        /* \"#utility.yul\":2019:2023   */\n      0x11\n        /* \"#utility.yul\":2016:2017   */\n      0x04\n        /* \"#utility.yul\":2009:2024   */\n      mstore\n        /* \"#utility.yul\":2043:2047   */\n      0x24\n        /* \"#utility.yul\":2040:2041   */\n      0x00\n        /* \"#utility.yul\":2033:2048   */\n      revert\n        /* \"#utility.yul\":2059:2227   */\n    tag_53:\n        /* \"#utility.yul\":2132:2141   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":2163:2172   */\n      dup2\n      iszero\n        /* \"#utility.yul\":2180:2195   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":2174:2196   */\n      dup5\n      eq\n        /* \"#utility.yul\":2160:2197   */\n      or\n        /* \"#utility.yul\":2150:2221   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2201:2219   */\n      tag_170\n      tag_150\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":2059:2227   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2232:2449   */\n    tag_55:\n        /* \"#utility.yul\":2272:2273   */\n      0x00\n        /* \"#utility.yul\":2298:2299   */\n      dup3\n        /* \"#utility.yul\":2288:2420   */\n      tag_172\n      jumpi\n        /* \"#utility.yul\":2342:2352   */\n      0x4e487b71\n        /* \"#utility.yul\":2337:2340   */\n      0xe0\n        /* \"#utility.yul\":2333:2353   */\n      shl\n        /* \"#utility.yul\":2330:2331   */\n      0x00\n        /* \"#utility.yul\":2323:2354   */\n      mstore\n        /* \"#utility.yul\":2377:2381   */\n      0x12\n        /* \"#utility.yul\":2374:2375   */\n      0x04\n        /* \"#utility.yul\":2367:2382   */\n      mstore\n        /* \"#utility.yul\":2405:2409   */\n      0x24\n        /* \"#utility.yul\":2402:2403   */\n      0x00\n        /* \"#utility.yul\":2395:2410   */\n      revert\n        /* \"#utility.yul\":2288:2420   */\n    tag_172:\n      pop\n        /* \"#utility.yul\":2434:2443   */\n      div\n      swap1\n        /* \"#utility.yul\":2232:2449   */\n      jump\t// out\n        /* \"#utility.yul\":2454:2582   */\n    tag_62:\n        /* \"#utility.yul\":2521:2530   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2542:2553   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2539:2576   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2556:2574   */\n      tag_170\n      tag_150\n      jump\t// in\n        /* \"#utility.yul\":2866:3143   */\n    tag_71:\n        /* \"#utility.yul\":2933:2939   */\n      0x00\n        /* \"#utility.yul\":2986:2988   */\n      0x20\n        /* \"#utility.yul\":2974:2983   */\n      dup3\n        /* \"#utility.yul\":2965:2972   */\n      dup5\n        /* \"#utility.yul\":2961:2984   */\n      sub\n        /* \"#utility.yul\":2957:2989   */\n      slt\n        /* \"#utility.yul\":2954:3006   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":3002:3003   */\n      0x00\n        /* \"#utility.yul\":2999:3000   */\n      0x00\n        /* \"#utility.yul\":2992:3004   */\n      revert\n        /* \"#utility.yul\":2954:3006   */\n    tag_178:\n        /* \"#utility.yul\":3034:3043   */\n      dup2\n        /* \"#utility.yul\":3028:3044   */\n      mload\n        /* \"#utility.yul\":3087:3092   */\n      dup1\n        /* \"#utility.yul\":3080:3093   */\n      iszero\n        /* \"#utility.yul\":3073:3094   */\n      iszero\n        /* \"#utility.yul\":3066:3071   */\n      dup2\n        /* \"#utility.yul\":3063:3095   */\n      eq\n        /* \"#utility.yul\":3053:3113   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":3109:3110   */\n      0x00\n        /* \"#utility.yul\":3106:3107   */\n      0x00\n        /* \"#utility.yul\":3099:3111   */\n      revert\n        /* \"#utility.yul\":3732:3916   */\n    tag_92:\n        /* \"#utility.yul\":3802:3808   */\n      0x00\n        /* \"#utility.yul\":3855:3857   */\n      0x20\n        /* \"#utility.yul\":3843:3852   */\n      dup3\n        /* \"#utility.yul\":3834:3841   */\n      dup5\n        /* \"#utility.yul\":3830:3853   */\n      sub\n        /* \"#utility.yul\":3826:3858   */\n      slt\n        /* \"#utility.yul\":3823:3875   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":3871:3872   */\n      0x00\n        /* \"#utility.yul\":3868:3869   */\n      0x00\n        /* \"#utility.yul\":3861:3873   */\n      revert\n        /* \"#utility.yul\":3823:3875   */\n    tag_183:\n      pop\n        /* \"#utility.yul\":3894:3910   */\n      mload\n      swap2\n        /* \"#utility.yul\":3732:3916   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3921:4046   */\n    tag_101:\n        /* \"#utility.yul\":3986:3995   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4007:4017   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4004:4040   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":4020:4038   */\n      tag_170\n      tag_150\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220d9e2643ca2d4af6436439087687031332c9a07c8b86e74b534a4e1473c802b1664736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_824": {
									"entryPoint": null,
									"id": 824,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 69,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 96,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:491:6",
										"nodeType": "YulBlock",
										"src": "0:491:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:6",
													"nodeType": "YulBlock",
													"src": "74:117:6",
													"statements": [
														{
															"nativeSrc": "84:22:6",
															"nodeType": "YulAssignment",
															"src": "84:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:6"
																},
																"nativeSrc": "93:13:6",
																"nodeType": "YulFunctionCall",
																"src": "93:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:6",
																"nodeType": "YulBlock",
																"src": "169:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:6",
																					"nodeType": "YulLiteral",
																					"src": "178:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:6",
																					"nodeType": "YulLiteral",
																					"src": "181:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:6"
																			},
																			"nativeSrc": "171:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:6"
																		},
																		"nativeSrc": "171:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:6",
																										"nodeType": "YulLiteral",
																										"src": "154:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:6",
																										"nodeType": "YulLiteral",
																										"src": "159:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:6"
																								},
																								"nativeSrc": "150:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:6",
																								"nodeType": "YulLiteral",
																								"src": "163:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:6"
																						},
																						"nativeSrc": "146:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:6"
																				},
																				"nativeSrc": "135:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:6"
																		},
																		"nativeSrc": "125:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:6"
																},
																"nativeSrc": "118:50:6",
																"nodeType": "YulFunctionCall",
																"src": "118:50:6"
															},
															"nativeSrc": "115:70:6",
															"nodeType": "YulIf",
															"src": "115:70:6"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:6",
														"nodeType": "YulTypedName",
														"src": "53:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:6",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "14:177:6"
											},
											{
												"body": {
													"nativeSrc": "294:195:6",
													"nodeType": "YulBlock",
													"src": "294:195:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:6",
																"nodeType": "YulBlock",
																"src": "340:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:6",
																					"nodeType": "YulLiteral",
																					"src": "349:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:6",
																					"nodeType": "YulLiteral",
																					"src": "352:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:6"
																			},
																			"nativeSrc": "342:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:6"
																		},
																		"nativeSrc": "342:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:6"
																		},
																		"nativeSrc": "311:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:6",
																		"nodeType": "YulLiteral",
																		"src": "336:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:6"
																},
																"nativeSrc": "307:32:6",
																"nodeType": "YulFunctionCall",
																"src": "307:32:6"
															},
															"nativeSrc": "304:52:6",
															"nodeType": "YulIf",
															"src": "304:52:6"
														},
														{
															"nativeSrc": "365:50:6",
															"nodeType": "YulAssignment",
															"src": "365:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:6"
																},
																"nativeSrc": "375:40:6",
																"nodeType": "YulFunctionCall",
																"src": "375:40:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:6"
																}
															]
														},
														{
															"nativeSrc": "424:59:6",
															"nodeType": "YulAssignment",
															"src": "424:59:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:6",
																				"nodeType": "YulLiteral",
																				"src": "479:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:6"
																		},
																		"nativeSrc": "464:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:6"
																},
																"nativeSrc": "434:49:6",
																"nodeType": "YulFunctionCall",
																"src": "434:49:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:6",
														"nodeType": "YulTypedName",
														"src": "252:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:6",
														"nodeType": "YulTypedName",
														"src": "263:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:6",
														"nodeType": "YulTypedName",
														"src": "275:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:6",
														"nodeType": "YulTypedName",
														"src": "283:6:6",
														"type": ""
													}
												],
												"src": "196:293:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b50604051610ca2380380610ca283398101604081905261002e91610060565b6001600160a01b039182166080521660a052610091565b80516001600160a01b038116811461005b575f5ffd5b919050565b5f5f60408385031215610071575f5ffd5b61007a83610045565b915061008860208401610045565b90509250929050565b60805160a051610b9661010c5f395f8181610172015281816102b9015281816103eb015281816105080152818161067a0152818161072d015261079a01525f818160990152818161022301528181610356015281816104750152818161063f015281816106ed0152818161074e01526107790152610b965ff3fe608060405234801561000f575f5ffd5b5060043610610090575f3560e01c806370a082311161006357806370a08231146101005780639c8f9f231461011f5780639cd441da14610147578063d004f0f71461015a578063d21220a71461016d575f5ffd5b80630dfe16811461009457806318160ddd146100d8578063443cb4bc146100ef5780635a76f25e146100f7575b5f5ffd5b6100bb7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e160025481565b6040519081526020016100cf565b6100e15f5481565b6100e160015481565b6100e161010e366004610a35565b60036020525f908152604090205481565b61013261012d366004610a55565b610194565b604080519283526020830191909152016100cf565b6100e1610155366004610a6c565b610332565b6100e1610168366004610a8c565b61063c565b6100bb7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f600254835f546101a69190610ac8565b6101b09190610ae5565b9150600254836001546101c39190610ac8565b6101cd9190610ae5565b90506101d93384610993565b610201825f546101e99190610b04565b826001546101f79190610b04565b5f91909155600155565b81156102975760405163a9059cbb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303815f875af1158015610271573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102959190610b17565b505b801561032d5760405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303815f875af1158015610307573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061032b9190610b17565b505b915091565b6040516323b872dd60e01b8152336004820152306024820152604481018390525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303815f875af11580156103a4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103c89190610b17565b506040516323b872dd60e01b8152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303815f875af1158015610439573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061045d9190610b17565b506040516370a0823160e01b81523060048201525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156104c2573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104e69190610b36565b6040516370a0823160e01b81523060048201529091505f906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561054d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105719190610b36565b90505f5f54836105819190610b04565b90505f600154836105929190610b04565b90506002545f036105ae576105a78183610b4d565b94506105e1565b6001545f546105bd9190610b4d565b6002546105ca8385610b4d565b6105d49190610ac8565b6105de9190610ae5565b94505b5f85116106225760405162461bcd60e51b815260206004820152600a6024820152690736861726573203d20360b41b60448201526064015b60405180910390fd5b61062c33866109db565b50505f9190915560015592915050565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614806106ae57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316145b6106ea5760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b2103a37b5b2b760991b6044820152606401610619565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161490505f5f5f5f84610777577f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006001545f546107bf565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000005f546001545b6040516323b872dd60e01b8152336004820152306024820152604481018c9052939750919550935091506001600160a01b038516906323b872dd906064016020604051808303815f875af1158015610819573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061083d9190610b17565b506040516370a0823160e01b81523060048201525f9083906001600160a01b038716906370a0823190602401602060405180830381865afa158015610884573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108a89190610b36565b6108b29190610b04565b90506103e86108c3826103e5610ac8565b6108cd9190610ae5565b96505f5f876108ef576108e08985610b4d565b6108ea8b87610b04565b610903565b6108f98a86610b04565b6109038a86610b4d565b9150915061091682825f91909155600155565b60405163a9059cbb60e01b8152336004820152602481018a90526001600160a01b0387169063a9059cbb906044016020604051808303815f875af1158015610960573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109849190610b17565b50505050505050505092915050565b6001600160a01b0382165f90815260036020526040812080548392906109ba908490610b04565b925050819055508060025f8282546109d29190610b04565b90915550505050565b6001600160a01b0382165f9081526003602052604081208054839290610a02908490610b4d565b925050819055508060025f8282546109d29190610b4d565b80356001600160a01b0381168114610a30575f5ffd5b919050565b5f60208284031215610a45575f5ffd5b610a4e82610a1a565b9392505050565b5f60208284031215610a65575f5ffd5b5035919050565b5f5f60408385031215610a7d575f5ffd5b50508035926020909101359150565b5f5f60408385031215610a9d575f5ffd5b610aa683610a1a565b946020939093013593505050565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610adf57610adf610ab4565b92915050565b5f82610aff57634e487b7160e01b5f52601260045260245ffd5b500490565b81810381811115610adf57610adf610ab4565b5f60208284031215610b27575f5ffd5b81518015158114610a4e575f5ffd5b5f60208284031215610b46575f5ffd5b5051919050565b80820180821115610adf57610adf610ab456fea2646970667358221220d9e2643ca2d4af6436439087687031332c9a07c8b86e74b534a4e1473c802b1664736f6c634300081d0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xCA2 CODESIZE SUB DUP1 PUSH2 0xCA2 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE PUSH2 0x91 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5B JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x71 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x7A DUP4 PUSH2 0x45 JUMP JUMPDEST SWAP2 POP PUSH2 0x88 PUSH1 0x20 DUP5 ADD PUSH2 0x45 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0xB96 PUSH2 0x10C PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x172 ADD MSTORE DUP2 DUP2 PUSH2 0x2B9 ADD MSTORE DUP2 DUP2 PUSH2 0x3EB ADD MSTORE DUP2 DUP2 PUSH2 0x508 ADD MSTORE DUP2 DUP2 PUSH2 0x67A ADD MSTORE DUP2 DUP2 PUSH2 0x72D ADD MSTORE PUSH2 0x79A ADD MSTORE PUSH0 DUP2 DUP2 PUSH1 0x99 ADD MSTORE DUP2 DUP2 PUSH2 0x223 ADD MSTORE DUP2 DUP2 PUSH2 0x356 ADD MSTORE DUP2 DUP2 PUSH2 0x475 ADD MSTORE DUP2 DUP2 PUSH2 0x63F ADD MSTORE DUP2 DUP2 PUSH2 0x6ED ADD MSTORE DUP2 DUP2 PUSH2 0x74E ADD MSTORE PUSH2 0x779 ADD MSTORE PUSH2 0xB96 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xD004F0F7 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x16D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0xF7 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBB PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE1 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0xE1 PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE1 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0xA35 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0xA55 JUMP JUMPDEST PUSH2 0x194 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x332 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0xA8C JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST PUSH2 0xBB PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x2 SLOAD DUP4 PUSH0 SLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST SWAP2 POP PUSH1 0x2 SLOAD DUP4 PUSH1 0x1 SLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D9 CALLER DUP5 PUSH2 0x993 JUMP JUMPDEST PUSH2 0x201 DUP3 PUSH0 SLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xB04 JUMP JUMPDEST DUP3 PUSH1 0x1 SLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xB04 JUMP JUMPDEST PUSH0 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 SSTORE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x297 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x271 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST POP JUMPDEST DUP1 ISZERO PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x307 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x439 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4C2 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x571 SWAP2 SWAP1 PUSH2 0xB36 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 SLOAD DUP4 PUSH2 0x581 SWAP2 SWAP1 PUSH2 0xB04 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 SLOAD DUP4 PUSH2 0x592 SWAP2 SWAP1 PUSH2 0xB04 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH0 SUB PUSH2 0x5AE JUMPI PUSH2 0x5A7 DUP2 DUP4 PUSH2 0xB4D JUMP JUMPDEST SWAP5 POP PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SLOAD PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0xB4D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x5CA DUP4 DUP6 PUSH2 0xB4D JUMP JUMPDEST PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST SWAP5 POP JUMPDEST PUSH0 DUP6 GT PUSH2 0x622 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x736861726573203D203 PUSH1 0xB4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x62C CALLER DUP7 PUSH2 0x9DB JUMP JUMPDEST POP POP PUSH0 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x6AE JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x34B73B30B634B2103A37B5B2B7 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x619 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH0 PUSH0 PUSH0 PUSH0 DUP5 PUSH2 0x777 JUMPI PUSH32 0x0 PUSH32 0x0 PUSH1 0x1 SLOAD PUSH0 SLOAD PUSH2 0x7BF JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH0 SLOAD PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP13 SWAP1 MSTORE SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x819 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x83D SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x884 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A8 SWAP2 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH2 0x8B2 SWAP2 SWAP1 PUSH2 0xB04 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E8 PUSH2 0x8C3 DUP3 PUSH2 0x3E5 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x8CD SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST SWAP7 POP PUSH0 PUSH0 DUP8 PUSH2 0x8EF JUMPI PUSH2 0x8E0 DUP10 DUP6 PUSH2 0xB4D JUMP JUMPDEST PUSH2 0x8EA DUP12 DUP8 PUSH2 0xB04 JUMP JUMPDEST PUSH2 0x903 JUMP JUMPDEST PUSH2 0x8F9 DUP11 DUP7 PUSH2 0xB04 JUMP JUMPDEST PUSH2 0x903 DUP11 DUP7 PUSH2 0xB4D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x916 DUP3 DUP3 PUSH0 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x960 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x984 SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9BA SWAP1 DUP5 SWAP1 PUSH2 0xB04 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9D2 SWAP2 SWAP1 PUSH2 0xB04 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA02 SWAP1 DUP5 SWAP1 PUSH2 0xB4D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9D2 SWAP2 SWAP1 PUSH2 0xB4D JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA30 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA45 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA4E DUP3 PUSH2 0xA1A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA65 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA7D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA9D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xAA6 DUP4 PUSH2 0xA1A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xADF JUMPI PUSH2 0xADF PUSH2 0xAB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xAFF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xADF JUMPI PUSH2 0xADF PUSH2 0xAB4 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB27 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA4E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB46 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xADF JUMPI PUSH2 0xADF PUSH2 0xAB4 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xE2 PUSH5 0x3CA2D4AF64 CALLDATASIZE NUMBER SWAP1 DUP8 PUSH9 0x7031332C9A07C8B86E PUSH21 0xB534A4E1473C802B1664736F6C634300081D003300 ",
							"sourceMap": "171:6039:5:-:0;;;564:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;620:22:5;;;;;653;;;171:6039;;14:177:6;93:13;;-1:-1:-1;;;;;135:31:6;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;171:6039:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_burn_862": {
									"entryPoint": 2451,
									"id": 862,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_843": {
									"entryPoint": 2523,
									"id": 843,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_879": {
									"entryPoint": null,
									"id": 879,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addLiquidity_1126": {
									"entryPoint": 818,
									"id": 1126,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_804": {
									"entryPoint": null,
									"id": 804,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeLiquidity_1196": {
									"entryPoint": 404,
									"id": 1196,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@reserve0_796": {
									"entryPoint": null,
									"id": 796,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserve1_798": {
									"entryPoint": null,
									"id": 798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swap_1014": {
									"entryPoint": 1596,
									"id": 1014,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@token0_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_794": {
									"entryPoint": null,
									"id": 794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_800": {
									"entryPoint": null,
									"id": 800,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_91766924399ba2aa6ad0c8d1146b6e8fd47173f69f3b391bd887f350814cada7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2740,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4729:6",
										"nodeType": "YulBlock",
										"src": "0:4729:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "129:102:6",
													"nodeType": "YulBlock",
													"src": "129:102:6",
													"statements": [
														{
															"nativeSrc": "139:26:6",
															"nodeType": "YulAssignment",
															"src": "139:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "151:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "151:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "162:2:6",
																		"nodeType": "YulLiteral",
																		"src": "162:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "147:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "147:3:6"
																},
																"nativeSrc": "147:18:6",
																"nodeType": "YulFunctionCall",
																"src": "147:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "139:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "139:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "181:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "196:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "196:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "212:3:6",
																								"nodeType": "YulLiteral",
																								"src": "212:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "217:1:6",
																								"nodeType": "YulLiteral",
																								"src": "217:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "208:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "208:3:6"
																						},
																						"nativeSrc": "208:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "208:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "221:1:6",
																						"nodeType": "YulLiteral",
																						"src": "221:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "204:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "204:3:6"
																				},
																				"nativeSrc": "204:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "204:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "192:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "192:3:6"
																		},
																		"nativeSrc": "192:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "192:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "174:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "174:6:6"
																},
																"nativeSrc": "174:51:6",
																"nodeType": "YulFunctionCall",
																"src": "174:51:6"
															},
															"nativeSrc": "174:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "174:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed",
												"nativeSrc": "14:217:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "98:9:6",
														"nodeType": "YulTypedName",
														"src": "98:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "109:6:6",
														"nodeType": "YulTypedName",
														"src": "109:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "120:4:6",
														"nodeType": "YulTypedName",
														"src": "120:4:6",
														"type": ""
													}
												],
												"src": "14:217:6"
											},
											{
												"body": {
													"nativeSrc": "337:76:6",
													"nodeType": "YulBlock",
													"src": "337:76:6",
													"statements": [
														{
															"nativeSrc": "347:26:6",
															"nodeType": "YulAssignment",
															"src": "347:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "359:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "359:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "370:2:6",
																		"nodeType": "YulLiteral",
																		"src": "370:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "355:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "355:3:6"
																},
																"nativeSrc": "355:18:6",
																"nodeType": "YulFunctionCall",
																"src": "355:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "347:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "347:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "389:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "389:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "400:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "400:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "382:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "382:6:6"
																},
																"nativeSrc": "382:25:6",
																"nodeType": "YulFunctionCall",
																"src": "382:25:6"
															},
															"nativeSrc": "382:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "382:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "236:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "306:9:6",
														"nodeType": "YulTypedName",
														"src": "306:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "317:6:6",
														"nodeType": "YulTypedName",
														"src": "317:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "328:4:6",
														"nodeType": "YulTypedName",
														"src": "328:4:6",
														"type": ""
													}
												],
												"src": "236:177:6"
											},
											{
												"body": {
													"nativeSrc": "467:124:6",
													"nodeType": "YulBlock",
													"src": "467:124:6",
													"statements": [
														{
															"nativeSrc": "477:29:6",
															"nodeType": "YulAssignment",
															"src": "477:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "499:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "499:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "486:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "486:12:6"
																},
																"nativeSrc": "486:20:6",
																"nodeType": "YulFunctionCall",
																"src": "486:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "477:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "477:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "569:16:6",
																"nodeType": "YulBlock",
																"src": "569:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "578:1:6",
																					"nodeType": "YulLiteral",
																					"src": "578:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "581:1:6",
																					"nodeType": "YulLiteral",
																					"src": "581:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "571:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "571:6:6"
																			},
																			"nativeSrc": "571:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "571:12:6"
																		},
																		"nativeSrc": "571:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "571:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "528:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "528:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "539:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "539:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "554:3:6",
																										"nodeType": "YulLiteral",
																										"src": "554:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "559:1:6",
																										"nodeType": "YulLiteral",
																										"src": "559:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "550:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "550:3:6"
																								},
																								"nativeSrc": "550:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "550:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "563:1:6",
																								"nodeType": "YulLiteral",
																								"src": "563:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "546:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "546:3:6"
																						},
																						"nativeSrc": "546:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "546:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "535:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "535:3:6"
																				},
																				"nativeSrc": "535:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "535:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "525:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "525:2:6"
																		},
																		"nativeSrc": "525:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "525:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "518:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "518:6:6"
																},
																"nativeSrc": "518:50:6",
																"nodeType": "YulFunctionCall",
																"src": "518:50:6"
															},
															"nativeSrc": "515:70:6",
															"nodeType": "YulIf",
															"src": "515:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "418:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "446:6:6",
														"nodeType": "YulTypedName",
														"src": "446:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "457:5:6",
														"nodeType": "YulTypedName",
														"src": "457:5:6",
														"type": ""
													}
												],
												"src": "418:173:6"
											},
											{
												"body": {
													"nativeSrc": "666:116:6",
													"nodeType": "YulBlock",
													"src": "666:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "712:16:6",
																"nodeType": "YulBlock",
																"src": "712:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "721:1:6",
																					"nodeType": "YulLiteral",
																					"src": "721:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "724:1:6",
																					"nodeType": "YulLiteral",
																					"src": "724:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "714:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "714:6:6"
																			},
																			"nativeSrc": "714:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "714:12:6"
																		},
																		"nativeSrc": "714:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "714:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "687:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "687:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "696:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "696:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "683:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "683:3:6"
																		},
																		"nativeSrc": "683:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "683:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "708:2:6",
																		"nodeType": "YulLiteral",
																		"src": "708:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "679:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "679:3:6"
																},
																"nativeSrc": "679:32:6",
																"nodeType": "YulFunctionCall",
																"src": "679:32:6"
															},
															"nativeSrc": "676:52:6",
															"nodeType": "YulIf",
															"src": "676:52:6"
														},
														{
															"nativeSrc": "737:39:6",
															"nodeType": "YulAssignment",
															"src": "737:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "766:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "766:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "747:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "747:18:6"
																},
																"nativeSrc": "747:29:6",
																"nodeType": "YulFunctionCall",
																"src": "747:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "737:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "737:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "596:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "632:9:6",
														"nodeType": "YulTypedName",
														"src": "632:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "643:7:6",
														"nodeType": "YulTypedName",
														"src": "643:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "655:6:6",
														"nodeType": "YulTypedName",
														"src": "655:6:6",
														"type": ""
													}
												],
												"src": "596:186:6"
											},
											{
												"body": {
													"nativeSrc": "857:156:6",
													"nodeType": "YulBlock",
													"src": "857:156:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "903:16:6",
																"nodeType": "YulBlock",
																"src": "903:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "912:1:6",
																					"nodeType": "YulLiteral",
																					"src": "912:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "915:1:6",
																					"nodeType": "YulLiteral",
																					"src": "915:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "905:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "905:6:6"
																			},
																			"nativeSrc": "905:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "905:12:6"
																		},
																		"nativeSrc": "905:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "905:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "878:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "878:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "887:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "887:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "874:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "874:3:6"
																		},
																		"nativeSrc": "874:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "874:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "899:2:6",
																		"nodeType": "YulLiteral",
																		"src": "899:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "870:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "870:3:6"
																},
																"nativeSrc": "870:32:6",
																"nodeType": "YulFunctionCall",
																"src": "870:32:6"
															},
															"nativeSrc": "867:52:6",
															"nodeType": "YulIf",
															"src": "867:52:6"
														},
														{
															"nativeSrc": "928:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "928:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "941:1:6",
																"nodeType": "YulLiteral",
																"src": "941:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "932:5:6",
																	"nodeType": "YulTypedName",
																	"src": "932:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "951:32:6",
															"nodeType": "YulAssignment",
															"src": "951:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "973:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "973:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "960:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "960:12:6"
																},
																"nativeSrc": "960:23:6",
																"nodeType": "YulFunctionCall",
																"src": "960:23:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "951:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "951:5:6"
																}
															]
														},
														{
															"nativeSrc": "992:15:6",
															"nodeType": "YulAssignment",
															"src": "992:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1002:5:6",
																"nodeType": "YulIdentifier",
																"src": "1002:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "992:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "992:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "787:226:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "823:9:6",
														"nodeType": "YulTypedName",
														"src": "823:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "834:7:6",
														"nodeType": "YulTypedName",
														"src": "834:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "846:6:6",
														"nodeType": "YulTypedName",
														"src": "846:6:6",
														"type": ""
													}
												],
												"src": "787:226:6"
											},
											{
												"body": {
													"nativeSrc": "1147:119:6",
													"nodeType": "YulBlock",
													"src": "1147:119:6",
													"statements": [
														{
															"nativeSrc": "1157:26:6",
															"nodeType": "YulAssignment",
															"src": "1157:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1169:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1169:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1180:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1180:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1165:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1165:3:6"
																},
																"nativeSrc": "1165:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1165:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1157:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1157:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1199:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1199:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1210:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1210:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1192:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1192:6:6"
																},
																"nativeSrc": "1192:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1192:25:6"
															},
															"nativeSrc": "1192:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "1192:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1237:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1237:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1248:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1248:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1233:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:6"
																		},
																		"nativeSrc": "1233:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1233:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "1253:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1253:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1226:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1226:6:6"
																},
																"nativeSrc": "1226:34:6",
																"nodeType": "YulFunctionCall",
																"src": "1226:34:6"
															},
															"nativeSrc": "1226:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "1226:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1018:248:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1108:9:6",
														"nodeType": "YulTypedName",
														"src": "1108:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1119:6:6",
														"nodeType": "YulTypedName",
														"src": "1119:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1127:6:6",
														"nodeType": "YulTypedName",
														"src": "1127:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1138:4:6",
														"nodeType": "YulTypedName",
														"src": "1138:4:6",
														"type": ""
													}
												],
												"src": "1018:248:6"
											},
											{
												"body": {
													"nativeSrc": "1358:259:6",
													"nodeType": "YulBlock",
													"src": "1358:259:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1404:16:6",
																"nodeType": "YulBlock",
																"src": "1404:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1413:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1413:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1416:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1416:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1406:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1406:6:6"
																			},
																			"nativeSrc": "1406:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1406:12:6"
																		},
																		"nativeSrc": "1406:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1406:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1379:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1379:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1388:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1388:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1375:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1375:3:6"
																		},
																		"nativeSrc": "1375:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1375:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1400:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1400:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1371:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1371:3:6"
																},
																"nativeSrc": "1371:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1371:32:6"
															},
															"nativeSrc": "1368:52:6",
															"nodeType": "YulIf",
															"src": "1368:52:6"
														},
														{
															"nativeSrc": "1429:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1429:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1442:1:6",
																"nodeType": "YulLiteral",
																"src": "1442:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1433:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1433:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1452:32:6",
															"nodeType": "YulAssignment",
															"src": "1452:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1474:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1474:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1461:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1461:12:6"
																},
																"nativeSrc": "1461:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1461:23:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1452:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1452:5:6"
																}
															]
														},
														{
															"nativeSrc": "1493:15:6",
															"nodeType": "YulAssignment",
															"src": "1493:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1503:5:6",
																"nodeType": "YulIdentifier",
																"src": "1503:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1493:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1493:6:6"
																}
															]
														},
														{
															"nativeSrc": "1517:16:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1517:16:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1532:1:6",
																"nodeType": "YulLiteral",
																"src": "1532:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1521:7:6",
																	"nodeType": "YulTypedName",
																	"src": "1521:7:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1542:43:6",
															"nodeType": "YulAssignment",
															"src": "1542:43:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1570:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1570:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1581:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1581:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1566:3:6"
																		},
																		"nativeSrc": "1566:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1566:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1553:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1553:12:6"
																},
																"nativeSrc": "1553:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1553:32:6"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1542:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1542:7:6"
																}
															]
														},
														{
															"nativeSrc": "1594:17:6",
															"nodeType": "YulAssignment",
															"src": "1594:17:6",
															"value": {
																"name": "value_1",
																"nativeSrc": "1604:7:6",
																"nodeType": "YulIdentifier",
																"src": "1604:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1594:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1594:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1271:346:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1316:9:6",
														"nodeType": "YulTypedName",
														"src": "1316:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1327:7:6",
														"nodeType": "YulTypedName",
														"src": "1327:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1339:6:6",
														"nodeType": "YulTypedName",
														"src": "1339:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1347:6:6",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													}
												],
												"src": "1271:346:6"
											},
											{
												"body": {
													"nativeSrc": "1709:213:6",
													"nodeType": "YulBlock",
													"src": "1709:213:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1755:16:6",
																"nodeType": "YulBlock",
																"src": "1755:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1764:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1764:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1767:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1767:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1757:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1757:6:6"
																			},
																			"nativeSrc": "1757:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1757:12:6"
																		},
																		"nativeSrc": "1757:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1757:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1730:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1730:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1739:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1739:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1726:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1726:3:6"
																		},
																		"nativeSrc": "1726:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1726:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1751:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1751:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1722:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1722:3:6"
																},
																"nativeSrc": "1722:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1722:32:6"
															},
															"nativeSrc": "1719:52:6",
															"nodeType": "YulIf",
															"src": "1719:52:6"
														},
														{
															"nativeSrc": "1780:39:6",
															"nodeType": "YulAssignment",
															"src": "1780:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1809:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1809:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1790:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1790:18:6"
																},
																"nativeSrc": "1790:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1790:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1780:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1780:6:6"
																}
															]
														},
														{
															"nativeSrc": "1828:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1828:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1841:1:6",
																"nodeType": "YulLiteral",
																"src": "1841:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1832:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1832:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1851:41:6",
															"nodeType": "YulAssignment",
															"src": "1851:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1877:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1877:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1888:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1888:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1873:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1873:3:6"
																		},
																		"nativeSrc": "1873:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1873:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1860:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1860:12:6"
																},
																"nativeSrc": "1860:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1860:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1851:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1851:5:6"
																}
															]
														},
														{
															"nativeSrc": "1901:15:6",
															"nodeType": "YulAssignment",
															"src": "1901:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1911:5:6",
																"nodeType": "YulIdentifier",
																"src": "1911:5:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1901:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1901:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1622:300:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1667:9:6",
														"nodeType": "YulTypedName",
														"src": "1667:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1678:7:6",
														"nodeType": "YulTypedName",
														"src": "1678:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1690:6:6",
														"nodeType": "YulTypedName",
														"src": "1690:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1698:6:6",
														"nodeType": "YulTypedName",
														"src": "1698:6:6",
														"type": ""
													}
												],
												"src": "1622:300:6"
											},
											{
												"body": {
													"nativeSrc": "1959:95:6",
													"nodeType": "YulBlock",
													"src": "1959:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1976:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1976:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1983:3:6",
																				"nodeType": "YulLiteral",
																				"src": "1983:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1988:10:6",
																				"nodeType": "YulLiteral",
																				"src": "1988:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1979:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1979:3:6"
																		},
																		"nativeSrc": "1979:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1979:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1969:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1969:6:6"
																},
																"nativeSrc": "1969:31:6",
																"nodeType": "YulFunctionCall",
																"src": "1969:31:6"
															},
															"nativeSrc": "1969:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "1969:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2016:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2019:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2019:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2009:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:6"
																},
																"nativeSrc": "2009:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2009:15:6"
															},
															"nativeSrc": "2009:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2009:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2040:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2040:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2043:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2043:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2033:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2033:6:6"
																},
																"nativeSrc": "2033:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2033:15:6"
															},
															"nativeSrc": "2033:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2033:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1927:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1927:127:6"
											},
											{
												"body": {
													"nativeSrc": "2111:116:6",
													"nodeType": "YulBlock",
													"src": "2111:116:6",
													"statements": [
														{
															"nativeSrc": "2121:20:6",
															"nodeType": "YulAssignment",
															"src": "2121:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2136:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2136:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2139:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2139:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2132:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2132:3:6"
																},
																"nativeSrc": "2132:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2132:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2121:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2121:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2199:22:6",
																"nodeType": "YulBlock",
																"src": "2199:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2201:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2201:16:6"
																			},
																			"nativeSrc": "2201:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2201:18:6"
																		},
																		"nativeSrc": "2201:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2201:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2170:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "2170:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2163:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2163:6:6"
																				},
																				"nativeSrc": "2163:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2163:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "2177:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "2177:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "2184:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "2184:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "2193:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "2193:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2180:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2180:3:6"
																						},
																						"nativeSrc": "2180:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2180:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2174:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "2174:2:6"
																				},
																				"nativeSrc": "2174:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2174:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2160:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2160:2:6"
																		},
																		"nativeSrc": "2160:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2160:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2153:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2153:6:6"
																},
																"nativeSrc": "2153:45:6",
																"nodeType": "YulFunctionCall",
																"src": "2153:45:6"
															},
															"nativeSrc": "2150:71:6",
															"nodeType": "YulIf",
															"src": "2150:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2059:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2090:1:6",
														"nodeType": "YulTypedName",
														"src": "2090:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2093:1:6",
														"nodeType": "YulTypedName",
														"src": "2093:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2099:7:6",
														"nodeType": "YulTypedName",
														"src": "2099:7:6",
														"type": ""
													}
												],
												"src": "2059:168:6"
											},
											{
												"body": {
													"nativeSrc": "2278:171:6",
													"nodeType": "YulBlock",
													"src": "2278:171:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2309:111:6",
																"nodeType": "YulBlock",
																"src": "2309:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2330:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2330:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2337:3:6",
																							"nodeType": "YulLiteral",
																							"src": "2337:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2342:10:6",
																							"nodeType": "YulLiteral",
																							"src": "2342:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2333:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2333:3:6"
																					},
																					"nativeSrc": "2333:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2333:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2323:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2323:6:6"
																			},
																			"nativeSrc": "2323:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2323:31:6"
																		},
																		"nativeSrc": "2323:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2323:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2374:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2374:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2377:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2377:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2367:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2367:6:6"
																			},
																			"nativeSrc": "2367:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2367:15:6"
																		},
																		"nativeSrc": "2367:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2367:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2402:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2402:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2405:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2405:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2395:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2395:6:6"
																			},
																			"nativeSrc": "2395:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2395:15:6"
																		},
																		"nativeSrc": "2395:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2395:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2298:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2298:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2291:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2291:6:6"
																},
																"nativeSrc": "2291:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2291:9:6"
															},
															"nativeSrc": "2288:132:6",
															"nodeType": "YulIf",
															"src": "2288:132:6"
														},
														{
															"nativeSrc": "2429:14:6",
															"nodeType": "YulAssignment",
															"src": "2429:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2438:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2438:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2441:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2441:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2434:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2434:3:6"
																},
																"nativeSrc": "2434:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2434:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2429:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "2429:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "2232:217:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2263:1:6",
														"nodeType": "YulTypedName",
														"src": "2263:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2266:1:6",
														"nodeType": "YulTypedName",
														"src": "2266:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2272:1:6",
														"nodeType": "YulTypedName",
														"src": "2272:1:6",
														"type": ""
													}
												],
												"src": "2232:217:6"
											},
											{
												"body": {
													"nativeSrc": "2503:79:6",
													"nodeType": "YulBlock",
													"src": "2503:79:6",
													"statements": [
														{
															"nativeSrc": "2513:17:6",
															"nodeType": "YulAssignment",
															"src": "2513:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2525:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2525:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2528:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2528:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2521:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2521:3:6"
																},
																"nativeSrc": "2521:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2521:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "2513:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2513:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2554:22:6",
																"nodeType": "YulBlock",
																"src": "2554:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2556:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2556:16:6"
																			},
																			"nativeSrc": "2556:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2556:18:6"
																		},
																		"nativeSrc": "2556:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2556:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "2545:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2545:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2551:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2551:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2542:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2542:2:6"
																},
																"nativeSrc": "2542:11:6",
																"nodeType": "YulFunctionCall",
																"src": "2542:11:6"
															},
															"nativeSrc": "2539:37:6",
															"nodeType": "YulIf",
															"src": "2539:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "2454:128:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2485:1:6",
														"nodeType": "YulTypedName",
														"src": "2485:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2488:1:6",
														"nodeType": "YulTypedName",
														"src": "2488:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2494:4:6",
														"nodeType": "YulTypedName",
														"src": "2494:4:6",
														"type": ""
													}
												],
												"src": "2454:128:6"
											},
											{
												"body": {
													"nativeSrc": "2716:145:6",
													"nodeType": "YulBlock",
													"src": "2716:145:6",
													"statements": [
														{
															"nativeSrc": "2726:26:6",
															"nodeType": "YulAssignment",
															"src": "2726:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2738:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2738:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2749:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2749:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2734:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2734:3:6"
																},
																"nativeSrc": "2734:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2734:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2726:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2726:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2768:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2768:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2783:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2783:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2799:3:6",
																								"nodeType": "YulLiteral",
																								"src": "2799:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2804:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2804:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2795:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2795:3:6"
																						},
																						"nativeSrc": "2795:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2795:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2808:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2808:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2791:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2791:3:6"
																				},
																				"nativeSrc": "2791:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2791:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2779:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2779:3:6"
																		},
																		"nativeSrc": "2779:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2779:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2761:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:6"
																},
																"nativeSrc": "2761:51:6",
																"nodeType": "YulFunctionCall",
																"src": "2761:51:6"
															},
															"nativeSrc": "2761:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "2761:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2832:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2832:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2843:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2843:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2828:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2828:3:6"
																		},
																		"nativeSrc": "2828:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2828:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2848:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2848:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2821:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2821:6:6"
																},
																"nativeSrc": "2821:34:6",
																"nodeType": "YulFunctionCall",
																"src": "2821:34:6"
															},
															"nativeSrc": "2821:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "2821:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2587:274:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2677:9:6",
														"nodeType": "YulTypedName",
														"src": "2677:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2688:6:6",
														"nodeType": "YulTypedName",
														"src": "2688:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2696:6:6",
														"nodeType": "YulTypedName",
														"src": "2696:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2707:4:6",
														"nodeType": "YulTypedName",
														"src": "2707:4:6",
														"type": ""
													}
												],
												"src": "2587:274:6"
											},
											{
												"body": {
													"nativeSrc": "2944:199:6",
													"nodeType": "YulBlock",
													"src": "2944:199:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2990:16:6",
																"nodeType": "YulBlock",
																"src": "2990:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2999:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2999:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3002:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3002:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2992:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2992:6:6"
																			},
																			"nativeSrc": "2992:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2992:12:6"
																		},
																		"nativeSrc": "2992:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2992:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2965:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2965:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2974:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2974:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2961:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2961:3:6"
																		},
																		"nativeSrc": "2961:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2961:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2986:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2986:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2957:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2957:3:6"
																},
																"nativeSrc": "2957:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2957:32:6"
															},
															"nativeSrc": "2954:52:6",
															"nodeType": "YulIf",
															"src": "2954:52:6"
														},
														{
															"nativeSrc": "3015:29:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3015:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3034:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3034:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3028:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3028:5:6"
																},
																"nativeSrc": "3028:16:6",
																"nodeType": "YulFunctionCall",
																"src": "3028:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3019:5:6",
																	"nodeType": "YulTypedName",
																	"src": "3019:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3097:16:6",
																"nodeType": "YulBlock",
																"src": "3097:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3106:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3106:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3109:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3109:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3099:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3099:6:6"
																			},
																			"nativeSrc": "3099:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3099:12:6"
																		},
																		"nativeSrc": "3099:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3099:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3066:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3066:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3087:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "3087:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3080:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "3080:6:6"
																						},
																						"nativeSrc": "3080:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3080:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3073:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3073:6:6"
																				},
																				"nativeSrc": "3073:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3073:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3063:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3063:2:6"
																		},
																		"nativeSrc": "3063:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3063:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3056:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3056:6:6"
																},
																"nativeSrc": "3056:40:6",
																"nodeType": "YulFunctionCall",
																"src": "3056:40:6"
															},
															"nativeSrc": "3053:60:6",
															"nodeType": "YulIf",
															"src": "3053:60:6"
														},
														{
															"nativeSrc": "3122:15:6",
															"nodeType": "YulAssignment",
															"src": "3122:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "3132:5:6",
																"nodeType": "YulIdentifier",
																"src": "3132:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3122:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3122:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "2866:277:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2910:9:6",
														"nodeType": "YulTypedName",
														"src": "2910:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2921:7:6",
														"nodeType": "YulTypedName",
														"src": "2921:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2933:6:6",
														"nodeType": "YulTypedName",
														"src": "2933:6:6",
														"type": ""
													}
												],
												"src": "2866:277:6"
											},
											{
												"body": {
													"nativeSrc": "3305:214:6",
													"nodeType": "YulBlock",
													"src": "3305:214:6",
													"statements": [
														{
															"nativeSrc": "3315:26:6",
															"nodeType": "YulAssignment",
															"src": "3315:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3327:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3327:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3338:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3338:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3323:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3323:3:6"
																},
																"nativeSrc": "3323:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3323:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3315:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3315:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3357:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3357:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3372:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3372:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3388:3:6",
																								"nodeType": "YulLiteral",
																								"src": "3388:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3393:1:6",
																								"nodeType": "YulLiteral",
																								"src": "3393:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3384:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3384:3:6"
																						},
																						"nativeSrc": "3384:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3384:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3397:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3397:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3380:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3380:3:6"
																				},
																				"nativeSrc": "3380:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3380:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3368:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3368:3:6"
																		},
																		"nativeSrc": "3368:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3350:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3350:6:6"
																},
																"nativeSrc": "3350:51:6",
																"nodeType": "YulFunctionCall",
																"src": "3350:51:6"
															},
															"nativeSrc": "3350:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "3350:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3421:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3432:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3432:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3417:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:6"
																		},
																		"nativeSrc": "3417:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3417:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "3441:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3441:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3457:3:6",
																								"nodeType": "YulLiteral",
																								"src": "3457:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3462:1:6",
																								"nodeType": "YulLiteral",
																								"src": "3462:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3453:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3453:3:6"
																						},
																						"nativeSrc": "3453:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3453:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3466:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3466:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3449:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3449:3:6"
																				},
																				"nativeSrc": "3449:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3449:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3437:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3437:3:6"
																		},
																		"nativeSrc": "3437:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3437:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3410:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3410:6:6"
																},
																"nativeSrc": "3410:60:6",
																"nodeType": "YulFunctionCall",
																"src": "3410:60:6"
															},
															"nativeSrc": "3410:60:6",
															"nodeType": "YulExpressionStatement",
															"src": "3410:60:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3490:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3490:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3501:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3501:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3486:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3486:3:6"
																		},
																		"nativeSrc": "3486:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3486:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3506:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3506:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3479:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3479:6:6"
																},
																"nativeSrc": "3479:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3479:34:6"
															},
															"nativeSrc": "3479:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3479:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3148:371:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3258:9:6",
														"nodeType": "YulTypedName",
														"src": "3258:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3269:6:6",
														"nodeType": "YulTypedName",
														"src": "3269:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3277:6:6",
														"nodeType": "YulTypedName",
														"src": "3277:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3285:6:6",
														"nodeType": "YulTypedName",
														"src": "3285:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3296:4:6",
														"nodeType": "YulTypedName",
														"src": "3296:4:6",
														"type": ""
													}
												],
												"src": "3148:371:6"
											},
											{
												"body": {
													"nativeSrc": "3625:102:6",
													"nodeType": "YulBlock",
													"src": "3625:102:6",
													"statements": [
														{
															"nativeSrc": "3635:26:6",
															"nodeType": "YulAssignment",
															"src": "3635:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3647:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3647:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3658:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3658:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3643:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3643:3:6"
																},
																"nativeSrc": "3643:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3643:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3635:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3635:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3677:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3677:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3692:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3692:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3708:3:6",
																								"nodeType": "YulLiteral",
																								"src": "3708:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3713:1:6",
																								"nodeType": "YulLiteral",
																								"src": "3713:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3704:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3704:3:6"
																						},
																						"nativeSrc": "3704:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3704:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3717:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3717:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3700:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3700:3:6"
																				},
																				"nativeSrc": "3700:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3700:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3688:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3688:3:6"
																		},
																		"nativeSrc": "3688:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3688:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3670:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3670:6:6"
																},
																"nativeSrc": "3670:51:6",
																"nodeType": "YulFunctionCall",
																"src": "3670:51:6"
															},
															"nativeSrc": "3670:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "3670:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3524:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3594:9:6",
														"nodeType": "YulTypedName",
														"src": "3594:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3605:6:6",
														"nodeType": "YulTypedName",
														"src": "3605:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3616:4:6",
														"nodeType": "YulTypedName",
														"src": "3616:4:6",
														"type": ""
													}
												],
												"src": "3524:203:6"
											},
											{
												"body": {
													"nativeSrc": "3813:103:6",
													"nodeType": "YulBlock",
													"src": "3813:103:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3859:16:6",
																"nodeType": "YulBlock",
																"src": "3859:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3868:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3868:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3871:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3871:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3861:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3861:6:6"
																			},
																			"nativeSrc": "3861:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3861:12:6"
																		},
																		"nativeSrc": "3861:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3861:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3834:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3834:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3843:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3843:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3830:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3830:3:6"
																		},
																		"nativeSrc": "3830:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3830:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3855:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3855:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3826:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3826:3:6"
																},
																"nativeSrc": "3826:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3826:32:6"
															},
															"nativeSrc": "3823:52:6",
															"nodeType": "YulIf",
															"src": "3823:52:6"
														},
														{
															"nativeSrc": "3884:26:6",
															"nodeType": "YulAssignment",
															"src": "3884:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3900:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3900:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3894:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3894:5:6"
																},
																"nativeSrc": "3894:16:6",
																"nodeType": "YulFunctionCall",
																"src": "3894:16:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3884:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3884:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3732:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3779:9:6",
														"nodeType": "YulTypedName",
														"src": "3779:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3790:7:6",
														"nodeType": "YulTypedName",
														"src": "3790:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3802:6:6",
														"nodeType": "YulTypedName",
														"src": "3802:6:6",
														"type": ""
													}
												],
												"src": "3732:184:6"
											},
											{
												"body": {
													"nativeSrc": "3969:77:6",
													"nodeType": "YulBlock",
													"src": "3969:77:6",
													"statements": [
														{
															"nativeSrc": "3979:16:6",
															"nodeType": "YulAssignment",
															"src": "3979:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3990:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3990:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3993:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3993:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3986:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3986:3:6"
																},
																"nativeSrc": "3986:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3986:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3979:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3979:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4018:22:6",
																"nodeType": "YulBlock",
																"src": "4018:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4020:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4020:16:6"
																			},
																			"nativeSrc": "4020:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4020:18:6"
																		},
																		"nativeSrc": "4020:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4020:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4010:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4010:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4013:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4013:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4007:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4007:2:6"
																},
																"nativeSrc": "4007:10:6",
																"nodeType": "YulFunctionCall",
																"src": "4007:10:6"
															},
															"nativeSrc": "4004:36:6",
															"nodeType": "YulIf",
															"src": "4004:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3921:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3952:1:6",
														"nodeType": "YulTypedName",
														"src": "3952:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3955:1:6",
														"nodeType": "YulTypedName",
														"src": "3955:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3961:3:6",
														"nodeType": "YulTypedName",
														"src": "3961:3:6",
														"type": ""
													}
												],
												"src": "3921:125:6"
											},
											{
												"body": {
													"nativeSrc": "4225:160:6",
													"nodeType": "YulBlock",
													"src": "4225:160:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4242:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4242:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4253:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4253:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4235:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4235:6:6"
																},
																"nativeSrc": "4235:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4235:21:6"
															},
															"nativeSrc": "4235:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4235:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4276:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4276:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4287:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4287:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4272:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4272:3:6"
																		},
																		"nativeSrc": "4272:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4272:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4292:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4292:2:6",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4265:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:6"
																},
																"nativeSrc": "4265:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4265:30:6"
															},
															"nativeSrc": "4265:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4265:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4315:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4315:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4326:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4326:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4311:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4311:3:6"
																		},
																		"nativeSrc": "4311:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4311:18:6"
																	},
																	{
																		"hexValue": "736861726573203d2030",
																		"kind": "string",
																		"nativeSrc": "4331:12:6",
																		"nodeType": "YulLiteral",
																		"src": "4331:12:6",
																		"type": "",
																		"value": "shares = 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4304:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4304:6:6"
																},
																"nativeSrc": "4304:40:6",
																"nodeType": "YulFunctionCall",
																"src": "4304:40:6"
															},
															"nativeSrc": "4304:40:6",
															"nodeType": "YulExpressionStatement",
															"src": "4304:40:6"
														},
														{
															"nativeSrc": "4353:26:6",
															"nodeType": "YulAssignment",
															"src": "4353:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4365:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4365:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4376:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4376:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4361:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4361:3:6"
																},
																"nativeSrc": "4361:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4361:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4353:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4353:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4051:334:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4202:9:6",
														"nodeType": "YulTypedName",
														"src": "4202:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4216:4:6",
														"nodeType": "YulTypedName",
														"src": "4216:4:6",
														"type": ""
													}
												],
												"src": "4051:334:6"
											},
											{
												"body": {
													"nativeSrc": "4564:163:6",
													"nodeType": "YulBlock",
													"src": "4564:163:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4581:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4581:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4592:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4592:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4574:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4574:6:6"
																},
																"nativeSrc": "4574:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4574:21:6"
															},
															"nativeSrc": "4574:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4574:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4615:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4615:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4626:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4626:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4611:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4611:3:6"
																		},
																		"nativeSrc": "4611:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4611:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4631:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4631:2:6",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4604:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4604:6:6"
																},
																"nativeSrc": "4604:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4604:30:6"
															},
															"nativeSrc": "4604:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4604:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4654:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4654:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4665:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4665:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4650:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4650:3:6"
																		},
																		"nativeSrc": "4650:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4650:18:6"
																	},
																	{
																		"hexValue": "696e76616c696420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "4670:15:6",
																		"nodeType": "YulLiteral",
																		"src": "4670:15:6",
																		"type": "",
																		"value": "invalid token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4643:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4643:6:6"
																},
																"nativeSrc": "4643:43:6",
																"nodeType": "YulFunctionCall",
																"src": "4643:43:6"
															},
															"nativeSrc": "4643:43:6",
															"nodeType": "YulExpressionStatement",
															"src": "4643:43:6"
														},
														{
															"nativeSrc": "4695:26:6",
															"nodeType": "YulAssignment",
															"src": "4695:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4707:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4707:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4718:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4718:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4703:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4703:3:6"
																},
																"nativeSrc": "4703:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4703:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4695:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4695:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_91766924399ba2aa6ad0c8d1146b6e8fd47173f69f3b391bd887f350814cada7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4390:337:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4541:9:6",
														"nodeType": "YulTypedName",
														"src": "4541:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4555:4:6",
														"nodeType": "YulTypedName",
														"src": "4555:4:6",
														"type": ""
													}
												],
												"src": "4390:337:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"shares = 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_91766924399ba2aa6ad0c8d1146b6e8fd47173f69f3b391bd887f350814cada7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"invalid token\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"791": [
									{
										"length": 32,
										"start": 153
									},
									{
										"length": 32,
										"start": 547
									},
									{
										"length": 32,
										"start": 854
									},
									{
										"length": 32,
										"start": 1141
									},
									{
										"length": 32,
										"start": 1599
									},
									{
										"length": 32,
										"start": 1773
									},
									{
										"length": 32,
										"start": 1870
									},
									{
										"length": 32,
										"start": 1913
									}
								],
								"794": [
									{
										"length": 32,
										"start": 370
									},
									{
										"length": 32,
										"start": 697
									},
									{
										"length": 32,
										"start": 1003
									},
									{
										"length": 32,
										"start": 1288
									},
									{
										"length": 32,
										"start": 1658
									},
									{
										"length": 32,
										"start": 1837
									},
									{
										"length": 32,
										"start": 1946
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610090575f3560e01c806370a082311161006357806370a08231146101005780639c8f9f231461011f5780639cd441da14610147578063d004f0f71461015a578063d21220a71461016d575f5ffd5b80630dfe16811461009457806318160ddd146100d8578063443cb4bc146100ef5780635a76f25e146100f7575b5f5ffd5b6100bb7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e160025481565b6040519081526020016100cf565b6100e15f5481565b6100e160015481565b6100e161010e366004610a35565b60036020525f908152604090205481565b61013261012d366004610a55565b610194565b604080519283526020830191909152016100cf565b6100e1610155366004610a6c565b610332565b6100e1610168366004610a8c565b61063c565b6100bb7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f600254835f546101a69190610ac8565b6101b09190610ae5565b9150600254836001546101c39190610ac8565b6101cd9190610ae5565b90506101d93384610993565b610201825f546101e99190610b04565b826001546101f79190610b04565b5f91909155600155565b81156102975760405163a9059cbb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303815f875af1158015610271573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102959190610b17565b505b801561032d5760405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303815f875af1158015610307573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061032b9190610b17565b505b915091565b6040516323b872dd60e01b8152336004820152306024820152604481018390525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303815f875af11580156103a4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103c89190610b17565b506040516323b872dd60e01b8152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303815f875af1158015610439573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061045d9190610b17565b506040516370a0823160e01b81523060048201525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156104c2573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104e69190610b36565b6040516370a0823160e01b81523060048201529091505f906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561054d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105719190610b36565b90505f5f54836105819190610b04565b90505f600154836105929190610b04565b90506002545f036105ae576105a78183610b4d565b94506105e1565b6001545f546105bd9190610b4d565b6002546105ca8385610b4d565b6105d49190610ac8565b6105de9190610ae5565b94505b5f85116106225760405162461bcd60e51b815260206004820152600a6024820152690736861726573203d20360b41b60448201526064015b60405180910390fd5b61062c33866109db565b50505f9190915560015592915050565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614806106ae57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316145b6106ea5760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b2103a37b5b2b760991b6044820152606401610619565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161490505f5f5f5f84610777577f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006001545f546107bf565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000005f546001545b6040516323b872dd60e01b8152336004820152306024820152604481018c9052939750919550935091506001600160a01b038516906323b872dd906064016020604051808303815f875af1158015610819573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061083d9190610b17565b506040516370a0823160e01b81523060048201525f9083906001600160a01b038716906370a0823190602401602060405180830381865afa158015610884573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108a89190610b36565b6108b29190610b04565b90506103e86108c3826103e5610ac8565b6108cd9190610ae5565b96505f5f876108ef576108e08985610b4d565b6108ea8b87610b04565b610903565b6108f98a86610b04565b6109038a86610b4d565b9150915061091682825f91909155600155565b60405163a9059cbb60e01b8152336004820152602481018a90526001600160a01b0387169063a9059cbb906044016020604051808303815f875af1158015610960573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109849190610b17565b50505050505050505092915050565b6001600160a01b0382165f90815260036020526040812080548392906109ba908490610b04565b925050819055508060025f8282546109d29190610b04565b90915550505050565b6001600160a01b0382165f9081526003602052604081208054839290610a02908490610b4d565b925050819055508060025f8282546109d29190610b4d565b80356001600160a01b0381168114610a30575f5ffd5b919050565b5f60208284031215610a45575f5ffd5b610a4e82610a1a565b9392505050565b5f60208284031215610a65575f5ffd5b5035919050565b5f5f60408385031215610a7d575f5ffd5b50508035926020909101359150565b5f5f60408385031215610a9d575f5ffd5b610aa683610a1a565b946020939093013593505050565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610adf57610adf610ab4565b92915050565b5f82610aff57634e487b7160e01b5f52601260045260245ffd5b500490565b81810381811115610adf57610adf610ab4565b5f60208284031215610b27575f5ffd5b81518015158114610a4e575f5ffd5b5f60208284031215610b46575f5ffd5b5051919050565b80820180821115610adf57610adf610ab456fea2646970667358221220d9e2643ca2d4af6436439087687031332c9a07c8b86e74b534a4e1473c802b1664736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xD004F0F7 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x16D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0xF7 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBB PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE1 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0xE1 PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE1 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0xA35 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0xA55 JUMP JUMPDEST PUSH2 0x194 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x332 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0xA8C JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST PUSH2 0xBB PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x2 SLOAD DUP4 PUSH0 SLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST SWAP2 POP PUSH1 0x2 SLOAD DUP4 PUSH1 0x1 SLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D9 CALLER DUP5 PUSH2 0x993 JUMP JUMPDEST PUSH2 0x201 DUP3 PUSH0 SLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xB04 JUMP JUMPDEST DUP3 PUSH1 0x1 SLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xB04 JUMP JUMPDEST PUSH0 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 SSTORE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x297 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x271 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST POP JUMPDEST DUP1 ISZERO PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x307 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x439 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4C2 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x571 SWAP2 SWAP1 PUSH2 0xB36 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 SLOAD DUP4 PUSH2 0x581 SWAP2 SWAP1 PUSH2 0xB04 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 SLOAD DUP4 PUSH2 0x592 SWAP2 SWAP1 PUSH2 0xB04 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH0 SUB PUSH2 0x5AE JUMPI PUSH2 0x5A7 DUP2 DUP4 PUSH2 0xB4D JUMP JUMPDEST SWAP5 POP PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SLOAD PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0xB4D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x5CA DUP4 DUP6 PUSH2 0xB4D JUMP JUMPDEST PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST SWAP5 POP JUMPDEST PUSH0 DUP6 GT PUSH2 0x622 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x736861726573203D203 PUSH1 0xB4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x62C CALLER DUP7 PUSH2 0x9DB JUMP JUMPDEST POP POP PUSH0 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x6AE JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x34B73B30B634B2103A37B5B2B7 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x619 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH0 PUSH0 PUSH0 PUSH0 DUP5 PUSH2 0x777 JUMPI PUSH32 0x0 PUSH32 0x0 PUSH1 0x1 SLOAD PUSH0 SLOAD PUSH2 0x7BF JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH0 SLOAD PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP13 SWAP1 MSTORE SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x819 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x83D SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x884 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A8 SWAP2 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH2 0x8B2 SWAP2 SWAP1 PUSH2 0xB04 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E8 PUSH2 0x8C3 DUP3 PUSH2 0x3E5 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x8CD SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST SWAP7 POP PUSH0 PUSH0 DUP8 PUSH2 0x8EF JUMPI PUSH2 0x8E0 DUP10 DUP6 PUSH2 0xB4D JUMP JUMPDEST PUSH2 0x8EA DUP12 DUP8 PUSH2 0xB04 JUMP JUMPDEST PUSH2 0x903 JUMP JUMPDEST PUSH2 0x8F9 DUP11 DUP7 PUSH2 0xB04 JUMP JUMPDEST PUSH2 0x903 DUP11 DUP7 PUSH2 0xB4D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x916 DUP3 DUP3 PUSH0 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x960 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x984 SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9BA SWAP1 DUP5 SWAP1 PUSH2 0xB04 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9D2 SWAP2 SWAP1 PUSH2 0xB04 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA02 SWAP1 DUP5 SWAP1 PUSH2 0xB4D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9D2 SWAP2 SWAP1 PUSH2 0xB4D JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA30 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA45 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA4E DUP3 PUSH2 0xA1A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA65 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA7D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA9D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xAA6 DUP4 PUSH2 0xA1A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xADF JUMPI PUSH2 0xADF PUSH2 0xAB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xAFF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xADF JUMPI PUSH2 0xADF PUSH2 0xAB4 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB27 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA4E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB46 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xADF JUMPI PUSH2 0xADF PUSH2 0xAB4 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xE2 PUSH5 0x3CA2D4AF64 CALLDATASIZE NUMBER SWAP1 DUP8 PUSH9 0x7031332C9A07C8B86E PUSH21 0xB534A4E1473C802B1664736F6C634300081D003300 ",
							"sourceMap": "171:6039:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;228:30;;;;;;;;-1:-1:-1;;;;;192:32:6;;;174:51;;162:2;147:18;228:30:5;;;;;;;;455:23;;;;;;;;;382:25:6;;;370:2;355:18;455:23:5;236:177:6;374:20:5;;;;;;401;;;;;;514:41;;;;;;:::i;:::-;;;;;;;;;;;;;;4594:1613;;;;;;:::i;:::-;;:::i;:::-;;;;1192:25:6;;;1248:2;1233:18;;1226:34;;;;1165:18;4594:1613:5;1018:248:6;3045:1363:5;;;;;;:::i;:::-;;:::i;1849:1003::-;;;;;;:::i;:::-;;:::i;265:30::-;;;;;4594:1613;4651:7;4659;5783:11;;5772:7;5761:8;;:18;;;;:::i;:::-;5760:34;;;;:::i;:::-;5756:38;;5832:11;;5821:7;5810:8;;:18;;;;:::i;:::-;5809:34;;;;:::i;:::-;5805:38;;5856:26;5862:10;5874:7;5856:5;:26::i;:::-;5995:33;6012:2;6003:8;;:11;;;;:::i;:::-;6025:2;6015:8;;:12;;;;:::i;:::-;1440:8;:16;;;;1467:8;:14;1381:108;5995:33;6045:5;;6041:69;;6067:31;;-1:-1:-1;;;6067:31:5;;6083:10;6067:31;;;2761:51:6;2828:18;;;2821:34;;;6067:6:5;-1:-1:-1;;;;;6067:15:5;;;;2734:18:6;;6067:31:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6041:69;6135:6;;6131:69;;6157:31;;-1:-1:-1;;;6157:31:5;;6173:10;6157:31;;;2761:51:6;2828:18;;;2821:34;;;6157:6:5;-1:-1:-1;;;;;6157:15:5;;;;2734:18:6;;6157:31:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6131:69;4594:1613;;;:::o;3045:1363::-;3187:56;;-1:-1:-1;;;3187:56:5;;3207:10;3187:56;;;3350:51:6;3227:4:5;3417:18:6;;;3410:60;3486:18;;;3479:34;;;3113:11:5;;3187:6;-1:-1:-1;;;;;3187:19:5;;;;3323:18:6;;3187:56:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3254:56:5;;-1:-1:-1;;;3254:56:5;;3274:10;3254:56;;;3350:51:6;3294:4:5;3417:18:6;;;3410:60;3486:18;;;3479:34;;;3254:6:5;-1:-1:-1;;;;;3254:19:5;;;;3323:18:6;;3254:56:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3359:31:5;;-1:-1:-1;;;3359:31:5;;3384:4;3359:31;;;174:51:6;3348:9:5;;3359:6;-1:-1:-1;;;;;3359:16:5;;;;147:18:6;;3359:31:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3439;;-1:-1:-1;;;3439:31:5;;3464:4;3439:31;;;174:51:6;3348:42:5;;-1:-1:-1;3428:9:5;;-1:-1:-1;;;;;3439:6:5;:16;;;;147:18:6;;3439:31:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3428:42;;3483:7;3499:8;;3492:4;:15;;;;:::i;:::-;3483:24;;3518:7;3533:8;;3527:4;:14;;;;:::i;:::-;3518:23;;4103:11;;4116:1;4103:14;4100:187;;4186:7;4191:2;4186;:7;:::i;:::-;4177:16;;4100:187;;;4266:8;;4257;;:17;;;;:::i;:::-;4243:11;;4236:5;4239:2;4236;:5;:::i;:::-;4235:19;;;;:::i;:::-;4234:41;;;;:::i;:::-;4225:50;;4100:187;4315:1;4307:6;:9;4299:31;;;;-1:-1:-1;;;4299:31:5;;4253:2:6;4299:31:5;;;4235:21:6;4292:2;4272:18;;;4265:30;-1:-1:-1;;;4311:18:6;;;4304:40;4361:18;;4299:31:5;;;;;;;;;4341:25;4347:10;4359:6;4341:5;:25::i;:::-;-1:-1:-1;;1440:8:5;:16;;;;1467:8;:14;3045:1363;;-1:-1:-1;;3045:1363:5:o;1849:1003::-;1919:14;1991:6;-1:-1:-1;;;;;1973:25:5;:8;-1:-1:-1;;;;;1973:25:5;;:52;;;;2018:6;-1:-1:-1;;;;;2000:25:5;:8;-1:-1:-1;;;;;2000:25:5;;1973:52;1951:115;;;;-1:-1:-1;;;1951:115:5;;4592:2:6;1951:115:5;;;4574:21:6;4631:2;4611:18;;;4604:30;-1:-1:-1;;;4650:18:6;;;4643:43;4703:18;;1951:115:5;4390:337:6;1951:115:5;2079:13;2111:6;-1:-1:-1;;;;;2093:25:5;:8;-1:-1:-1;;;;;2093:25:5;;2079:39;;2132:14;2147:15;2163:10;2174:11;2189:8;:78;;2235:6;2242;2249:8;;2258;;2189:78;;;2201:6;2208;2215:8;;2224;;2189:78;2337:58;;-1:-1:-1;;;2337:58:5;;2358:10;2337:58;;;3350:51:6;2378:4:5;3417:18:6;;;3410:60;3486:18;;;3479:34;;;2131:136:5;;-1:-1:-1;2131:136:5;;-1:-1:-1;2131:136:5;-1:-1:-1;2131:136:5;-1:-1:-1;;;;;;2337:20:5;;;;;3323:18:6;;2337:58:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2420:32:5;;-1:-1:-1;;;2420:32:5;;2446:4;2420:32;;;174:51:6;2406:13:5;;2455:5;;-1:-1:-1;;;;;2420:17:5;;;;;147:18:6;;2420:32:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;;;:::i;:::-;2406:54;-1:-1:-1;2571:4:5;2555:14;2406:54;2566:3;2555:14;:::i;:::-;2554:21;;;;:::i;:::-;2542:33;;2629:9;2639;2652:8;:82;;2700:16;2707:9;2700:6;:16;:::i;:::-;2718:15;2724:9;2718:5;:15;:::i;:::-;2652:82;;;2664:15;2670:9;2664:5;:15;:::i;:::-;2681:16;2688:9;2681:6;:16;:::i;:::-;2628:106;;;;2745:19;2753:4;2759;1440:8;:16;;;;1467:8;:14;1381:108;2745:19;2805:39;;-1:-1:-1;;;2805:39:5;;2823:10;2805:39;;;2761:51:6;2828:18;;;2821:34;;;-1:-1:-1;;;;;2805:17:5;;;;;2734:18:6;;2805:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1940:912;;;;;;;;1849:1003;;;;:::o;1102:126::-;-1:-1:-1;;;;;1162:16:5;;;;;;:9;:16;;;;;:27;;1182:7;;1162:16;:27;;1182:7;;1162:27;:::i;:::-;;;;;;;;1213:7;1200:11;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;1102:126:5:o;830:123::-;-1:-1:-1;;;;;890:14:5;;;;;;:9;:14;;;;;:24;;907:7;;890:14;:24;;907:7;;890:24;:::i;:::-;;;;;;;;938:7;925:11;;:20;;;;;;;:::i;418:173:6:-;486:20;;-1:-1:-1;;;;;535:31:6;;525:42;;515:70;;581:1;578;571:12;515:70;418:173;;;:::o;596:186::-;655:6;708:2;696:9;687:7;683:23;679:32;676:52;;;724:1;721;714:12;676:52;747:29;766:9;747:29;:::i;:::-;737:39;596:186;-1:-1:-1;;;596:186:6:o;787:226::-;846:6;899:2;887:9;878:7;874:23;870:32;867:52;;;915:1;912;905:12;867:52;-1:-1:-1;960:23:6;;787:226;-1:-1:-1;787:226:6:o;1271:346::-;1339:6;1347;1400:2;1388:9;1379:7;1375:23;1371:32;1368:52;;;1416:1;1413;1406:12;1368:52;-1:-1:-1;;1461:23:6;;;1581:2;1566:18;;;1553:32;;-1:-1:-1;1271:346:6:o;1622:300::-;1690:6;1698;1751:2;1739:9;1730:7;1726:23;1722:32;1719:52;;;1767:1;1764;1757:12;1719:52;1790:29;1809:9;1790:29;:::i;:::-;1780:39;1888:2;1873:18;;;;1860:32;;-1:-1:-1;;;1622:300:6:o;1927:127::-;1988:10;1983:3;1979:20;1976:1;1969:31;2019:4;2016:1;2009:15;2043:4;2040:1;2033:15;2059:168;2132:9;;;2163;;2180:15;;;2174:22;;2160:37;2150:71;;2201:18;;:::i;:::-;2059:168;;;;:::o;2232:217::-;2272:1;2298;2288:132;;2342:10;2337:3;2333:20;2330:1;2323:31;2377:4;2374:1;2367:15;2405:4;2402:1;2395:15;2288:132;-1:-1:-1;2434:9:6;;2232:217::o;2454:128::-;2521:9;;;2542:11;;;2539:37;;;2556:18;;:::i;2866:277::-;2933:6;2986:2;2974:9;2965:7;2961:23;2957:32;2954:52;;;3002:1;2999;2992:12;2954:52;3034:9;3028:16;3087:5;3080:13;3073:21;3066:5;3063:32;3053:60;;3109:1;3106;3099:12;3732:184;3802:6;3855:2;3843:9;3834:7;3830:23;3826:32;3823:52;;;3871:1;3868;3861:12;3823:52;-1:-1:-1;3894:16:6;;3732:184;-1:-1:-1;3732:184:6:o;3921:125::-;3986:9;;;4007:10;;;4004:36;;;4020:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "593200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256,uint256)": "infinite",
								"balanceOf(address)": "2516",
								"removeLiquidity(uint256)": "infinite",
								"reserve0()": "2338",
								"reserve1()": "2361",
								"swap(address,uint256)": "infinite",
								"token0()": "infinite",
								"token1()": "infinite",
								"totalSupply()": "2317"
							},
							"internal": {
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_update(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 171,
									"end": 6210,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 171,
									"end": 6210,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 171,
									"end": 6210,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 564,
									"end": 683,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 683,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 683,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 564,
									"end": 683,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 564,
									"end": 683,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 564,
									"end": 683,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 564,
									"end": 683,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 564,
									"end": 683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 564,
									"end": 683,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 564,
									"end": 683,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 620,
									"end": 642,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 620,
									"end": 642,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 620,
									"end": 642,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 620,
									"end": 642,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 620,
									"end": 642,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 653,
									"end": 675,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 653,
									"end": 675,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 653,
									"end": 675,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 171,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 171,
									"end": 6210,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 171,
									"end": 6210,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 171,
									"end": 6210,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 171,
									"end": 6210,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 171,
									"end": 6210,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 171,
									"end": 6210,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 171,
									"end": 6210,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 171,
									"end": 6210,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 6210,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 171,
									"end": 6210,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 6210,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "794"
								},
								{
									"begin": 171,
									"end": 6210,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 6210,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "791"
								},
								{
									"begin": 171,
									"end": 6210,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 171,
									"end": 6210,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 6210,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d9e2643ca2d4af6436439087687031332c9a07c8b86e74b534a4e1473c802b1664736f6c634300081d0033",
									".code": [
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "9C8F9F23"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "9CD441DA"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "D004F0F7"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "D21220A7"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "DFE1681"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "443CB4BC"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "5A76F25E"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 6210,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 228,
											"end": 258,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 228,
											"end": 258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 228,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 228,
											"end": 258,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 228,
											"end": 258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 228,
											"end": 258,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 228,
											"end": 258,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 228,
											"end": 258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 228,
											"end": 258,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 258,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 192,
											"end": 224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 192,
											"end": 224,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 192,
											"end": 224,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 174,
											"end": 225,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 174,
											"end": 225,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 162,
											"end": 164,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 147,
											"end": 165,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 228,
											"end": 258,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 228,
											"end": 258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 228,
											"end": 258,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 258,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 228,
											"end": 258,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 228,
											"end": 258,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 228,
											"end": 258,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 228,
											"end": 258,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 228,
											"end": 258,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 455,
											"end": 478,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 455,
											"end": 478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 455,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 455,
											"end": 478,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 455,
											"end": 478,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 455,
											"end": 478,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 455,
											"end": 478,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 455,
											"end": 478,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 455,
											"end": 478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 455,
											"end": 478,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 478,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 382,
											"end": 407,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 382,
											"end": 407,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 382,
											"end": 407,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 370,
											"end": 372,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 355,
											"end": 373,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 455,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 236,
											"end": 413,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 374,
											"end": 394,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 374,
											"end": 394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 374,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 374,
											"end": 394,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 394,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 374,
											"end": 394,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 374,
											"end": 394,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 401,
											"end": 421,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 401,
											"end": 421,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 401,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 401,
											"end": 421,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 401,
											"end": 421,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 401,
											"end": 421,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 401,
											"end": 421,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 514,
											"end": 555,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 514,
											"end": 555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 514,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 514,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 514,
											"end": 555,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 514,
											"end": 555,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 514,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 514,
											"end": 555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 514,
											"end": 555,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 514,
											"end": 555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 514,
											"end": 555,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 514,
											"end": 555,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 514,
											"end": 555,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 514,
											"end": 555,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 514,
											"end": 555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 514,
											"end": 555,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 514,
											"end": 555,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 514,
											"end": 555,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 514,
											"end": 555,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 514,
											"end": 555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 514,
											"end": 555,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 4594,
											"end": 6207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 4594,
											"end": 6207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1192,
											"end": 1217,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1217,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1217,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1226,
											"end": 1260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1226,
											"end": 1260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1226,
											"end": 1260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1226,
											"end": 1260,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1165,
											"end": 1183,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1018,
											"end": 1266,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 4408,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3045,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3045,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3045,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3045,
											"end": 4408,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3045,
											"end": 4408,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3045,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3045,
											"end": 4408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3045,
											"end": 4408,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3045,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3045,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3045,
											"end": 4408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 2852,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1849,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1849,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1849,
											"end": 2852,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 2852,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1849,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1849,
											"end": 2852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 2852,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1849,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1849,
											"end": 2852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 265,
											"end": 295,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 265,
											"end": 295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 265,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 265,
											"end": 295,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 265,
											"end": 295,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 265,
											"end": 295,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4651,
											"end": 4658,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4659,
											"end": 4666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5779,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5761,
											"end": 5769,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 5761,
											"end": 5779,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 5761,
											"end": 5779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5779,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 5761,
											"end": 5779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5760,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 5760,
											"end": 5794,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5760,
											"end": 5794,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5760,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 5760,
											"end": 5794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5760,
											"end": 5794,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 5760,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5756,
											"end": 5794,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5756,
											"end": 5794,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5832,
											"end": 5843,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5832,
											"end": 5843,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5821,
											"end": 5828,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5810,
											"end": 5818,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5810,
											"end": 5818,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 5810,
											"end": 5828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5809,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 5809,
											"end": 5843,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5809,
											"end": 5843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5809,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 5809,
											"end": 5843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5809,
											"end": 5843,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 5809,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5805,
											"end": 5843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5805,
											"end": 5843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5856,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 5862,
											"end": 5872,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5881,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5856,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 5856,
											"end": 5882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5856,
											"end": 5882,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 5856,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5995,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6012,
											"end": 6014,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6003,
											"end": 6011,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6003,
											"end": 6011,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6003,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 6003,
											"end": 6014,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6003,
											"end": 6014,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6003,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 6003,
											"end": 6014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6003,
											"end": 6014,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 6003,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6025,
											"end": 6027,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6015,
											"end": 6027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 6015,
											"end": 6027,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6015,
											"end": 6027,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6015,
											"end": 6027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 6015,
											"end": 6027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6015,
											"end": 6027,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 6015,
											"end": 6027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1440,
											"end": 1448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1475,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1467,
											"end": 1481,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1489,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5995,
											"end": 6028,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5995,
											"end": 6028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6045,
											"end": 6050,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6045,
											"end": 6050,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6041,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 6041,
											"end": 6110,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6083,
											"end": 6093,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 2812,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2846,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2828,
											"end": 2846,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2846,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2855,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6073,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6067,
											"end": 6082,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6082,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 6067,
											"end": 6082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2734,
											"end": 2752,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2734,
											"end": 2752,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 6067,
											"end": 6098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6041,
											"end": 6110,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 6041,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6135,
											"end": 6141,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6135,
											"end": 6141,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6131,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 6131,
											"end": 6200,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6173,
											"end": 6183,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 2812,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2846,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2828,
											"end": 2846,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2846,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2855,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6163,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6157,
											"end": 6172,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6172,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6172,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 6157,
											"end": 6172,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2734,
											"end": 2752,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2734,
											"end": 2752,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 6157,
											"end": 6188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6188,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6131,
											"end": 6200,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 6131,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4594,
											"end": 6207,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4594,
											"end": 6207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3045,
											"end": 4408,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3045,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3207,
											"end": 3217,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3231,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3410,
											"end": 3470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3513,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3124,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3124,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3193,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3187,
											"end": 3206,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3206,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 3187,
											"end": 3206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3341,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3323,
											"end": 3341,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3187,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3274,
											"end": 3284,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 3298,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3410,
											"end": 3470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3513,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3254,
											"end": 3273,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 3254,
											"end": 3273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3341,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3323,
											"end": 3341,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3254,
											"end": 3310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3254,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 174,
											"end": 225,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3348,
											"end": 3357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3365,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3359,
											"end": 3375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3375,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3359,
											"end": 3375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 147,
											"end": 165,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 147,
											"end": 165,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3359,
											"end": 3390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3359,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3464,
											"end": 3468,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 174,
											"end": 225,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3348,
											"end": 3390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3348,
											"end": 3390,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3428,
											"end": 3437,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3437,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3439,
											"end": 3445,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 147,
											"end": 165,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 147,
											"end": 165,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3439,
											"end": 3470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3428,
											"end": 3470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3428,
											"end": 3470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3483,
											"end": 3490,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3507,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3496,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3492,
											"end": 3507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3492,
											"end": 3507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3507,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3492,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3483,
											"end": 3507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3483,
											"end": 3507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3525,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3533,
											"end": 3541,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3533,
											"end": 3541,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3531,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3527,
											"end": 3541,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3527,
											"end": 3541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3541,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3527,
											"end": 3541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4114,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4103,
											"end": 4114,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4116,
											"end": 4117,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4117,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4100,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4100,
											"end": 4287,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4191,
											"end": 4193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4188,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4186,
											"end": 4193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4193,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4186,
											"end": 4193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4177,
											"end": 4193,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4177,
											"end": 4193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4100,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4100,
											"end": 4287,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4100,
											"end": 4287,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4100,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4266,
											"end": 4274,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4266,
											"end": 4274,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4257,
											"end": 4265,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4257,
											"end": 4265,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4257,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4257,
											"end": 4274,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4257,
											"end": 4274,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4257,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4257,
											"end": 4274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4257,
											"end": 4274,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4257,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4243,
											"end": 4254,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4243,
											"end": 4254,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4236,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4239,
											"end": 4241,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4236,
											"end": 4238,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4236,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4236,
											"end": 4241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4236,
											"end": 4241,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4236,
											"end": 4241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4235,
											"end": 4254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 4234,
											"end": 4275,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4234,
											"end": 4275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4275,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 4234,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4225,
											"end": 4275,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4225,
											"end": 4275,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4100,
											"end": 4287,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4100,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4315,
											"end": 4316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4307,
											"end": 4313,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4307,
											"end": 4316,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4299,
											"end": 4330,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 4330,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4299,
											"end": 4330,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4299,
											"end": 4330,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 4330,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4299,
											"end": 4330,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4299,
											"end": 4330,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 4330,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4235,
											"end": 4256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4294,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4295,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "736861726573203D203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4311,
											"end": 4329,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4311,
											"end": 4329,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4311,
											"end": 4329,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4304,
											"end": 4344,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4330,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4299,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 4330,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4299,
											"end": 4330,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 4330,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 4330,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 4330,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 4330,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 4330,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 4330,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4299,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4341,
											"end": 4366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4347,
											"end": 4357,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4365,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4341,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4341,
											"end": 4366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4341,
											"end": 4366,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4341,
											"end": 4366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1440,
											"end": 1448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1475,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1467,
											"end": 1481,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3045,
											"end": 4408,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3045,
											"end": 4408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3045,
											"end": 4408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 2852,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1849,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1991,
											"end": 1997,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1973,
											"end": 1998,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 1981,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1973,
											"end": 1998,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 1998,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 2025,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1973,
											"end": 2025,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 2025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2024,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2008,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2025,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 2025,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1973,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1951,
											"end": 2066,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2066,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 2066,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1951,
											"end": 2066,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2066,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4592,
											"end": 4594,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 2066,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 2066,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2066,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4595,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4633,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 4611,
											"end": 4629,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4611,
											"end": 4629,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4611,
											"end": 4629,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 4634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B73B30B634B2103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4686,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4390,
											"end": 4727,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 2066,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1951,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2092,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2117,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2093,
											"end": 2118,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2093,
											"end": 2118,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2118,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2118,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2118,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2132,
											"end": 2146,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2147,
											"end": 2162,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2173,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2185,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2197,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2189,
											"end": 2267,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2241,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 2242,
											"end": 2248,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 2249,
											"end": 2257,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2249,
											"end": 2257,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2266,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2266,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2189,
											"end": 2267,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2267,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2189,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2207,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 2215,
											"end": 2223,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2215,
											"end": 2223,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2232,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2224,
											"end": 2232,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2267,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2189,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2368,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2382,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3410,
											"end": 3470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3513,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3513,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2267,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2267,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2267,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2267,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2267,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2267,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2337,
											"end": 2357,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2357,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2357,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 2337,
											"end": 2357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3341,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3323,
											"end": 3341,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2337,
											"end": 2395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2337,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2446,
											"end": 2450,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 174,
											"end": 225,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2419,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2406,
											"end": 2419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2460,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2420,
											"end": 2437,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2437,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2437,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2437,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2420,
											"end": 2437,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 147,
											"end": 165,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 147,
											"end": 165,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2420,
											"end": 2452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2420,
											"end": 2460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2420,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2460,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2420,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2571,
											"end": 2575,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 2555,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2406,
											"end": 2460,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2569,
											"name": "PUSH",
											"source": 5,
											"value": "3E5"
										},
										{
											"begin": 2555,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2555,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2555,
											"end": 2569,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2555,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2554,
											"end": 2575,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2575,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2554,
											"end": 2575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2575,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2554,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2638,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2648,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2660,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2652,
											"end": 2734,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2707,
											"end": 2716,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2706,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2700,
											"end": 2716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2716,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2700,
											"end": 2716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2724,
											"end": 2733,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2718,
											"end": 2733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2733,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2718,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2652,
											"end": 2734,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2734,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2652,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2670,
											"end": 2679,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2669,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2664,
											"end": 2679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2679,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2664,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2688,
											"end": 2697,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2687,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2681,
											"end": 2697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2697,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2681,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2628,
											"end": 2734,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2628,
											"end": 2734,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2628,
											"end": 2734,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2628,
											"end": 2734,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2753,
											"end": 2757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2759,
											"end": 2763,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1440,
											"end": 1448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1475,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1467,
											"end": 1481,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1489,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 2812,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2846,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2828,
											"end": 2846,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2846,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2855,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2855,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2805,
											"end": 2822,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2822,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2822,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2805,
											"end": 2822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2734,
											"end": 2752,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2734,
											"end": 2752,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2805,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 2852,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 2852,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 2852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 2852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 2852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 1228,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1102,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1162,
											"end": 1178,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1178,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1178,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1178,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1178,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1171,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1162,
											"end": 1178,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1162,
											"end": 1178,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1178,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1178,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1178,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1189,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1189,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1178,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1189,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1162,
											"end": 1189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1200,
											"end": 1220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1102,
											"end": 1228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 830,
											"end": 953,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 830,
											"end": 953,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 890,
											"end": 904,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 890,
											"end": 904,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 890,
											"end": 904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 904,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 890,
											"end": 904,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 890,
											"end": 904,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 890,
											"end": 899,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 890,
											"end": 904,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 890,
											"end": 904,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 890,
											"end": 904,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 904,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 890,
											"end": 904,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 890,
											"end": 914,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 890,
											"end": 914,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 907,
											"end": 914,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 907,
											"end": 914,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 890,
											"end": 904,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 890,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 890,
											"end": 914,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 907,
											"end": 914,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 907,
											"end": 914,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 890,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 890,
											"end": 914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 890,
											"end": 914,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 890,
											"end": 914,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 890,
											"end": 914,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 890,
											"end": 914,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 890,
											"end": 914,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 890,
											"end": 914,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 890,
											"end": 914,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 890,
											"end": 914,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 890,
											"end": 914,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 938,
											"end": 945,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 925,
											"end": 936,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 925,
											"end": 936,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 945,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 925,
											"end": 945,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 925,
											"end": 945,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 925,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 925,
											"end": 945,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 925,
											"end": 945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 925,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 925,
											"end": 945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 418,
											"end": 591,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 418,
											"end": 591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 486,
											"end": 506,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 506,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 535,
											"end": 566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 535,
											"end": 566,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 525,
											"end": 567,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 525,
											"end": 567,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 515,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 515,
											"end": 585,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 581,
											"end": 582,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 579,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 583,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 515,
											"end": 585,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 515,
											"end": 585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 418,
											"end": 591,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 418,
											"end": 591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 418,
											"end": 591,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 418,
											"end": 591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 596,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 596,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 655,
											"end": 661,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 710,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 696,
											"end": 705,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 687,
											"end": 694,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 683,
											"end": 706,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 679,
											"end": 711,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 676,
											"end": 728,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 676,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 676,
											"end": 728,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 724,
											"end": 725,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 722,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 714,
											"end": 726,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 676,
											"end": 728,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 676,
											"end": 728,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 747,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 747,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 747,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 747,
											"end": 776,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 747,
											"end": 776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 737,
											"end": 776,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 596,
											"end": 782,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 596,
											"end": 782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 787,
											"end": 1013,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 787,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 846,
											"end": 852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 887,
											"end": 896,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 878,
											"end": 885,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 874,
											"end": 897,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 870,
											"end": 902,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 867,
											"end": 919,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 867,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 867,
											"end": 919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 915,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 913,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 917,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 867,
											"end": 919,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 867,
											"end": 919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 960,
											"end": 983,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 960,
											"end": 983,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 787,
											"end": 1013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 787,
											"end": 1013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1617,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1345,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1402,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1397,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1379,
											"end": 1386,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1375,
											"end": 1398,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1371,
											"end": 1403,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1368,
											"end": 1420,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1368,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1368,
											"end": 1420,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1417,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1414,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1418,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1368,
											"end": 1420,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1368,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1461,
											"end": 1484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1484,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1484,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1581,
											"end": 1583,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1271,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1622,
											"end": 1922,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1622,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1696,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1753,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1739,
											"end": 1748,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1730,
											"end": 1737,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1749,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1754,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1768,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1765,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1719,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1790,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1790,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1790,
											"end": 1819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1790,
											"end": 1819,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1790,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1780,
											"end": 1819,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 1890,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1873,
											"end": 1891,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1891,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1891,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1622,
											"end": 1922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 2054,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1927,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 1998,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1979,
											"end": 1999,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 1977,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 2000,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2019,
											"end": 2023,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2016,
											"end": 2017,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2009,
											"end": 2024,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2043,
											"end": 2047,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2040,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2227,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2059,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2141,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2141,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2141,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2172,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2172,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2195,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2195,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2195,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2196,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2196,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2197,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2150,
											"end": 2221,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2201,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2201,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2201,
											"end": 2219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2201,
											"end": 2219,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2201,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2227,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2227,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2449,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2232,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2272,
											"end": 2273,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2299,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2288,
											"end": 2420,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2352,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2337,
											"end": 2340,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2333,
											"end": 2353,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2354,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2381,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2374,
											"end": 2375,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2367,
											"end": 2382,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2409,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2402,
											"end": 2403,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2410,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2420,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2288,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2434,
											"end": 2443,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2434,
											"end": 2443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2582,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2454,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2530,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2530,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2530,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2542,
											"end": 2553,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2542,
											"end": 2553,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2542,
											"end": 2553,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2576,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2539,
											"end": 2576,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2556,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2556,
											"end": 2574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 3143,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2866,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2939,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 2988,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2974,
											"end": 2983,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 2972,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2961,
											"end": 2984,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2989,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 3006,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2954,
											"end": 3006,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3003,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2999,
											"end": 3000,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 3004,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 3006,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2954,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3043,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3028,
											"end": 3044,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3080,
											"end": 3093,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3094,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3071,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3095,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3053,
											"end": 3113,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3109,
											"end": 3110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3107,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3111,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3916,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3732,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 3808,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3843,
											"end": 3852,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 3841,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3830,
											"end": 3853,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 3858,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3872,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3868,
											"end": 3869,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3894,
											"end": 3910,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3894,
											"end": 3910,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3732,
											"end": 3916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3921,
											"end": 4046,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3921,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3986,
											"end": 3995,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3986,
											"end": 3995,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3986,
											"end": 3995,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4004,
											"end": 4040,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4004,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 4004,
											"end": 4040,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4020,
											"end": 4038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"five/AMM.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256)": "9cd441da",
							"balanceOf(address)": "70a08231",
							"removeLiquidity(uint256)": "9c8f9f23",
							"reserve0()": "443cb4bc",
							"reserve1()": "5a76f25e",
							"swap(address,uint256)": "d004f0f7",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"d0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"d1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256,uint256)\":{\"details\":\"\\u6dfb\\u52a0\\u6d41\\u52a8\\u6027\",\"params\":{\"_amount0\":\"\\u5b58\\u5165\\u7684token0\\u6570\\u91cf\",\"_amount1\":\"\\u5b58\\u5165\\u7684token1\\u6570\\u91cf\"},\"returns\":{\"shares\":\"\\u83b7\\u5f97\\u7684\\u6d41\\u52a8\\u6027\\u4efd\\u989d\"}},\"removeLiquidity(uint256)\":{\"details\":\"\\u79fb\\u9664\\u6d41\\u52a8\\u6027\",\"params\":{\"_shares\":\"\\u9500\\u6bc1\\u7684\\u4efd\\u989d\\u6570\\u91cf\"},\"returns\":{\"d0\":\"\\u8fd4\\u56de\\u7684token0\\u6570\\u91cf\",\"d1\":\"\\u8fd4\\u56de\\u7684token1\\u6570\\u91cf\"}},\"swap(address,uint256)\":{\"details\":\"\\u4ee3\\u5e01\\u4ea4\\u6362\\u51fd\\u6570\",\"params\":{\"_amountIn\":\"\\u8f93\\u5165\\u6570\\u91cf\",\"_tokenIn\":\"\\u8f93\\u5165\\u4ee3\\u5e01\\u5730\\u5740\"},\"returns\":{\"amountOut\":\"\\u5b9e\\u9645\\u8f93\\u51fa\\u6570\\u91cf \\u4ea4\\u6362\\u7684\\u8fc7\\u7a0b\\u52a0\\u5165\\u5165\\u53c2\\u4e3a token0 5\\uff0c\\u5219\\u9700\\u8981\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"five/AMM.sol\":\"CSAMM\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"five/AMM.sol\":{\"keccak256\":\"0x2a8ccc4bf6d574d37e7a741b8879feb76ae9eeee401bcef9c2653d6615365e30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9b2c515f4d005e8d6410fee5c6bb4c16294beca2c8f78c0677d252bf7756619\",\"dweb:/ipfs/QmYzGQAMAigr3GeVzhPGVQMnfxuVmccka7ZMYkPG2uBYwq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 796,
								"contract": "five/AMM.sol:CSAMM",
								"label": "reserve0",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 798,
								"contract": "five/AMM.sol:CSAMM",
								"label": "reserve1",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 800,
								"contract": "five/AMM.sol:CSAMM",
								"label": "totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 804,
								"contract": "five/AMM.sol:CSAMM",
								"label": "balanceOf",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10618:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10636:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10655:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10632:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10662:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10714:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10723:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10741:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10687:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10812:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10819:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10828:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10847:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10803:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9787:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10789:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"five/AMM.sol": {
				"ast": {
					"absolutePath": "five/AMM.sol",
					"exportedSymbols": {
						"CSAMM": [
							1197
						],
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 1198,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1198,
							"sourceUnit": 652,
							"src": "60:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CSAMM",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1197,
							"linearizedBaseContracts": [
								1197
							],
							"name": "CSAMM",
							"nameLocation": "180:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 791,
									"mutability": "immutable",
									"name": "token0",
									"nameLocation": "252:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "228:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 790,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 789,
											"name": "IERC20",
											"nameLocations": [
												"228:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "228:6:5"
										},
										"referencedDeclaration": 729,
										"src": "228:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 794,
									"mutability": "immutable",
									"name": "token1",
									"nameLocation": "289:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "265:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 793,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 792,
											"name": "IERC20",
											"nameLocations": [
												"265:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "265:6:5"
										},
										"referencedDeclaration": 729,
										"src": "265:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "443cb4bc",
									"id": 796,
									"mutability": "mutable",
									"name": "reserve0",
									"nameLocation": "386:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "374:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 795,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "374:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5a76f25e",
									"id": 798,
									"mutability": "mutable",
									"name": "reserve1",
									"nameLocation": "413:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "401:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 797,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "401:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 800,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "467:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "455:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 799,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "455:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 804,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "546:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "514:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 803,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 801,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "522:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "514:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 802,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "533:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "609:74:5",
										"statements": [
											{
												"expression": {
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 811,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "620:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 813,
																"name": "_token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "634:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 812,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "627:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "627:15:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "620:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "620:22:5"
											},
											{
												"expression": {
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 817,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "653:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 819,
																"name": "_token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "667:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 818,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "660:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "660:15:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "653:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "653:22:5"
											}
										]
									},
									"id": 824,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "584:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "576:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "601:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "593:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "575:34:5"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "609:0:5"
									},
									"scope": 1197,
									"src": "564:119:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "879:74:5",
										"statements": [
											{
												"expression": {
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 832,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "890:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 834,
														"indexExpression": {
															"id": 833,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "900:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "890:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 835,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "907:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "890:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "890:24:5"
											},
											{
												"expression": {
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 838,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "925:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 839,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "938:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "925:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "925:20:5"
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "691:133:5",
										"text": " @dev 铸造流动性份额（内部函数）\n @param _to 接收地址\n @param _amount 份额数量"
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "839:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "853:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "845:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "862:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "857:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "857:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:26:5"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "879:0:5"
									},
									"scope": 1197,
									"src": "830:123:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "1151:77:5",
										"statements": [
											{
												"expression": {
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 851,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "1162:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 853,
														"indexExpression": {
															"id": 852,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "1172:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1162:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 854,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "1182:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1162:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "1162:27:5"
											},
											{
												"expression": {
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 857,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "1200:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 858,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "1213:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1200:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "1200:20:5"
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "961:135:5",
										"text": " @dev 销毁流动性份额（内部函数）\n @param _from 来源地址\n @param _amount 份额数量"
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "1111:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1125:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "1117:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1117:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1136:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "1131:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1131:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1116:28:5"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1151:0:5"
									},
									"scope": 1197,
									"src": "1102:126:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "1429:60:5",
										"statements": [
											{
												"expression": {
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 870,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "1440:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 871,
														"name": "_res0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "1451:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1440:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "1440:16:5"
											},
											{
												"expression": {
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 874,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1467:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 875,
														"name": "_res1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "1476:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1467:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "1467:14:5"
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "1236:139:5",
										"text": " @dev 更新储备量（内部函数）\n @param _res0 新的token0储备\n @param _res1 新的token1储备"
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1390:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "_res0",
												"nameLocation": "1403:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "1398:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1398:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "_res1",
												"nameLocation": "1414:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "1409:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1409:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1397:23:5"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1429:0:5"
									},
									"scope": 1197,
									"src": "1381:108:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15",
									"id": 887,
									"name": "Deposit",
									"nameLocation": "1546:7:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1570:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "1554:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1554:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1581:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "1576:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1576:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1595:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "1590:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1590:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1553:50:5"
									},
									"src": "1540:64:5"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "1940:912:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 898,
																	"name": "_tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "1973:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 901,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "1991:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1983:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 899,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1983:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1983:15:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1973:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 904,
																	"name": "_tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "2000:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 907,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 794,
																			"src": "2018:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2010:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 905,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2010:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2010:15:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2000:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1973:52:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420746f6b656e",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2040:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91766924399ba2aa6ad0c8d1146b6e8fd47173f69f3b391bd887f350814cada7",
																"typeString": "literal_string \"invalid token\""
															},
															"value": "invalid token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91766924399ba2aa6ad0c8d1146b6e8fd47173f69f3b391bd887f350814cada7",
																"typeString": "literal_string \"invalid token\""
															}
														],
														"id": 897,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1951:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1951:115:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "1951:115:5"
											},
											{
												"assignments": [
													915
												],
												"declarations": [
													{
														"constant": false,
														"id": 915,
														"mutability": "mutable",
														"name": "isToken0",
														"nameLocation": "2084:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1013,
														"src": "2079:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 914,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2079:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 922,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "_tokenIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "2093:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 919,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "2111:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															],
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2103:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 917,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2103:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2103:15:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2093:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2079:39:5"
											},
											{
												"assignments": [
													925,
													928,
													930,
													932
												],
												"declarations": [
													{
														"constant": false,
														"id": 925,
														"mutability": "mutable",
														"name": "tokenIn",
														"nameLocation": "2139:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1013,
														"src": "2132:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 924,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 923,
																"name": "IERC20",
																"nameLocations": [
																	"2132:6:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 729,
																"src": "2132:6:5"
															},
															"referencedDeclaration": 729,
															"src": "2132:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "tokenOut",
														"nameLocation": "2154:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1013,
														"src": "2147:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 927,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 926,
																"name": "IERC20",
																"nameLocations": [
																	"2147:6:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 729,
																"src": "2147:6:5"
															},
															"referencedDeclaration": 729,
															"src": "2147:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 930,
														"mutability": "mutable",
														"name": "resIn",
														"nameLocation": "2168:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1013,
														"src": "2163:10:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 929,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2163:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 932,
														"mutability": "mutable",
														"name": "resOut",
														"nameLocation": "2179:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1013,
														"src": "2174:11:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 931,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2174:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 945,
												"initialValue": {
													"condition": {
														"id": 933,
														"name": "isToken0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "2189:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"id": 939,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "2235:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 940,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "2242:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 941,
																"name": "reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "2249:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 942,
																"name": "reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "2258:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 943,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2234:33:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_contract$_IERC20_$729_$_t_contract$_IERC20_$729_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(contract IERC20,contract IERC20,uint256,uint256)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2189:78:5",
													"trueExpression": {
														"components": [
															{
																"id": 934,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "2201:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 935,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "2208:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 936,
																"name": "reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "2215:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 937,
																"name": "reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "2224:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 938,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2200:33:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_contract$_IERC20_$729_$_t_contract$_IERC20_$729_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(contract IERC20,contract IERC20,uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_contract$_IERC20_$729_$_t_contract$_IERC20_$729_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(contract IERC20,contract IERC20,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2131:136:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 949,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2358:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2362:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2358:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 953,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2378:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CSAMM_$1197",
																		"typeString": "contract CSAMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CSAMM_$1197",
																		"typeString": "contract CSAMM"
																	}
																],
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2370:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 951,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2370:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2370:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 955,
															"name": "_amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "2385:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 946,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "2337:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2345:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "2337:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2337:58:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "2337:58:5"
											},
											{
												"assignments": [
													959
												],
												"declarations": [
													{
														"constant": false,
														"id": 959,
														"mutability": "mutable",
														"name": "amountIn",
														"nameLocation": "2411:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1013,
														"src": "2406:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 958,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2406:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 969,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 964,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2446:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CSAMM_$1197",
																			"typeString": "contract CSAMM"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CSAMM_$1197",
																			"typeString": "contract CSAMM"
																		}
																	],
																	"id": 963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2438:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 962,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2438:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2438:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 960,
																"name": "tokenIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "2420:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2428:9:5",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 686,
															"src": "2420:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2420:32:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 967,
														"name": "resIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "2455:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2420:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2406:54:5"
											},
											{
												"expression": {
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 970,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "2542:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 971,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "2555:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "393937",
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2566:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_997_by_1",
																			"typeString": "int_const 997"
																		},
																		"value": "997"
																	},
																	"src": "2555:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 974,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2554:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2571:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "2554:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2542:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "2542:33:5"
											},
											{
												"assignments": [
													980,
													982
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "res0",
														"nameLocation": "2634:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1013,
														"src": "2629:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 979,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2629:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 982,
														"mutability": "mutable",
														"name": "res1",
														"nameLocation": "2644:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1013,
														"src": "2639:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 981,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2639:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 999,
												"initialValue": {
													"condition": {
														"id": 983,
														"name": "isToken0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "2652:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 991,
																	"name": "resOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 932,
																	"src": "2700:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 992,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "2707:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2700:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 994,
																	"name": "resIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "2718:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 995,
																	"name": "_amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 892,
																	"src": "2724:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2718:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 997,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2699:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2652:82:5",
													"trueExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 984,
																	"name": "resIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "2664:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 985,
																	"name": "_amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 892,
																	"src": "2670:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2664:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 987,
																	"name": "resOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 932,
																	"src": "2681:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 988,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "2688:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2681:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 990,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2663:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2628:106:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1001,
															"name": "res0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "2753:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1002,
															"name": "res1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "2759:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1000,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "2745:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2745:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "2745:19:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1008,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2823:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2827:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2823:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1010,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "2834:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1005,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "2805:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2814:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "2805:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2805:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "2805:39:5"
											}
										]
									},
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "1614:229:5",
										"text": " @dev 代币交换函数\n @param _tokenIn 输入代币地址\n @param _amountIn 输入数量\n @return amountOut 实际输出数量\n交换的过程加入入参为 token0 5，则需要"
									},
									"functionSelector": "d004f0f7",
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "1858:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "_tokenIn",
												"nameLocation": "1871:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "1863:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1863:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "_amountIn",
												"nameLocation": "1885:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "1880:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1880:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:33:5"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1924:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "1919:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1919:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1918:16:5"
									},
									"scope": 1197,
									"src": "1849:1003:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "3126:1282:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1027,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3207:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3211:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3207:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1031,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3227:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CSAMM_$1197",
																		"typeString": "contract CSAMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CSAMM_$1197",
																		"typeString": "contract CSAMM"
																	}
																],
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3219:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1029,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3219:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3219:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1033,
															"name": "_amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "3234:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1024,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "3187:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3194:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "3187:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3187:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "3187:56:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1039,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3274:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3278:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3274:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1043,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3294:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CSAMM_$1197",
																		"typeString": "contract CSAMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CSAMM_$1197",
																		"typeString": "contract CSAMM"
																	}
																],
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3286:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1041,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3286:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3286:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1045,
															"name": "_amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "3301:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1036,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "3254:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3261:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "3254:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3254:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "3254:56:5"
											},
											{
												"assignments": [
													1049
												],
												"declarations": [
													{
														"constant": false,
														"id": 1049,
														"mutability": "mutable",
														"name": "bal0",
														"nameLocation": "3353:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1125,
														"src": "3348:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1048,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3348:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1057,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1054,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3384:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CSAMM_$1197",
																		"typeString": "contract CSAMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CSAMM_$1197",
																		"typeString": "contract CSAMM"
																	}
																],
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3376:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1052,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3376:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3376:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1050,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "3359:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3366:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "3359:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3359:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3348:42:5"
											},
											{
												"assignments": [
													1059
												],
												"declarations": [
													{
														"constant": false,
														"id": 1059,
														"mutability": "mutable",
														"name": "bal1",
														"nameLocation": "3433:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1125,
														"src": "3428:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1058,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3428:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1067,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1064,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3464:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CSAMM_$1197",
																		"typeString": "contract CSAMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CSAMM_$1197",
																		"typeString": "contract CSAMM"
																	}
																],
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3456:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1062,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3456:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3456:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1060,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "3439:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3446:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "3439:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3439:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3428:42:5"
											},
											{
												"assignments": [
													1069
												],
												"declarations": [
													{
														"constant": false,
														"id": 1069,
														"mutability": "mutable",
														"name": "d0",
														"nameLocation": "3488:2:5",
														"nodeType": "VariableDeclaration",
														"scope": 1125,
														"src": "3483:7:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1068,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3483:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1073,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1070,
														"name": "bal0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "3492:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1071,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "3499:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3492:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3483:24:5"
											},
											{
												"assignments": [
													1075
												],
												"declarations": [
													{
														"constant": false,
														"id": 1075,
														"mutability": "mutable",
														"name": "d1",
														"nameLocation": "3523:2:5",
														"nodeType": "VariableDeclaration",
														"scope": 1125,
														"src": "3518:7:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1074,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3518:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1079,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1076,
														"name": "bal1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "3527:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1077,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "3533:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3527:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3518:23:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1080,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "4103:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4116:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4103:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1105,
													"nodeType": "Block",
													"src": "4210:77:5",
													"statements": [
														{
															"expression": {
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1090,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "4225:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1096,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1093,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1091,
																								"name": "d0",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1069,
																								"src": "4236:2:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 1092,
																								"name": "d1",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1075,
																								"src": "4239:2:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "4236:5:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1094,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "4235:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1095,
																					"name": "totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 800,
																					"src": "4243:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4235:19:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1097,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4234:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1100,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1098,
																					"name": "reserve0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 796,
																					"src": "4257:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1099,
																					"name": "reserve1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "4266:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4257:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1101,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4256:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4234:41:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4225:50:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1104,
															"nodeType": "ExpressionStatement",
															"src": "4225:50:5"
														}
													]
												},
												"id": 1106,
												"nodeType": "IfStatement",
												"src": "4100:187:5",
												"trueBody": {
													"id": 1089,
													"nodeType": "Block",
													"src": "4118:87:5",
													"statements": [
														{
															"expression": {
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1083,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "4177:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1084,
																		"name": "d0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "4186:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1085,
																		"name": "d1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1075,
																		"src": "4191:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4186:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4177:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1088,
															"nodeType": "ExpressionStatement",
															"src": "4177:16:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1108,
																"name": "shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "4307:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4315:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4307:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736861726573203d2030",
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4317:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37",
																"typeString": "literal_string \"shares = 0\""
															},
															"value": "shares = 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4e208da9c6252e844e3faafb4bce1ac6103358d48cc8ab07bbca5bb9ee4b2f37",
																"typeString": "literal_string \"shares = 0\""
															}
														],
														"id": 1107,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4299:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4299:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "4299:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1115,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4347:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4351:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4347:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1117,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "4359:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1114,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "4341:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4341:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "4341:25:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"name": "bal0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "4387:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1122,
															"name": "bal1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "4393:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1120,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "4379:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4379:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "4379:19:5"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "2858:181:5",
										"text": " @dev 添加流动性\n @param _amount0 存入的token0数量\n @param _amount1 存入的token1数量\n @return shares 获得的流动性份额"
									},
									"functionSelector": "9cd441da",
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "3054:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "_amount0",
												"nameLocation": "3072:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "3067:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3067:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "_amount1",
												"nameLocation": "3086:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "3081:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3081:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3066:29:5"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "3118:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "3113:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3113:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3112:13:5"
									},
									"scope": 1197,
									"src": "3045:1363:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "4667:1540:5",
										"statements": [
											{
												"expression": {
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1136,
														"name": "d0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "5756:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1137,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "5761:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1138,
																		"name": "_shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "5772:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5761:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1140,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5760:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1141,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "5783:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5760:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5756:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "5756:38:5"
											},
											{
												"expression": {
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1145,
														"name": "d1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "5805:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1146,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "5810:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1147,
																		"name": "_shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "5821:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5810:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1149,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5809:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1150,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "5832:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5809:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5805:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "5805:38:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1155,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5862:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5866:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5862:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1157,
															"name": "_shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "5874:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1154,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "5856:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5856:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "5856:26:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1161,
																"name": "reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "6003:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1162,
																"name": "d0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "6012:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6003:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1164,
																"name": "reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "6015:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1165,
																"name": "d1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "6025:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6015:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1160,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "5995:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5995:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "5995:33:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1169,
														"name": "d0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "6045:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6045:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1181,
												"nodeType": "IfStatement",
												"src": "6041:69:5",
												"trueBody": {
													"id": 1180,
													"nodeType": "Block",
													"src": "6052:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1175,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6083:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6087:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6083:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1177,
																		"name": "d0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "6095:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1172,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "6067:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6074:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 696,
																	"src": "6067:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6067:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1179,
															"nodeType": "ExpressionStatement",
															"src": "6067:31:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1182,
														"name": "d1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "6135:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6140:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6135:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1194,
												"nodeType": "IfStatement",
												"src": "6131:69:5",
												"trueBody": {
													"id": 1193,
													"nodeType": "Block",
													"src": "6142:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1188,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6173:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6177:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6173:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1190,
																		"name": "d1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "6185:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1185,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "6157:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6164:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 696,
																	"src": "6157:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6157:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1192,
															"nodeType": "ExpressionStatement",
															"src": "6157:31:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1127,
										"nodeType": "StructuredDocumentation",
										"src": "4420:168:5",
										"text": " @dev 移除流动性\n @param _shares 销毁的份额数量\n @return d0 返回的token0数量\n @return d1 返回的token1数量"
									},
									"functionSelector": "9c8f9f23",
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "4603:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "4624:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "4619:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4619:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:14:5"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "d0",
												"nameLocation": "4656:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "4651:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4651:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "d1",
												"nameLocation": "4664:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "4659:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4659:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4650:17:5"
									},
									"scope": 1197,
									"src": "4594:1613:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1198,
							"src": "171:6039:5",
							"usedErrors": [],
							"usedEvents": [
								887
							]
						}
					],
					"src": "33:6177:5"
				},
				"id": 5
			}
		}
	}
}