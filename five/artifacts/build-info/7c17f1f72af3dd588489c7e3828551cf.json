{
	"id": "7c17f1f72af3dd588489c7e3828551cf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"five/StakingRewards.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n/*\r\n一段时间的奖励=（当前每个token积累的奖励-上次奖励计算时候每个token积累的奖励） *余额\r\n将奖励累加到rewards数组中做记录\r\n由于以上阶段的奖励已经计算完，所以更新用户结算进度（每个token累计的奖励）\r\n更新 updateAt （更新rewards的时候做一次更新，重新设置奖励的时候进行一次更新，\r\n总之updateAt是作为下一次计算奖励的时间起点，如果当前操作重新计算了奖励指数（每token累计奖励）\r\n并且仍然处于一次奖励周期中则会更新其updateAt为当前时间，如果以及处于当前周期之外，\r\n则updateAt需要设置为finishAt，当再次设置奖励的时候notifyRewardAmount会先更新\r\n奖励指数，然后再设置updateAt为当前时间，总之每次重要操作之前都会重新计算奖励指数，将对应的奖励\r\n保存在rewards中，再更新时间，后续计算的就是下一段奖励指数，依次累加每一段奖励指数\r\n）\r\n*/\r\ncontract StakingRewards {\r\n    IERC20 public immutable stakingToken;\r\n    IERC20 public immutable rewardsToken;\r\n    \r\n    address public owner;\r\n    \r\n    // 时间相关参数\r\n    uint public duration;    // 奖励总持续时间（秒）\r\n    uint public finishAt;    // 奖励结束时间戳\r\n    uint public updatedAt;   // 最后更新时间戳\r\n    \r\n    // 奖励计算参数\r\n    uint public rewardRate;              // 每秒发放的奖励数量\r\n    uint public rewardPerTokenStored;     // 累计每Token奖励（精度1e18）\r\n    \r\n    // 用户状态\r\n    mapping(address => uint) public userRewardPerTokenPaid;  // 用户上次领取时的奖励状态\r\n    mapping(address => uint) public rewards;                 // 待领取奖励\r\n    mapping(address => uint) public balanceOf;               // 用户质押余额\r\n    uint public totalSupply;               // 总质押量\r\n\r\n    // 权限修饰器\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Not owner\");\r\n        _;\r\n    }\r\n\r\n    // 奖励更新修饰器（核心逻辑）\r\n    // 核心思想是在 质押和取回还有获取奖励之前，计算当前时间之前的全局奖励（每token累计多少奖励）\r\n    // 计算用户累计的奖励: \r\n    //      思路就是先更新当前时间之前的有效时间内的每个token累计多少奖励 ，然后 使用 （当前时间每个token累计奖励- 当前用户的记录的每个token累计奖励）* 当前用户的质押量+原始未提取的奖励\r\n    //      最后计算好了，再将当前的每个token累计奖励更新到对应的用户上\r\n    modifier updateReward(address _account) {\r\n        // 更新全局奖励状态（精度1e18）\r\n        rewardPerTokenStored = rewardPerToken();\r\n        updatedAt = lastTimeRewardApplicable();\r\n        \r\n        if (_account != address(0)) {\r\n            //计算用户应累积的奖励 = 质押量 × (当前全局奖励进度 - 用户上次进度) + 历史未提奖励\r\n            rewards[_account] = earned(_account);\r\n            // 更新用户奖励状态到最新\r\n            userRewardPerTokenPaid[_account] = rewardPerTokenStored;\r\n        }\r\n        _;\r\n    }\r\n\r\n    constructor(address _stakingToken, address _rewardsToken) {\r\n        owner = msg.sender;\r\n        stakingToken = IERC20(_stakingToken);\r\n        rewardsToken = IERC20(_rewardsToken);\r\n    }\r\n\r\n    // 设置奖励持续时间（仅上一周期结束后可调用）\r\n    function setRewardDuration(uint _duration) external onlyOwner {\r\n        require(finishAt < block.timestamp, \"Previous rewards not completed\");\r\n        duration = _duration;\r\n    }\r\n\r\n    // 设置奖励总量（核心管理函数）\r\n    // 设置奖励金额，重置奖励的持续时间\r\n    // updateReward(address(0)) 主要是为了记录设置之前的 每token的前一段时间积累的奖励 ，如果是第一次设置则为0\r\n    // 若奖励率=1代币/秒，时间差=100秒，总质押=100代币\r\n    // → 增量 = (1 * 100 * 1e18) / 100 = 1e18 → 每token累积1代币奖励\r\n    function notifyRewardAmount(uint _amount) external onlyOwner updateReward(address(0)) {\r\n        // 如果当前没有活跃奖励周期\r\n        if (block.timestamp >= finishAt) {\r\n            rewardRate = _amount / duration;\r\n        } else {\r\n            // 计算剩余奖励并合并新奖励\r\n            // 计算当前时间到结束时间还有多少奖励没有发放\r\n            uint remaining = (finishAt - block.timestamp) * rewardRate;\r\n            // 剩余奖励加上当前的奖励就是下一段时间的总奖励，除以持续时间就是下一段时间的奖励速率\r\n            rewardRate = (remaining + _amount) / duration;\r\n        }\r\n\r\n        require(rewardRate > 0, \"Reward rate zero\");\r\n        // 验证奖励代币余额充足\r\n        require(\r\n            rewardRate * duration <= rewardsToken.balanceOf(address(this)),\r\n            \"Insufficient reward tokens\"\r\n        );\r\n        //更新结束时间\r\n        finishAt = block.timestamp + duration;\r\n        //更新 update时间\r\n        updatedAt = block.timestamp;\r\n    }\r\n\r\n    // 质押函数（需提前approve）\r\n    // 质押的时候会造成总的累计 totalSupply的变化，需要记录变化之前的进度\r\n    function stake(uint _amount) external updateReward(msg.sender) {\r\n        require(_amount > 0, \"Amount zero\");\r\n        balanceOf[msg.sender] += _amount;\r\n        totalSupply += _amount;\r\n        // 转移代币需检查allowance\r\n        stakingToken.transferFrom(msg.sender, address(this), _amount);\r\n    }\r\n\r\n    // 解除质押\r\n    function withdraw(uint _amount) external updateReward(msg.sender) {\r\n        require(_amount > 0, \"Amount zero\");\r\n        balanceOf[msg.sender] -= _amount;\r\n        totalSupply -= _amount;\r\n        stakingToken.transfer(msg.sender, _amount);\r\n    }\r\n\r\n    // 领取奖励\r\n    function getReward() external updateReward(msg.sender) {\r\n        uint reward = rewards[msg.sender];\r\n        if (reward > 0) {\r\n            rewards[msg.sender] = 0;\r\n            rewardsToken.transfer(msg.sender, reward);\r\n        }\r\n    }\r\n\r\n    // 计算有效结束时间\r\n    function lastTimeRewardApplicable() public view returns (uint) {\r\n        return block.timestamp < finishAt ? block.timestamp : finishAt;\r\n    }\r\n\r\n    // 计算当前每Token奖励（精度1e18）\r\n    function rewardPerToken() public view returns (uint) {\r\n        if (totalSupply == 0) return rewardPerTokenStored;\r\n        return rewardPerTokenStored + \r\n            (rewardRate * \r\n            (lastTimeRewardApplicable() - updatedAt) // 时间差（秒）\r\n            * 1e18) // 精度放大\r\n            / totalSupply;  // 按质押量均分\r\n    }\r\n\r\n    // 计算用户应得奖励\r\n    function earned(address _account) public view returns (uint) {\r\n        // 应得奖励 = 质押量 × (当前全局奖励进度 - 用户上次进度) + 历史未提奖励\r\n        return (balanceOf[_account] * \r\n            (rewardPerToken() //如果是在 modifier updateReward 中，其实前一步已经调用了rewardPerToken更新了\r\n            - \r\n            userRewardPerTokenPaid[_account])) \r\n            / 1e18 \r\n            + rewards[_account];\r\n    }\r\n\r\n    // 最小值工具函数\r\n    function _min(uint x, uint y) private pure returns (uint) {\r\n        return x < y ? x : y;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"five/StakingRewards.sol": {
				"StakingRewards": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardsToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finishAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								}
							],
							"name": "setRewardDuration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updatedAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"five/StakingRewards.sol\":1128:7507  contract StakingRewards {... */\n  mstore(0x40, 0xc0)\n    /* \"five/StakingRewards.sol\":3325:3514  constructor(address _stakingToken, address _rewardsToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"five/StakingRewards.sol\":3394:3399  owner */\n  0x00\n    /* \"five/StakingRewards.sol\":3394:3412  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"five/StakingRewards.sol\":3402:3412  msg.sender */\n  caller\n    /* \"five/StakingRewards.sol\":3394:3412  owner = msg.sender */\n  or\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"five/StakingRewards.sol\":3423:3459  stakingToken = IERC20(_stakingToken) */\n  swap2\n  dup3\n  and\n  0x80\n  mstore\n    /* \"five/StakingRewards.sol\":3470:3506  rewardsToken = IERC20(_rewardsToken) */\n  and\n  0xa0\n  mstore\n    /* \"five/StakingRewards.sol\":1128:7507  contract StakingRewards {... */\n  jump(tag_8)\n    /* \"#utility.yul\":14:191   */\ntag_7:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  0x00\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_10:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  0x00\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_12\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  0x00\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_12:\n    /* \"#utility.yul\":375:415   */\n  tag_13\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_7\n  jump\t// in\ntag_13:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_14\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_7\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\ntag_8:\n    /* \"five/StakingRewards.sol\":1128:7507  contract StakingRewards {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n  0x00\n  assignImmutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"five/StakingRewards.sol\":1128:7507  contract StakingRewards {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7519ab50\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa694fc3a\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc0ed00c9\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xcd3daf9d\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdf136d65\n      eq\n      tag_22\n      jumpi\n      revert(0x00, 0x00)\n    tag_24:\n      dup1\n      0x7519ab50\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7b0a47ee\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x80faa57d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8b876347\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      revert(0x00, 0x00)\n    tag_23:\n      dup1\n      0x3c6b16ab\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x3c6b16ab\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3d18b912\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x67d3b488\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_12\n      jumpi\n      revert(0x00, 0x00)\n    tag_25:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"five/StakingRewards.sol\":6903:7369  function earned(address _account) public view returns (uint) {... */\n    tag_3:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":451:476   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"five/StakingRewards.sol\":6903:7369  function earned(address _account) public view returns (uint) {... */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"five/StakingRewards.sol\":1803:1842  mapping(address => uint) public rewards */\n    tag_4:\n      tag_26\n      tag_33\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_33:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"five/StakingRewards.sol\":1311:1331  uint public duration */\n    tag_5:\n      tag_26\n      sload(0x01)\n      dup2\n      jump\n        /* \"five/StakingRewards.sol\":1968:1991  uint public totalSupply */\n    tag_6:\n      tag_26\n      sload(0x09)\n      dup2\n      jump\n        /* \"five/StakingRewards.sol\":5748:5997  function withdraw(uint _amount) external updateReward(msg.sender) {... */\n    tag_7:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"five/StakingRewards.sol\":4195:5258  function notifyRewardAmount(uint _amount) external onlyOwner updateReward(address(0)) {... */\n    tag_8:\n      tag_42\n      tag_47\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n        /* \"five/StakingRewards.sol\":6026:6265  function getReward() external updateReward(msg.sender) {... */\n    tag_9:\n      tag_42\n      tag_50\n      jump\t// in\n        /* \"five/StakingRewards.sol\":1375:1395  uint public finishAt */\n    tag_10:\n      tag_26\n      sload(0x02)\n      dup2\n      jump\n        /* \"five/StakingRewards.sol\":1884:1925  mapping(address => uint) public balanceOf */\n    tag_11:\n      tag_26\n      tag_55\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_55:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"five/StakingRewards.sol\":1159:1195  IERC20 public immutable stakingToken */\n    tag_12:\n      tag_58\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n      dup2\n      jump\n    tag_58:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":850:882   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":832:883   */\n      dup2\n      mstore\n        /* \"#utility.yul\":820:822   */\n      0x20\n        /* \"#utility.yul\":805:823   */\n      add\n        /* \"five/StakingRewards.sol\":1159:1195  IERC20 public immutable stakingToken */\n      tag_30\n        /* \"#utility.yul\":672:889   */\n      jump\n        /* \"five/StakingRewards.sol\":1430:1451  uint public updatedAt */\n    tag_13:\n      tag_26\n      sload(0x03)\n      dup2\n      jump\n        /* \"five/StakingRewards.sol\":1518:1540  uint public rewardRate */\n    tag_14:\n      tag_26\n      sload(0x04)\n      dup2\n      jump\n        /* \"five/StakingRewards.sol\":6306:6450  function lastTimeRewardApplicable() public view returns (uint) {... */\n    tag_15:\n      tag_26\n      tag_69\n      jump\t// in\n        /* \"five/StakingRewards.sol\":1701:1755  mapping(address => uint) public userRewardPerTokenPaid */\n    tag_16:\n      tag_26\n      tag_72\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_72:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"five/StakingRewards.sol\":1251:1271  address public owner */\n    tag_17:\n      sload(0x00)\n      tag_58\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"five/StakingRewards.sol\":5411:5719  function stake(uint _amount) external updateReward(msg.sender) {... */\n    tag_18:\n      tag_42\n      tag_80\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"five/StakingRewards.sol\":3594:3775  function setRewardDuration(uint _duration) external onlyOwner {... */\n    tag_19:\n      tag_42\n      tag_83\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"five/StakingRewards.sol\":6509:6862  function rewardPerToken() public view returns (uint) {... */\n    tag_20:\n      tag_26\n      tag_86\n      jump\t// in\n        /* \"five/StakingRewards.sol\":1202:1238  IERC20 public immutable rewardsToken */\n    tag_21:\n      tag_58\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n      dup2\n      jump\n        /* \"five/StakingRewards.sol\":1591:1623  uint public rewardPerTokenStored */\n    tag_22:\n      tag_26\n      sload(0x05)\n      dup2\n      jump\n        /* \"five/StakingRewards.sol\":6903:7369  function earned(address _account) public view returns (uint) {... */\n    tag_29:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/StakingRewards.sol\":7344:7361  rewards[_account] */\n      dup2\n      and\n        /* \"five/StakingRewards.sol\":6958:6962  uint */\n      0x00\n        /* \"five/StakingRewards.sol\":7344:7361  rewards[_account] */\n      swap1\n      dup2\n      mstore\n        /* \"five/StakingRewards.sol\":7344:7351  rewards */\n      0x07\n        /* \"five/StakingRewards.sol\":7344:7361  rewards[_account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"five/StakingRewards.sol\":7272:7294  userRewardPerTokenPaid */\n      0x06\n        /* \"five/StakingRewards.sol\":7272:7304  userRewardPerTokenPaid[_account] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n      sload\n        /* \"five/StakingRewards.sol\":7323:7327  1e18 */\n      0x0de0b6b3a7640000\n      swap1\n        /* \"five/StakingRewards.sol\":7129:7145  rewardPerToken() */\n      tag_95\n        /* \"five/StakingRewards.sol\":7129:7143  rewardPerToken */\n      tag_86\n        /* \"five/StakingRewards.sol\":7129:7145  rewardPerToken() */\n      jump\t// in\n    tag_95:\n        /* \"five/StakingRewards.sol\":7129:7304  rewardPerToken() //如果是在 modifier updateReward 中，其实前一步已经调用了rewardPerToken更新了... */\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/StakingRewards.sol\":7092:7111  balanceOf[_account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"five/StakingRewards.sol\":7092:7101  balanceOf */\n      0x08\n        /* \"five/StakingRewards.sol\":7092:7111  balanceOf[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"five/StakingRewards.sol\":7092:7305  balanceOf[_account] * ... */\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"five/StakingRewards.sol\":7091:7327  (balanceOf[_account] * ... */\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"five/StakingRewards.sol\":7091:7361  (balanceOf[_account] * ... */\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"five/StakingRewards.sol\":7084:7361  return (balanceOf[_account] * ... */\n      swap3\n        /* \"five/StakingRewards.sol\":6903:7369  function earned(address _account) public view returns (uint) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"five/StakingRewards.sol\":5748:5997  function withdraw(uint _amount) external updateReward(msg.sender) {... */\n    tag_45:\n        /* \"five/StakingRewards.sol\":5802:5812  msg.sender */\n      caller\n        /* \"five/StakingRewards.sol\":2871:2887  rewardPerToken() */\n      tag_105\n        /* \"five/StakingRewards.sol\":2871:2885  rewardPerToken */\n      tag_86\n        /* \"five/StakingRewards.sol\":2871:2887  rewardPerToken() */\n      jump\t// in\n    tag_105:\n        /* \"five/StakingRewards.sol\":2848:2868  rewardPerTokenStored */\n      0x05\n        /* \"five/StakingRewards.sol\":2848:2887  rewardPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"five/StakingRewards.sol\":2910:2936  lastTimeRewardApplicable() */\n      tag_106\n        /* \"five/StakingRewards.sol\":2910:2934  lastTimeRewardApplicable */\n      tag_69\n        /* \"five/StakingRewards.sol\":2910:2936  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_106:\n        /* \"five/StakingRewards.sol\":2898:2907  updatedAt */\n      0x03\n        /* \"five/StakingRewards.sol\":2898:2936  updatedAt = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/StakingRewards.sol\":2961:2983  _account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"five/StakingRewards.sol\":2957:3298  if (_account != address(0)) {... */\n      tag_107\n      jumpi\n        /* \"five/StakingRewards.sol\":3150:3166  earned(_account) */\n      tag_108\n        /* \"five/StakingRewards.sol\":3157:3165  _account */\n      dup2\n        /* \"five/StakingRewards.sol\":3150:3156  earned */\n      tag_29\n        /* \"five/StakingRewards.sol\":3150:3166  earned(_account) */\n      jump\t// in\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/StakingRewards.sol\":3130:3147  rewards[_account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"five/StakingRewards.sol\":3130:3137  rewards */\n      0x07\n        /* \"five/StakingRewards.sol\":3130:3147  rewards[_account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"five/StakingRewards.sol\":3130:3166  rewards[_account] = earned(_account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"five/StakingRewards.sol\":3266:3286  rewardPerTokenStored */\n      sload(0x05)\n        /* \"five/StakingRewards.sol\":3231:3253  userRewardPerTokenPaid */\n      0x06\n        /* \"five/StakingRewards.sol\":3231:3263  userRewardPerTokenPaid[_account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"five/StakingRewards.sol\":3231:3286  userRewardPerTokenPaid[_account] = rewardPerTokenStored */\n      sstore\n        /* \"five/StakingRewards.sol\":2957:3298  if (_account != address(0)) {... */\n    tag_107:\n        /* \"five/StakingRewards.sol\":5843:5844  0 */\n      0x00\n        /* \"five/StakingRewards.sol\":5833:5840  _amount */\n      dup3\n        /* \"five/StakingRewards.sol\":5833:5844  _amount > 0 */\n      gt\n        /* \"five/StakingRewards.sol\":5825:5860  require(_amount > 0, \"Amount zero\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2094:2096   */\n      0x20\n        /* \"five/StakingRewards.sol\":5825:5860  require(_amount > 0, \"Amount zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2076:2097   */\n      mstore\n        /* \"#utility.yul\":2133:2135   */\n      0x0b\n        /* \"#utility.yul\":2113:2131   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2106:2136   */\n      mstore\n      shl(0xa8, 0x416d6f756e74207a65726f)\n        /* \"#utility.yul\":2152:2170   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2145:2186   */\n      mstore\n        /* \"#utility.yul\":2203:2221   */\n      0x64\n      add\n        /* \"five/StakingRewards.sol\":5825:5860  require(_amount > 0, \"Amount zero\") */\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"five/StakingRewards.sol\":5881:5891  msg.sender */\n      caller\n        /* \"five/StakingRewards.sol\":5871:5892  balanceOf[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"five/StakingRewards.sol\":5871:5880  balanceOf */\n      0x08\n        /* \"five/StakingRewards.sol\":5871:5892  balanceOf[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"five/StakingRewards.sol\":5871:5903  balanceOf[msg.sender] -= _amount */\n      dup1\n      sload\n        /* \"five/StakingRewards.sol\":5896:5903  _amount */\n      dup5\n      swap3\n        /* \"five/StakingRewards.sol\":5871:5892  balanceOf[msg.sender] */\n      swap1\n        /* \"five/StakingRewards.sol\":5871:5903  balanceOf[msg.sender] -= _amount */\n      tag_113\n      swap1\n        /* \"five/StakingRewards.sol\":5896:5903  _amount */\n      dup5\n      swap1\n        /* \"five/StakingRewards.sol\":5871:5903  balanceOf[msg.sender] -= _amount */\n      tag_97\n      jump\t// in\n    tag_113:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"five/StakingRewards.sol\":5929:5936  _amount */\n      dup2\n        /* \"five/StakingRewards.sol\":5914:5925  totalSupply */\n      0x09\n      0x00\n        /* \"five/StakingRewards.sol\":5914:5936  totalSupply -= _amount */\n      dup3\n      dup3\n      sload\n      tag_114\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_114:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"five/StakingRewards.sol\":5947:5989  stakingToken.transfer(msg.sender, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"five/StakingRewards.sol\":5969:5979  msg.sender */\n      caller\n        /* \"five/StakingRewards.sol\":5947:5989  stakingToken.transfer(msg.sender, _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2406:2457   */\n      mstore\n        /* \"#utility.yul\":2473:2491   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2466:2500   */\n      dup4\n      swap1\n      mstore\n        /* \"five/StakingRewards.sol\":5947:5959  stakingToken */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/StakingRewards.sol\":5947:5968  stakingToken.transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2379:2397   */\n      0x44\n      add\n        /* \"five/StakingRewards.sol\":5947:5989  stakingToken.transfer(msg.sender, _amount) */\n    tag_115:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      pop\n        /* \"five/StakingRewards.sol\":5748:5997  function withdraw(uint _amount) external updateReward(msg.sender) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"five/StakingRewards.sol\":4195:5258  function notifyRewardAmount(uint _amount) external onlyOwner updateReward(address(0)) {... */\n    tag_48:\n        /* \"five/StakingRewards.sol\":2108:2113  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"five/StakingRewards.sol\":2094:2104  msg.sender */\n      caller\n        /* \"five/StakingRewards.sol\":2094:2113  msg.sender == owner */\n      eq\n        /* \"five/StakingRewards.sol\":2086:2127  require(msg.sender == owner, \"Not owner\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2995:2997   */\n      0x20\n        /* \"five/StakingRewards.sol\":2086:2127  require(msg.sender == owner, \"Not owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2977:2998   */\n      mstore\n        /* \"#utility.yul\":3034:3035   */\n      0x09\n        /* \"#utility.yul\":3014:3032   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3007:3036   */\n      mstore\n      shl(0xb9, 0x2737ba1037bbb732b9)\n        /* \"#utility.yul\":3052:3070   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3045:3084   */\n      mstore\n        /* \"#utility.yul\":3101:3119   */\n      0x64\n      add\n        /* \"five/StakingRewards.sol\":2086:2127  require(msg.sender == owner, \"Not owner\") */\n      tag_111\n        /* \"#utility.yul\":2793:3125   */\n      jump\n        /* \"five/StakingRewards.sol\":2086:2127  require(msg.sender == owner, \"Not owner\") */\n    tag_122:\n        /* \"five/StakingRewards.sol\":4277:4278  0 */\n      0x00\n        /* \"five/StakingRewards.sol\":2871:2887  rewardPerToken() */\n      tag_126\n        /* \"five/StakingRewards.sol\":2871:2885  rewardPerToken */\n      tag_86\n        /* \"five/StakingRewards.sol\":2871:2887  rewardPerToken() */\n      jump\t// in\n    tag_126:\n        /* \"five/StakingRewards.sol\":2848:2868  rewardPerTokenStored */\n      0x05\n        /* \"five/StakingRewards.sol\":2848:2887  rewardPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"five/StakingRewards.sol\":2910:2936  lastTimeRewardApplicable() */\n      tag_127\n        /* \"five/StakingRewards.sol\":2910:2934  lastTimeRewardApplicable */\n      tag_69\n        /* \"five/StakingRewards.sol\":2910:2936  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_127:\n        /* \"five/StakingRewards.sol\":2898:2907  updatedAt */\n      0x03\n        /* \"five/StakingRewards.sol\":2898:2936  updatedAt = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/StakingRewards.sol\":2961:2983  _account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"five/StakingRewards.sol\":2957:3298  if (_account != address(0)) {... */\n      tag_128\n      jumpi\n        /* \"five/StakingRewards.sol\":3150:3166  earned(_account) */\n      tag_129\n        /* \"five/StakingRewards.sol\":3157:3165  _account */\n      dup2\n        /* \"five/StakingRewards.sol\":3150:3156  earned */\n      tag_29\n        /* \"five/StakingRewards.sol\":3150:3166  earned(_account) */\n      jump\t// in\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/StakingRewards.sol\":3130:3147  rewards[_account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"five/StakingRewards.sol\":3130:3137  rewards */\n      0x07\n        /* \"five/StakingRewards.sol\":3130:3147  rewards[_account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"five/StakingRewards.sol\":3130:3166  rewards[_account] = earned(_account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"five/StakingRewards.sol\":3266:3286  rewardPerTokenStored */\n      sload(0x05)\n        /* \"five/StakingRewards.sol\":3231:3253  userRewardPerTokenPaid */\n      0x06\n        /* \"five/StakingRewards.sol\":3231:3263  userRewardPerTokenPaid[_account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"five/StakingRewards.sol\":3231:3286  userRewardPerTokenPaid[_account] = rewardPerTokenStored */\n      sstore\n        /* \"five/StakingRewards.sol\":2957:3298  if (_account != address(0)) {... */\n    tag_128:\n        /* \"five/StakingRewards.sol\":4364:4372  finishAt */\n      sload(0x02)\n        /* \"five/StakingRewards.sol\":4345:4360  block.timestamp */\n      timestamp\n        /* \"five/StakingRewards.sol\":4345:4372  block.timestamp >= finishAt */\n      lt\n        /* \"five/StakingRewards.sol\":4341:4856  if (block.timestamp >= finishAt) {... */\n      tag_131\n      jumpi\n        /* \"five/StakingRewards.sol\":4412:4420  duration */\n      sload(0x01)\n        /* \"five/StakingRewards.sol\":4402:4420  _amount / duration */\n      tag_132\n      swap1\n        /* \"five/StakingRewards.sol\":4402:4409  _amount */\n      dup4\n        /* \"five/StakingRewards.sol\":4402:4420  _amount / duration */\n      tag_101\n      jump\t// in\n    tag_132:\n        /* \"five/StakingRewards.sol\":4389:4399  rewardRate */\n      0x04\n        /* \"five/StakingRewards.sol\":4389:4420  rewardRate = _amount / duration */\n      sstore\n        /* \"five/StakingRewards.sol\":4341:4856  if (block.timestamp >= finishAt) {... */\n      jump(tag_133)\n    tag_131:\n        /* \"five/StakingRewards.sol\":4586:4600  uint remaining */\n      0x00\n        /* \"five/StakingRewards.sol\":4634:4644  rewardRate */\n      sload(0x04)\n        /* \"five/StakingRewards.sol\":4615:4630  block.timestamp */\n      timestamp\n        /* \"five/StakingRewards.sol\":4604:4612  finishAt */\n      sload(0x02)\n        /* \"five/StakingRewards.sol\":4604:4630  finishAt - block.timestamp */\n      tag_134\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_134:\n        /* \"five/StakingRewards.sol\":4603:4644  (finishAt - block.timestamp) * rewardRate */\n      tag_135\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_135:\n        /* \"five/StakingRewards.sol\":4836:4844  duration */\n      sload(0x01)\n        /* \"five/StakingRewards.sol\":4586:4644  uint remaining = (finishAt - block.timestamp) * rewardRate */\n      swap1\n      swap2\n      pop\n        /* \"five/StakingRewards.sol\":4813:4832  remaining + _amount */\n      tag_136\n        /* \"five/StakingRewards.sol\":4825:4832  _amount */\n      dup5\n        /* \"five/StakingRewards.sol\":4586:4644  uint remaining = (finishAt - block.timestamp) * rewardRate */\n      dup4\n        /* \"five/StakingRewards.sol\":4813:4832  remaining + _amount */\n      tag_103\n      jump\t// in\n    tag_136:\n        /* \"five/StakingRewards.sol\":4812:4844  (remaining + _amount) / duration */\n      tag_137\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_137:\n        /* \"five/StakingRewards.sol\":4799:4809  rewardRate */\n      0x04\n        /* \"five/StakingRewards.sol\":4799:4844  rewardRate = (remaining + _amount) / duration */\n      sstore\n      pop\n        /* \"five/StakingRewards.sol\":4341:4856  if (block.timestamp >= finishAt) {... */\n    tag_133:\n        /* \"five/StakingRewards.sol\":4889:4890  0 */\n      0x00\n        /* \"five/StakingRewards.sol\":4876:4886  rewardRate */\n      sload(0x04)\n        /* \"five/StakingRewards.sol\":4876:4890  rewardRate > 0 */\n      gt\n        /* \"five/StakingRewards.sol\":4868:4911  require(rewardRate > 0, \"Reward rate zero\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3332:3334   */\n      0x20\n        /* \"five/StakingRewards.sol\":4868:4911  require(rewardRate > 0, \"Reward rate zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3314:3335   */\n      mstore\n        /* \"#utility.yul\":3371:3373   */\n      0x10\n        /* \"#utility.yul\":3351:3369   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3344:3374   */\n      mstore\n      shl(0x80, 0x5265776172642072617465207a65726f)\n        /* \"#utility.yul\":3390:3408   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3383:3429   */\n      mstore\n        /* \"#utility.yul\":3446:3464   */\n      0x64\n      add\n        /* \"five/StakingRewards.sol\":4868:4911  require(rewardRate > 0, \"Reward rate zero\") */\n      tag_111\n        /* \"#utility.yul\":3130:3470   */\n      jump\n        /* \"five/StakingRewards.sol\":4868:4911  require(rewardRate > 0, \"Reward rate zero\") */\n    tag_138:\n        /* \"five/StakingRewards.sol\":5012:5049  rewardsToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"five/StakingRewards.sol\":5043:5047  this */\n      address\n        /* \"five/StakingRewards.sol\":5012:5049  rewardsToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":832:883   */\n      mstore\n        /* \"five/StakingRewards.sol\":5012:5024  rewardsToken */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/StakingRewards.sol\":5012:5034  rewardsToken.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":805:823   */\n      0x24\n      add\n        /* \"five/StakingRewards.sol\":5012:5049  rewardsToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"five/StakingRewards.sol\":5000:5008  duration */\n      sload(0x01)\n        /* \"five/StakingRewards.sol\":4987:4997  rewardRate */\n      sload(0x04)\n        /* \"five/StakingRewards.sol\":4987:5008  rewardRate * duration */\n      tag_146\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_146:\n        /* \"five/StakingRewards.sol\":4987:5049  rewardRate * duration <= rewardsToken.balanceOf(address(this)) */\n      gt\n      iszero\n        /* \"five/StakingRewards.sol\":4965:5103  require(... */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3866:3868   */\n      0x20\n        /* \"five/StakingRewards.sol\":4965:5103  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3848:3869   */\n      mstore\n        /* \"#utility.yul\":3905:3907   */\n      0x1a\n        /* \"#utility.yul\":3885:3903   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3878:3908   */\n      mstore\n        /* \"#utility.yul\":3944:3972   */\n      0x496e73756666696369656e742072657761726420746f6b656e73000000000000\n        /* \"#utility.yul\":3924:3942   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3917:3973   */\n      mstore\n        /* \"#utility.yul\":3990:4008   */\n      0x64\n      add\n        /* \"five/StakingRewards.sol\":4965:5103  require(... */\n      tag_111\n        /* \"#utility.yul\":3664:4014   */\n      jump\n        /* \"five/StakingRewards.sol\":4965:5103  require(... */\n    tag_147:\n        /* \"five/StakingRewards.sol\":5173:5181  duration */\n      sload(0x01)\n        /* \"five/StakingRewards.sol\":5155:5181  block.timestamp + duration */\n      tag_150\n      swap1\n        /* \"five/StakingRewards.sol\":5155:5170  block.timestamp */\n      timestamp\n        /* \"five/StakingRewards.sol\":5155:5181  block.timestamp + duration */\n      tag_103\n      jump\t// in\n    tag_150:\n        /* \"five/StakingRewards.sol\":5144:5152  finishAt */\n      0x02\n        /* \"five/StakingRewards.sol\":5144:5181  finishAt = block.timestamp + duration */\n      sstore\n      pop\n      pop\n        /* \"five/StakingRewards.sol\":5235:5250  block.timestamp */\n      timestamp\n        /* \"five/StakingRewards.sol\":5223:5232  updatedAt */\n      0x03\n        /* \"five/StakingRewards.sol\":5223:5250  updatedAt = block.timestamp */\n      sstore\n        /* \"five/StakingRewards.sol\":4195:5258  function notifyRewardAmount(uint _amount) external onlyOwner updateReward(address(0)) {... */\n      jump\t// out\n        /* \"five/StakingRewards.sol\":6026:6265  function getReward() external updateReward(msg.sender) {... */\n    tag_50:\n        /* \"five/StakingRewards.sol\":6069:6079  msg.sender */\n      caller\n        /* \"five/StakingRewards.sol\":2871:2887  rewardPerToken() */\n      tag_152\n        /* \"five/StakingRewards.sol\":2871:2885  rewardPerToken */\n      tag_86\n        /* \"five/StakingRewards.sol\":2871:2887  rewardPerToken() */\n      jump\t// in\n    tag_152:\n        /* \"five/StakingRewards.sol\":2848:2868  rewardPerTokenStored */\n      0x05\n        /* \"five/StakingRewards.sol\":2848:2887  rewardPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"five/StakingRewards.sol\":2910:2936  lastTimeRewardApplicable() */\n      tag_153\n        /* \"five/StakingRewards.sol\":2910:2934  lastTimeRewardApplicable */\n      tag_69\n        /* \"five/StakingRewards.sol\":2910:2936  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_153:\n        /* \"five/StakingRewards.sol\":2898:2907  updatedAt */\n      0x03\n        /* \"five/StakingRewards.sol\":2898:2936  updatedAt = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/StakingRewards.sol\":2961:2983  _account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"five/StakingRewards.sol\":2957:3298  if (_account != address(0)) {... */\n      tag_154\n      jumpi\n        /* \"five/StakingRewards.sol\":3150:3166  earned(_account) */\n      tag_155\n        /* \"five/StakingRewards.sol\":3157:3165  _account */\n      dup2\n        /* \"five/StakingRewards.sol\":3150:3156  earned */\n      tag_29\n        /* \"five/StakingRewards.sol\":3150:3166  earned(_account) */\n      jump\t// in\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/StakingRewards.sol\":3130:3147  rewards[_account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"five/StakingRewards.sol\":3130:3137  rewards */\n      0x07\n        /* \"five/StakingRewards.sol\":3130:3147  rewards[_account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"five/StakingRewards.sol\":3130:3166  rewards[_account] = earned(_account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"five/StakingRewards.sol\":3266:3286  rewardPerTokenStored */\n      sload(0x05)\n        /* \"five/StakingRewards.sol\":3231:3253  userRewardPerTokenPaid */\n      0x06\n        /* \"five/StakingRewards.sol\":3231:3263  userRewardPerTokenPaid[_account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"five/StakingRewards.sol\":3231:3286  userRewardPerTokenPaid[_account] = rewardPerTokenStored */\n      sstore\n        /* \"five/StakingRewards.sol\":2957:3298  if (_account != address(0)) {... */\n    tag_154:\n        /* \"five/StakingRewards.sol\":6114:6124  msg.sender */\n      caller\n        /* \"five/StakingRewards.sol\":6092:6103  uint reward */\n      0x00\n        /* \"five/StakingRewards.sol\":6106:6125  rewards[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"five/StakingRewards.sol\":6106:6113  rewards */\n      0x07\n        /* \"five/StakingRewards.sol\":6106:6125  rewards[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"five/StakingRewards.sol\":6140:6150  reward > 0 */\n      dup1\n      iszero\n        /* \"five/StakingRewards.sol\":6136:6258  if (reward > 0) {... */\n      tag_157\n      jumpi\n        /* \"five/StakingRewards.sol\":6175:6185  msg.sender */\n      caller\n        /* \"five/StakingRewards.sol\":6189:6190  0 */\n      0x00\n        /* \"five/StakingRewards.sol\":6167:6186  rewards[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"five/StakingRewards.sol\":6167:6174  rewards */\n      0x07\n        /* \"five/StakingRewards.sol\":6167:6186  rewards[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"five/StakingRewards.sol\":6167:6190  rewards[msg.sender] = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"five/StakingRewards.sol\":6205:6246  rewardsToken.transfer(msg.sender, reward) */\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2406:2457   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2473:2491   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2466:2500   */\n      dup3\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/StakingRewards.sol\":6205:6217  rewardsToken */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n        /* \"five/StakingRewards.sol\":6205:6226  rewardsToken.transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2379:2397   */\n      0x44\n      add\n        /* \"five/StakingRewards.sol\":6205:6246  rewardsToken.transfer(msg.sender, reward) */\n      tag_115\n        /* \"#utility.yul\":2232:2506   */\n      jump\n        /* \"five/StakingRewards.sol\":6136:6258  if (reward > 0) {... */\n    tag_157:\n        /* \"five/StakingRewards.sol\":6081:6265  {... */\n      pop\n        /* \"five/StakingRewards.sol\":6026:6265  function getReward() external updateReward(msg.sender) {... */\n      pop\n      jump\t// out\n        /* \"five/StakingRewards.sol\":6306:6450  function lastTimeRewardApplicable() public view returns (uint) {... */\n    tag_69:\n        /* \"five/StakingRewards.sol\":6363:6367  uint */\n      0x00\n        /* \"five/StakingRewards.sol\":6405:6413  finishAt */\n      sload(0x02)\n        /* \"five/StakingRewards.sol\":6387:6402  block.timestamp */\n      timestamp\n        /* \"five/StakingRewards.sol\":6387:6413  block.timestamp < finishAt */\n      lt\n        /* \"five/StakingRewards.sol\":6387:6442  block.timestamp < finishAt ? block.timestamp : finishAt */\n      tag_163\n      jumpi\n      pop\n        /* \"five/StakingRewards.sol\":6434:6442  finishAt */\n      sload(0x02)\n      swap1\n        /* \"five/StakingRewards.sol\":6306:6450  function lastTimeRewardApplicable() public view returns (uint) {... */\n      jump\t// out\n        /* \"five/StakingRewards.sol\":6387:6442  block.timestamp < finishAt ? block.timestamp : finishAt */\n    tag_163:\n        /* \"five/StakingRewards.sol\":6416:6431  block.timestamp */\n      timestamp\n        /* \"five/StakingRewards.sol\":6387:6442  block.timestamp < finishAt ? block.timestamp : finishAt */\n    tag_164:\n        /* \"five/StakingRewards.sol\":6380:6442  return block.timestamp < finishAt ? block.timestamp : finishAt */\n      swap1\n      pop\n        /* \"five/StakingRewards.sol\":6306:6450  function lastTimeRewardApplicable() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"five/StakingRewards.sol\":5411:5719  function stake(uint _amount) external updateReward(msg.sender) {... */\n    tag_81:\n        /* \"five/StakingRewards.sol\":5462:5472  msg.sender */\n      caller\n        /* \"five/StakingRewards.sol\":2871:2887  rewardPerToken() */\n      tag_166\n        /* \"five/StakingRewards.sol\":2871:2885  rewardPerToken */\n      tag_86\n        /* \"five/StakingRewards.sol\":2871:2887  rewardPerToken() */\n      jump\t// in\n    tag_166:\n        /* \"five/StakingRewards.sol\":2848:2868  rewardPerTokenStored */\n      0x05\n        /* \"five/StakingRewards.sol\":2848:2887  rewardPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"five/StakingRewards.sol\":2910:2936  lastTimeRewardApplicable() */\n      tag_167\n        /* \"five/StakingRewards.sol\":2910:2934  lastTimeRewardApplicable */\n      tag_69\n        /* \"five/StakingRewards.sol\":2910:2936  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_167:\n        /* \"five/StakingRewards.sol\":2898:2907  updatedAt */\n      0x03\n        /* \"five/StakingRewards.sol\":2898:2936  updatedAt = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/StakingRewards.sol\":2961:2983  _account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"five/StakingRewards.sol\":2957:3298  if (_account != address(0)) {... */\n      tag_168\n      jumpi\n        /* \"five/StakingRewards.sol\":3150:3166  earned(_account) */\n      tag_169\n        /* \"five/StakingRewards.sol\":3157:3165  _account */\n      dup2\n        /* \"five/StakingRewards.sol\":3150:3156  earned */\n      tag_29\n        /* \"five/StakingRewards.sol\":3150:3166  earned(_account) */\n      jump\t// in\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/StakingRewards.sol\":3130:3147  rewards[_account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"five/StakingRewards.sol\":3130:3137  rewards */\n      0x07\n        /* \"five/StakingRewards.sol\":3130:3147  rewards[_account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"five/StakingRewards.sol\":3130:3166  rewards[_account] = earned(_account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"five/StakingRewards.sol\":3266:3286  rewardPerTokenStored */\n      sload(0x05)\n        /* \"five/StakingRewards.sol\":3231:3253  userRewardPerTokenPaid */\n      0x06\n        /* \"five/StakingRewards.sol\":3231:3263  userRewardPerTokenPaid[_account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"five/StakingRewards.sol\":3231:3286  userRewardPerTokenPaid[_account] = rewardPerTokenStored */\n      sstore\n        /* \"five/StakingRewards.sol\":2957:3298  if (_account != address(0)) {... */\n    tag_168:\n        /* \"five/StakingRewards.sol\":5503:5504  0 */\n      0x00\n        /* \"five/StakingRewards.sol\":5493:5500  _amount */\n      dup3\n        /* \"five/StakingRewards.sol\":5493:5504  _amount > 0 */\n      gt\n        /* \"five/StakingRewards.sol\":5485:5520  require(_amount > 0, \"Amount zero\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2094:2096   */\n      0x20\n        /* \"five/StakingRewards.sol\":5485:5520  require(_amount > 0, \"Amount zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2076:2097   */\n      mstore\n        /* \"#utility.yul\":2133:2135   */\n      0x0b\n        /* \"#utility.yul\":2113:2131   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2106:2136   */\n      mstore\n      shl(0xa8, 0x416d6f756e74207a65726f)\n        /* \"#utility.yul\":2152:2170   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2145:2186   */\n      mstore\n        /* \"#utility.yul\":2203:2221   */\n      0x64\n      add\n        /* \"five/StakingRewards.sol\":5485:5520  require(_amount > 0, \"Amount zero\") */\n      tag_111\n        /* \"#utility.yul\":1892:2227   */\n      jump\n        /* \"five/StakingRewards.sol\":5485:5520  require(_amount > 0, \"Amount zero\") */\n    tag_171:\n        /* \"five/StakingRewards.sol\":5541:5551  msg.sender */\n      caller\n        /* \"five/StakingRewards.sol\":5531:5552  balanceOf[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"five/StakingRewards.sol\":5531:5540  balanceOf */\n      0x08\n        /* \"five/StakingRewards.sol\":5531:5552  balanceOf[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"five/StakingRewards.sol\":5531:5563  balanceOf[msg.sender] += _amount */\n      dup1\n      sload\n        /* \"five/StakingRewards.sol\":5556:5563  _amount */\n      dup5\n      swap3\n        /* \"five/StakingRewards.sol\":5531:5552  balanceOf[msg.sender] */\n      swap1\n        /* \"five/StakingRewards.sol\":5531:5563  balanceOf[msg.sender] += _amount */\n      tag_173\n      swap1\n        /* \"five/StakingRewards.sol\":5556:5563  _amount */\n      dup5\n      swap1\n        /* \"five/StakingRewards.sol\":5531:5563  balanceOf[msg.sender] += _amount */\n      tag_103\n      jump\t// in\n    tag_173:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"five/StakingRewards.sol\":5589:5596  _amount */\n      dup2\n        /* \"five/StakingRewards.sol\":5574:5585  totalSupply */\n      0x09\n      0x00\n        /* \"five/StakingRewards.sol\":5574:5596  totalSupply += _amount */\n      dup3\n      dup3\n      sload\n      tag_174\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_174:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"five/StakingRewards.sol\":5650:5711  stakingToken.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"five/StakingRewards.sol\":5676:5686  msg.sender */\n      caller\n        /* \"five/StakingRewards.sol\":5650:5711  stakingToken.transferFrom(msg.sender, address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4221:4272   */\n      mstore\n        /* \"five/StakingRewards.sol\":5696:5700  this */\n      address\n        /* \"#utility.yul\":4288:4306   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4281:4341   */\n      mstore\n        /* \"#utility.yul\":4357:4375   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4350:4384   */\n      dup4\n      swap1\n      mstore\n        /* \"five/StakingRewards.sol\":5650:5662  stakingToken */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"five/StakingRewards.sol\":5650:5675  stakingToken.transferFrom */\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":4194:4212   */\n      0x64\n      add\n        /* \"five/StakingRewards.sol\":5650:5711  stakingToken.transferFrom(msg.sender, address(this), _amount) */\n      tag_115\n        /* \"#utility.yul\":4019:4390   */\n      jump\n        /* \"five/StakingRewards.sol\":3594:3775  function setRewardDuration(uint _duration) external onlyOwner {... */\n    tag_84:\n        /* \"five/StakingRewards.sol\":2108:2113  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"five/StakingRewards.sol\":2094:2104  msg.sender */\n      caller\n        /* \"five/StakingRewards.sol\":2094:2113  msg.sender == owner */\n      eq\n        /* \"five/StakingRewards.sol\":2086:2127  require(msg.sender == owner, \"Not owner\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2995:2997   */\n      0x20\n        /* \"five/StakingRewards.sol\":2086:2127  require(msg.sender == owner, \"Not owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2977:2998   */\n      mstore\n        /* \"#utility.yul\":3034:3035   */\n      0x09\n        /* \"#utility.yul\":3014:3032   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3007:3036   */\n      mstore\n      shl(0xb9, 0x2737ba1037bbb732b9)\n        /* \"#utility.yul\":3052:3070   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3045:3084   */\n      mstore\n        /* \"#utility.yul\":3101:3119   */\n      0x64\n      add\n        /* \"five/StakingRewards.sol\":2086:2127  require(msg.sender == owner, \"Not owner\") */\n      tag_111\n        /* \"#utility.yul\":2793:3125   */\n      jump\n        /* \"five/StakingRewards.sol\":2086:2127  require(msg.sender == owner, \"Not owner\") */\n    tag_181:\n        /* \"five/StakingRewards.sol\":3686:3701  block.timestamp */\n      timestamp\n        /* \"five/StakingRewards.sol\":3675:3683  finishAt */\n      sload(0x02)\n        /* \"five/StakingRewards.sol\":3675:3701  finishAt < block.timestamp */\n      lt\n        /* \"five/StakingRewards.sol\":3667:3736  require(finishAt < block.timestamp, \"Previous rewards not completed\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4597:4599   */\n      0x20\n        /* \"five/StakingRewards.sol\":3667:3736  require(finishAt < block.timestamp, \"Previous rewards not completed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4579:4600   */\n      mstore\n        /* \"#utility.yul\":4636:4638   */\n      0x1e\n        /* \"#utility.yul\":4616:4634   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4609:4639   */\n      mstore\n        /* \"#utility.yul\":4675:4707   */\n      0x50726576696f75732072657761726473206e6f7420636f6d706c657465640000\n        /* \"#utility.yul\":4655:4673   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4648:4708   */\n      mstore\n        /* \"#utility.yul\":4725:4743   */\n      0x64\n      add\n        /* \"five/StakingRewards.sol\":3667:3736  require(finishAt < block.timestamp, \"Previous rewards not completed\") */\n      tag_111\n        /* \"#utility.yul\":4395:4749   */\n      jump\n        /* \"five/StakingRewards.sol\":3667:3736  require(finishAt < block.timestamp, \"Previous rewards not completed\") */\n    tag_184:\n        /* \"five/StakingRewards.sol\":3747:3755  duration */\n      0x01\n        /* \"five/StakingRewards.sol\":3747:3767  duration = _duration */\n      sstore\n        /* \"five/StakingRewards.sol\":3594:3775  function setRewardDuration(uint _duration) external onlyOwner {... */\n      jump\t// out\n        /* \"five/StakingRewards.sol\":6509:6862  function rewardPerToken() public view returns (uint) {... */\n    tag_86:\n        /* \"five/StakingRewards.sol\":6556:6560  uint */\n      0x00\n        /* \"five/StakingRewards.sol\":6577:6588  totalSupply */\n      sload(0x09)\n        /* \"five/StakingRewards.sol\":6592:6593  0 */\n      0x00\n        /* \"five/StakingRewards.sol\":6577:6593  totalSupply == 0 */\n      sub\n        /* \"five/StakingRewards.sol\":6573:6622  if (totalSupply == 0) return rewardPerTokenStored */\n      tag_188\n      jumpi\n      pop\n        /* \"five/StakingRewards.sol\":6602:6622  rewardPerTokenStored */\n      sload(0x05)\n      swap1\n        /* \"five/StakingRewards.sol\":6509:6862  function rewardPerToken() public view returns (uint) {... */\n      jump\t// out\n        /* \"five/StakingRewards.sol\":6573:6622  if (totalSupply == 0) return rewardPerTokenStored */\n    tag_188:\n        /* \"five/StakingRewards.sol\":6820:6831  totalSupply */\n      sload(0x09)\n        /* \"five/StakingRewards.sol\":6735:6744  updatedAt */\n      sload(0x03)\n        /* \"five/StakingRewards.sol\":6706:6732  lastTimeRewardApplicable() */\n      tag_189\n        /* \"five/StakingRewards.sol\":6706:6730  lastTimeRewardApplicable */\n      tag_69\n        /* \"five/StakingRewards.sol\":6706:6732  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_189:\n        /* \"five/StakingRewards.sol\":6706:6744  lastTimeRewardApplicable() - updatedAt */\n      tag_190\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_190:\n        /* \"five/StakingRewards.sol\":6678:6688  rewardRate */\n      sload(0x04)\n        /* \"five/StakingRewards.sol\":6678:6745  rewardRate * ... */\n      tag_191\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_191:\n        /* \"five/StakingRewards.sol\":6678:6787  rewardRate * ... */\n      tag_192\n      swap1\n        /* \"five/StakingRewards.sol\":6783:6787  1e18 */\n      0x0de0b6b3a7640000\n        /* \"five/StakingRewards.sol\":6678:6787  rewardRate * ... */\n      tag_99\n      jump\t// in\n    tag_192:\n        /* \"five/StakingRewards.sol\":6677:6831  (rewardRate * ... */\n      tag_193\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_193:\n        /* \"five/StakingRewards.sol\":6640:6660  rewardPerTokenStored */\n      sload(0x05)\n        /* \"five/StakingRewards.sol\":6640:6831  rewardPerTokenStored + ... */\n      tag_164\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n        /* \"#utility.yul\":14:300   */\n    tag_28:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_198:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_199\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      0x00\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_199:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:667   */\n    tag_44:\n        /* \"#utility.yul\":546:552   */\n      0x00\n        /* \"#utility.yul\":599:601   */\n      0x20\n        /* \"#utility.yul\":587:596   */\n      dup3\n        /* \"#utility.yul\":578:585   */\n      dup5\n        /* \"#utility.yul\":574:597   */\n      sub\n        /* \"#utility.yul\":570:602   */\n      slt\n        /* \"#utility.yul\":567:619   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":615:616   */\n      0x00\n        /* \"#utility.yul\":612:613   */\n      0x00\n        /* \"#utility.yul\":605:617   */\n      revert\n        /* \"#utility.yul\":567:619   */\n    tag_202:\n      pop\n        /* \"#utility.yul\":638:661   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":487:667   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1102:1229   */\n    tag_195:\n        /* \"#utility.yul\":1163:1173   */\n      0x4e487b71\n        /* \"#utility.yul\":1158:1161   */\n      0xe0\n        /* \"#utility.yul\":1154:1174   */\n      shl\n        /* \"#utility.yul\":1151:1152   */\n      0x00\n        /* \"#utility.yul\":1144:1175   */\n      mstore\n        /* \"#utility.yul\":1194:1198   */\n      0x11\n        /* \"#utility.yul\":1191:1192   */\n      0x04\n        /* \"#utility.yul\":1184:1199   */\n      mstore\n        /* \"#utility.yul\":1218:1222   */\n      0x24\n        /* \"#utility.yul\":1215:1216   */\n      0x00\n        /* \"#utility.yul\":1208:1223   */\n      revert\n        /* \"#utility.yul\":1234:1362   */\n    tag_97:\n        /* \"#utility.yul\":1301:1310   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":1322:1333   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":1319:1356   */\n      iszero\n      tag_102\n      jumpi\n        /* \"#utility.yul\":1336:1354   */\n      tag_102\n      tag_195\n      jump\t// in\n        /* \"#utility.yul\":1367:1535   */\n    tag_99:\n        /* \"#utility.yul\":1440:1449   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":1471:1480   */\n      dup2\n      iszero\n        /* \"#utility.yul\":1488:1503   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":1482:1504   */\n      dup5\n      eq\n        /* \"#utility.yul\":1468:1505   */\n      or\n        /* \"#utility.yul\":1458:1529   */\n      tag_102\n      jumpi\n        /* \"#utility.yul\":1509:1527   */\n      tag_102\n      tag_195\n      jump\t// in\n        /* \"#utility.yul\":1540:1757   */\n    tag_101:\n        /* \"#utility.yul\":1580:1581   */\n      0x00\n        /* \"#utility.yul\":1606:1607   */\n      dup3\n        /* \"#utility.yul\":1596:1728   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":1650:1660   */\n      0x4e487b71\n        /* \"#utility.yul\":1645:1648   */\n      0xe0\n        /* \"#utility.yul\":1641:1661   */\n      shl\n        /* \"#utility.yul\":1638:1639   */\n      0x00\n        /* \"#utility.yul\":1631:1662   */\n      mstore\n        /* \"#utility.yul\":1685:1689   */\n      0x12\n        /* \"#utility.yul\":1682:1683   */\n      0x04\n        /* \"#utility.yul\":1675:1690   */\n      mstore\n        /* \"#utility.yul\":1713:1717   */\n      0x24\n        /* \"#utility.yul\":1710:1711   */\n      0x00\n        /* \"#utility.yul\":1703:1718   */\n      revert\n        /* \"#utility.yul\":1596:1728   */\n    tag_213:\n      pop\n        /* \"#utility.yul\":1742:1751   */\n      div\n      swap1\n        /* \"#utility.yul\":1540:1757   */\n      jump\t// out\n        /* \"#utility.yul\":1762:1887   */\n    tag_103:\n        /* \"#utility.yul\":1827:1836   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":1848:1858   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1845:1881   */\n      iszero\n      tag_102\n      jumpi\n        /* \"#utility.yul\":1861:1879   */\n      tag_102\n      tag_195\n      jump\t// in\n        /* \"#utility.yul\":2511:2788   */\n    tag_120:\n        /* \"#utility.yul\":2578:2584   */\n      0x00\n        /* \"#utility.yul\":2631:2633   */\n      0x20\n        /* \"#utility.yul\":2619:2628   */\n      dup3\n        /* \"#utility.yul\":2610:2617   */\n      dup5\n        /* \"#utility.yul\":2606:2629   */\n      sub\n        /* \"#utility.yul\":2602:2634   */\n      slt\n        /* \"#utility.yul\":2599:2651   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":2647:2648   */\n      0x00\n        /* \"#utility.yul\":2644:2645   */\n      0x00\n        /* \"#utility.yul\":2637:2649   */\n      revert\n        /* \"#utility.yul\":2599:2651   */\n    tag_220:\n        /* \"#utility.yul\":2679:2688   */\n      dup2\n        /* \"#utility.yul\":2673:2689   */\n      mload\n        /* \"#utility.yul\":2732:2737   */\n      dup1\n        /* \"#utility.yul\":2725:2738   */\n      iszero\n        /* \"#utility.yul\":2718:2739   */\n      iszero\n        /* \"#utility.yul\":2711:2716   */\n      dup2\n        /* \"#utility.yul\":2708:2740   */\n      eq\n        /* \"#utility.yul\":2698:2758   */\n      tag_199\n      jumpi\n        /* \"#utility.yul\":2754:2755   */\n      0x00\n        /* \"#utility.yul\":2751:2752   */\n      0x00\n        /* \"#utility.yul\":2744:2756   */\n      revert\n        /* \"#utility.yul\":3475:3659   */\n    tag_145:\n        /* \"#utility.yul\":3545:3551   */\n      0x00\n        /* \"#utility.yul\":3598:3600   */\n      0x20\n        /* \"#utility.yul\":3586:3595   */\n      dup3\n        /* \"#utility.yul\":3577:3584   */\n      dup5\n        /* \"#utility.yul\":3573:3596   */\n      sub\n        /* \"#utility.yul\":3569:3601   */\n      slt\n        /* \"#utility.yul\":3566:3618   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":3614:3615   */\n      0x00\n        /* \"#utility.yul\":3611:3612   */\n      0x00\n        /* \"#utility.yul\":3604:3616   */\n      revert\n        /* \"#utility.yul\":3566:3618   */\n    tag_225:\n      pop\n        /* \"#utility.yul\":3637:3653   */\n      mload\n      swap2\n        /* \"#utility.yul\":3475:3659   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208d94054b8b22d3e370d9406a8b4a167c056ed608c038381b237e8596669be12b64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_895": {
									"entryPoint": null,
									"id": 895,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 86,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:491:6",
										"nodeType": "YulBlock",
										"src": "0:491:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:6",
													"nodeType": "YulBlock",
													"src": "74:117:6",
													"statements": [
														{
															"nativeSrc": "84:22:6",
															"nodeType": "YulAssignment",
															"src": "84:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:6"
																},
																"nativeSrc": "93:13:6",
																"nodeType": "YulFunctionCall",
																"src": "93:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:6",
																"nodeType": "YulBlock",
																"src": "169:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:6",
																					"nodeType": "YulLiteral",
																					"src": "178:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:6",
																					"nodeType": "YulLiteral",
																					"src": "181:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:6"
																			},
																			"nativeSrc": "171:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:6"
																		},
																		"nativeSrc": "171:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:6",
																										"nodeType": "YulLiteral",
																										"src": "154:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:6",
																										"nodeType": "YulLiteral",
																										"src": "159:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:6"
																								},
																								"nativeSrc": "150:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:6",
																								"nodeType": "YulLiteral",
																								"src": "163:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:6"
																						},
																						"nativeSrc": "146:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:6"
																				},
																				"nativeSrc": "135:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:6"
																		},
																		"nativeSrc": "125:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:6"
																},
																"nativeSrc": "118:50:6",
																"nodeType": "YulFunctionCall",
																"src": "118:50:6"
															},
															"nativeSrc": "115:70:6",
															"nodeType": "YulIf",
															"src": "115:70:6"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:6",
														"nodeType": "YulTypedName",
														"src": "53:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:6",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "14:177:6"
											},
											{
												"body": {
													"nativeSrc": "294:195:6",
													"nodeType": "YulBlock",
													"src": "294:195:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:6",
																"nodeType": "YulBlock",
																"src": "340:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:6",
																					"nodeType": "YulLiteral",
																					"src": "349:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:6",
																					"nodeType": "YulLiteral",
																					"src": "352:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:6"
																			},
																			"nativeSrc": "342:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:6"
																		},
																		"nativeSrc": "342:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:6"
																		},
																		"nativeSrc": "311:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:6",
																		"nodeType": "YulLiteral",
																		"src": "336:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:6"
																},
																"nativeSrc": "307:32:6",
																"nodeType": "YulFunctionCall",
																"src": "307:32:6"
															},
															"nativeSrc": "304:52:6",
															"nodeType": "YulIf",
															"src": "304:52:6"
														},
														{
															"nativeSrc": "365:50:6",
															"nodeType": "YulAssignment",
															"src": "365:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:6"
																},
																"nativeSrc": "375:40:6",
																"nodeType": "YulFunctionCall",
																"src": "375:40:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:6"
																}
															]
														},
														{
															"nativeSrc": "424:59:6",
															"nodeType": "YulAssignment",
															"src": "424:59:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:6",
																				"nodeType": "YulLiteral",
																				"src": "479:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:6"
																		},
																		"nativeSrc": "464:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:6"
																},
																"nativeSrc": "434:49:6",
																"nodeType": "YulFunctionCall",
																"src": "434:49:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:6",
														"nodeType": "YulTypedName",
														"src": "252:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:6",
														"nodeType": "YulTypedName",
														"src": "263:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:6",
														"nodeType": "YulTypedName",
														"src": "275:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:6",
														"nodeType": "YulTypedName",
														"src": "283:6:6",
														"type": ""
													}
												],
												"src": "196:293:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b50604051610bf4380380610bf483398101604081905261002e91610071565b5f80546001600160a01b031916331790556001600160a01b039182166080521660a0526100a2565b80516001600160a01b038116811461006c575f5ffd5b919050565b5f5f60408385031215610082575f5ffd5b61008b83610056565b915061009960208401610056565b90509250929050565b60805160a051610b156100df5f395f8181610296015281816105f8015261078501525f81816101de0152818161042f01526108c40152610b155ff3fe608060405234801561000f575f5ffd5b5060043610610126575f3560e01c80637519ab50116100a9578063a694fc3a1161006e578063a694fc3a14610263578063c0ed00c914610276578063cd3daf9d14610289578063d1af0c7d14610291578063df136d65146102b8575f5ffd5b80637519ab50146102185780637b0a47ee1461022157806380faa57d1461022a5780638b876347146102325780638da5cb5b14610251575f5ffd5b80633c6b16ab116100ef5780633c6b16ab146101965780633d18b912146101a957806367d3b488146101b157806370a08231146101ba57806372f702f3146101d9575f5ffd5b80628cc2621461012a5780630700037d146101505780630fb5a6b41461016f57806318160ddd146101785780632e1a7d4d14610181575b5f5ffd5b61013d6101383660046109f5565b6102c1565b6040519081526020015b60405180910390f35b61013d61015e3660046109f5565b60076020525f908152604090205481565b61013d60015481565b61013d60095481565b61019461018f366004610a22565b61033c565b005b6101946101a4366004610a22565b6104a7565b6101946106df565b61013d60025481565b61013d6101c83660046109f5565b60086020525f908152604090205481565b6102007f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610147565b61013d60035481565b61013d60045481565b61013d6107b8565b61013d6102403660046109f5565b60066020525f908152604090205481565b5f54610200906001600160a01b031681565b610194610271366004610a22565b6107d0565b610194610284366004610a22565b6108fb565b61013d610996565b6102007f000000000000000000000000000000000000000000000000000000000000000081565b61013d60055481565b6001600160a01b0381165f908152600760209081526040808320546006909252822054670de0b6b3a7640000906102f6610996565b6103009190610a4d565b6001600160a01b0385165f908152600860205260409020546103229190610a60565b61032c9190610a77565b6103369190610a96565b92915050565b33610345610996565b6005556103506107b8565b6003556001600160a01b038116156103965761036b816102c1565b6001600160a01b0382165f908152600760209081526040808320939093556005546006909152919020555b5f82116103d85760405162461bcd60e51b815260206004820152600b60248201526a416d6f756e74207a65726f60a81b60448201526064015b60405180910390fd5b335f90815260086020526040812080548492906103f6908490610a4d565b925050819055508160095f82825461040e9190610a4d565b909155505060405163a9059cbb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044015b6020604051808303815f875af115801561047e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a29190610aa9565b505050565b5f546001600160a01b031633146104ec5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064016103cf565b5f6104f5610996565b6005556105006107b8565b6003556001600160a01b038116156105465761051b816102c1565b6001600160a01b0382165f908152600760209081526040808320939093556005546006909152919020555b60025442106105645760015461055c9083610a77565b60045561059f565b5f600454426002546105769190610a4d565b6105809190610a60565b6001549091506105908483610a96565b61059a9190610a77565b600455505b5f600454116105e35760405162461bcd60e51b815260206004820152601060248201526f5265776172642072617465207a65726f60801b60448201526064016103cf565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610645573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106699190610ac8565b6001546004546106799190610a60565b11156106c75760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e742072657761726420746f6b656e7300000000000060448201526064016103cf565b6001546106d49042610a96565b600255505042600355565b336106e8610996565b6005556106f36107b8565b6003556001600160a01b038116156107395761070e816102c1565b6001600160a01b0382165f908152600760209081526040808320939093556005546006909152919020555b335f9081526007602052604090205480156107b457335f81815260076020526040808220919091555163a9059cbb60e01b81526004810191909152602481018290526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401610462565b5050565b5f60025442106107c9575060025490565b425b905090565b336107d9610996565b6005556107e46107b8565b6003556001600160a01b0381161561082a576107ff816102c1565b6001600160a01b0382165f908152600760209081526040808320939093556005546006909152919020555b5f82116108675760405162461bcd60e51b815260206004820152600b60248201526a416d6f756e74207a65726f60a81b60448201526064016103cf565b335f9081526008602052604081208054849290610885908490610a96565b925050819055508160095f82825461089d9190610a96565b90915550506040516323b872dd60e01b8152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401610462565b5f546001600160a01b031633146109405760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064016103cf565b42600254106109915760405162461bcd60e51b815260206004820152601e60248201527f50726576696f75732072657761726473206e6f7420636f6d706c65746564000060448201526064016103cf565b600155565b5f6009545f036109a7575060055490565b6009546003546109b56107b8565b6109bf9190610a4d565b6004546109cc9190610a60565b6109de90670de0b6b3a7640000610a60565b6109e89190610a77565b6005546107cb9190610a96565b5f60208284031215610a05575f5ffd5b81356001600160a01b0381168114610a1b575f5ffd5b9392505050565b5f60208284031215610a32575f5ffd5b5035919050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561033657610336610a39565b808202811582820484141761033657610336610a39565b5f82610a9157634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561033657610336610a39565b5f60208284031215610ab9575f5ffd5b81518015158114610a1b575f5ffd5b5f60208284031215610ad8575f5ffd5b505191905056fea26469706673582212208d94054b8b22d3e370d9406a8b4a167c056ed608c038381b237e8596669be12b64736f6c634300081d0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBF4 CODESIZE SUB DUP1 PUSH2 0xBF4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x71 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE PUSH2 0xA2 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6C JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x82 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x8B DUP4 PUSH2 0x56 JUMP JUMPDEST SWAP2 POP PUSH2 0x99 PUSH1 0x20 DUP5 ADD PUSH2 0x56 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0xB15 PUSH2 0xDF PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x296 ADD MSTORE DUP2 DUP2 PUSH2 0x5F8 ADD MSTORE PUSH2 0x785 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x1DE ADD MSTORE DUP2 DUP2 PUSH2 0x42F ADD MSTORE PUSH2 0x8C4 ADD MSTORE PUSH2 0xB15 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x126 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7519AB50 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xC0ED00C9 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x2B8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7519AB50 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x251 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x3C6B16AB GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x67D3B488 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x1D9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x181 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13D PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13D PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x33C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x194 PUSH2 0x1A4 CALLDATASIZE PUSH1 0x4 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x6DF JUMP JUMPDEST PUSH2 0x13D PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x200 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x147 JUMP JUMPDEST PUSH2 0x13D PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13D PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x200 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x13D PUSH2 0x996 JUMP JUMPDEST PUSH2 0x200 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x13D PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x2F6 PUSH2 0x996 JUMP JUMPDEST PUSH2 0x300 SWAP2 SWAP1 PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x32C SWAP2 SWAP1 PUSH2 0xA77 JUMP JUMPDEST PUSH2 0x336 SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH2 0x345 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x350 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x396 JUMPI PUSH2 0x36B DUP2 PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SLOAD PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH0 DUP3 GT PUSH2 0x3D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x416D6F756E74207A65726F PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x3F6 SWAP1 DUP5 SWAP1 PUSH2 0xA4D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x40E SWAP2 SWAP1 PUSH2 0xA4D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x47E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CF JUMP JUMPDEST PUSH0 PUSH2 0x4F5 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x500 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x546 JUMPI PUSH2 0x51B DUP2 PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SLOAD PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT PUSH2 0x564 JUMPI PUSH1 0x1 SLOAD PUSH2 0x55C SWAP1 DUP4 PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0x59F JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD TIMESTAMP PUSH1 0x2 SLOAD PUSH2 0x576 SWAP2 SWAP1 PUSH2 0xA4D JUMP JUMPDEST PUSH2 0x580 SWAP2 SWAP1 PUSH2 0xA60 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH2 0x590 DUP5 DUP4 PUSH2 0xA96 JUMP JUMPDEST PUSH2 0x59A SWAP2 SWAP1 PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x4 SSTORE POP JUMPDEST PUSH0 PUSH1 0x4 SLOAD GT PUSH2 0x5E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x5265776172642072617465207A65726F PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x645 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x669 SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x4 SLOAD PUSH2 0x679 SWAP2 SWAP1 PUSH2 0xA60 JUMP JUMPDEST GT ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742072657761726420746F6B656E73000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x6D4 SWAP1 TIMESTAMP PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x2 SSTORE POP POP TIMESTAMP PUSH1 0x3 SSTORE JUMP JUMPDEST CALLER PUSH2 0x6E8 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x6F3 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x739 JUMPI PUSH2 0x70E DUP2 PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SLOAD PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x7B4 JUMPI CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH2 0x462 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD TIMESTAMP LT PUSH2 0x7C9 JUMPI POP PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH2 0x7D9 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x7E4 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x82A JUMPI PUSH2 0x7FF DUP2 PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SLOAD PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH0 DUP3 GT PUSH2 0x867 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x416D6F756E74207A65726F PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CF JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x885 SWAP1 DUP5 SWAP1 PUSH2 0xA96 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x89D SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH2 0x462 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x940 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CF JUMP JUMPDEST TIMESTAMP PUSH1 0x2 SLOAD LT PUSH2 0x991 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726576696F75732072657761726473206E6F7420636F6D706C657465640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD PUSH0 SUB PUSH2 0x9A7 JUMPI POP PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x3 SLOAD PUSH2 0x9B5 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x9BF SWAP2 SWAP1 PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x9CC SWAP2 SWAP1 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x9DE SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x7CB SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA05 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA1B JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA32 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x336 JUMPI PUSH2 0x336 PUSH2 0xA39 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x336 JUMPI PUSH2 0x336 PUSH2 0xA39 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xA91 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x336 JUMPI PUSH2 0x336 PUSH2 0xA39 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA1B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 SWAP5 SDIV 0x4B DUP12 0x22 0xD3 CALLF 0x70D9 BLOCKHASH PUSH11 0x8B4A167C056ED608C03838 SHL 0x23 PUSH31 0x8596669BE12B64736F6C634300081D00330000000000000000000000000000 ",
							"sourceMap": "1128:6379:5:-:0;;;3325:189;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3394:5;:18;;-1:-1:-1;;;;;;3394:18:5;3402:10;3394:18;;;-1:-1:-1;;;;;3423:36:5;;;;;3470;;;1128:6379;;14:177:6;93:13;;-1:-1:-1;;;;;135:31:6;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;1128:6379:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@balanceOf_818": {
									"entryPoint": null,
									"id": 818,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@duration_798": {
									"entryPoint": null,
									"id": 798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@earned_1175": {
									"entryPoint": 705,
									"id": 1175,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@finishAt_800": {
									"entryPoint": null,
									"id": 800,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getReward_1106": {
									"entryPoint": 1759,
									"id": 1106,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastTimeRewardApplicable_1121": {
									"entryPoint": 1976,
									"id": 1121,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@notifyRewardAmount_995": {
									"entryPoint": 1191,
									"id": 995,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_796": {
									"entryPoint": null,
									"id": 796,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerTokenStored_806": {
									"entryPoint": null,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerToken_1148": {
									"entryPoint": 2454,
									"id": 1148,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rewardRate_804": {
									"entryPoint": null,
									"id": 804,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsToken_794": {
									"entryPoint": null,
									"id": 794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_814": {
									"entryPoint": null,
									"id": 814,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRewardDuration_915": {
									"entryPoint": 2299,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1035": {
									"entryPoint": 2000,
									"id": 1035,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakingToken_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_820": {
									"entryPoint": null,
									"id": 820,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updatedAt_802": {
									"entryPoint": null,
									"id": 802,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userRewardPerTokenPaid_810": {
									"entryPoint": null,
									"id": 810,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1071": {
									"entryPoint": 828,
									"id": 1071,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_740db3786ffac1c1b57d0374fe48d0baae54b340ac11eee4d95d61c124e6865d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e7781ea458ec1953907f64a217bfd3ffe515f3c1737fce4ecf66ca84f23798b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f9693727a7647b970cb4cc403bee711f554db2ecad00498574b9c0de963d710e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_feb9ed92c05bf894f55a1d03e984cee0770acd4ac6704cea1f36818e6e0544c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2617,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4751:6",
										"nodeType": "YulBlock",
										"src": "0:4751:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:216:6",
													"nodeType": "YulBlock",
													"src": "84:216:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:6",
																"nodeType": "YulBlock",
																"src": "130:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:6",
																					"nodeType": "YulLiteral",
																					"src": "139:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:6",
																					"nodeType": "YulLiteral",
																					"src": "142:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:6"
																			},
																			"nativeSrc": "132:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:6"
																		},
																		"nativeSrc": "132:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:6"
																		},
																		"nativeSrc": "101:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:6",
																		"nodeType": "YulLiteral",
																		"src": "126:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:6"
																},
																"nativeSrc": "97:32:6",
																"nodeType": "YulFunctionCall",
																"src": "97:32:6"
															},
															"nativeSrc": "94:52:6",
															"nodeType": "YulIf",
															"src": "94:52:6"
														},
														{
															"nativeSrc": "155:36:6",
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "181:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "168:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:6"
																},
																"nativeSrc": "168:23:6",
																"nodeType": "YulFunctionCall",
																"src": "168:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:6",
																	"nodeType": "YulTypedName",
																	"src": "159:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:6",
																"nodeType": "YulBlock",
																"src": "254:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:6",
																					"nodeType": "YulLiteral",
																					"src": "263:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:6",
																					"nodeType": "YulLiteral",
																					"src": "266:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:6"
																			},
																			"nativeSrc": "256:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:6"
																		},
																		"nativeSrc": "256:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "213:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "224:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "239:3:6",
																										"nodeType": "YulLiteral",
																										"src": "239:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "244:1:6",
																										"nodeType": "YulLiteral",
																										"src": "244:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "235:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:6"
																								},
																								"nativeSrc": "235:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "248:1:6",
																								"nodeType": "YulLiteral",
																								"src": "248:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "231:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:6"
																						},
																						"nativeSrc": "231:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "220:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:6"
																				},
																				"nativeSrc": "220:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "210:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:6"
																		},
																		"nativeSrc": "210:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "203:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:6"
																},
																"nativeSrc": "203:50:6",
																"nodeType": "YulFunctionCall",
																"src": "203:50:6"
															},
															"nativeSrc": "200:70:6",
															"nodeType": "YulIf",
															"src": "200:70:6"
														},
														{
															"nativeSrc": "279:15:6",
															"nodeType": "YulAssignment",
															"src": "279:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:6",
																"nodeType": "YulIdentifier",
																"src": "289:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "14:286:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:6",
														"nodeType": "YulTypedName",
														"src": "50:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:6",
														"nodeType": "YulTypedName",
														"src": "61:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:6",
														"nodeType": "YulTypedName",
														"src": "73:6:6",
														"type": ""
													}
												],
												"src": "14:286:6"
											},
											{
												"body": {
													"nativeSrc": "406:76:6",
													"nodeType": "YulBlock",
													"src": "406:76:6",
													"statements": [
														{
															"nativeSrc": "416:26:6",
															"nodeType": "YulAssignment",
															"src": "416:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "428:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "439:2:6",
																		"nodeType": "YulLiteral",
																		"src": "439:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "424:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "424:3:6"
																},
																"nativeSrc": "424:18:6",
																"nodeType": "YulFunctionCall",
																"src": "424:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "416:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "416:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "458:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "469:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "469:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "451:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:6"
																},
																"nativeSrc": "451:25:6",
																"nodeType": "YulFunctionCall",
																"src": "451:25:6"
															},
															"nativeSrc": "451:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "451:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "305:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "375:9:6",
														"nodeType": "YulTypedName",
														"src": "375:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "386:6:6",
														"nodeType": "YulTypedName",
														"src": "386:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "397:4:6",
														"nodeType": "YulTypedName",
														"src": "397:4:6",
														"type": ""
													}
												],
												"src": "305:177:6"
											},
											{
												"body": {
													"nativeSrc": "557:110:6",
													"nodeType": "YulBlock",
													"src": "557:110:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "603:16:6",
																"nodeType": "YulBlock",
																"src": "603:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "612:1:6",
																					"nodeType": "YulLiteral",
																					"src": "612:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "615:1:6",
																					"nodeType": "YulLiteral",
																					"src": "615:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "605:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:6"
																			},
																			"nativeSrc": "605:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:6"
																		},
																		"nativeSrc": "605:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "578:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "578:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "587:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "587:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "574:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "574:3:6"
																		},
																		"nativeSrc": "574:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "574:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "599:2:6",
																		"nodeType": "YulLiteral",
																		"src": "599:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "570:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:6"
																},
																"nativeSrc": "570:32:6",
																"nodeType": "YulFunctionCall",
																"src": "570:32:6"
															},
															"nativeSrc": "567:52:6",
															"nodeType": "YulIf",
															"src": "567:52:6"
														},
														{
															"nativeSrc": "628:33:6",
															"nodeType": "YulAssignment",
															"src": "628:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "651:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "651:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "638:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "638:12:6"
																},
																"nativeSrc": "638:23:6",
																"nodeType": "YulFunctionCall",
																"src": "638:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "628:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "628:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "487:180:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "523:9:6",
														"nodeType": "YulTypedName",
														"src": "523:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "534:7:6",
														"nodeType": "YulTypedName",
														"src": "534:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "546:6:6",
														"nodeType": "YulTypedName",
														"src": "546:6:6",
														"type": ""
													}
												],
												"src": "487:180:6"
											},
											{
												"body": {
													"nativeSrc": "787:102:6",
													"nodeType": "YulBlock",
													"src": "787:102:6",
													"statements": [
														{
															"nativeSrc": "797:26:6",
															"nodeType": "YulAssignment",
															"src": "797:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "809:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "809:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "820:2:6",
																		"nodeType": "YulLiteral",
																		"src": "820:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "805:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "805:3:6"
																},
																"nativeSrc": "805:18:6",
																"nodeType": "YulFunctionCall",
																"src": "805:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "797:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "797:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "839:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "839:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "854:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "854:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "870:3:6",
																								"nodeType": "YulLiteral",
																								"src": "870:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "875:1:6",
																								"nodeType": "YulLiteral",
																								"src": "875:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "866:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "866:3:6"
																						},
																						"nativeSrc": "866:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "866:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "879:1:6",
																						"nodeType": "YulLiteral",
																						"src": "879:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "862:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "862:3:6"
																				},
																				"nativeSrc": "862:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "862:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "850:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "850:3:6"
																		},
																		"nativeSrc": "850:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "850:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "832:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "832:6:6"
																},
																"nativeSrc": "832:51:6",
																"nodeType": "YulFunctionCall",
																"src": "832:51:6"
															},
															"nativeSrc": "832:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "832:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed",
												"nativeSrc": "672:217:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "756:9:6",
														"nodeType": "YulTypedName",
														"src": "756:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "767:6:6",
														"nodeType": "YulTypedName",
														"src": "767:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "778:4:6",
														"nodeType": "YulTypedName",
														"src": "778:4:6",
														"type": ""
													}
												],
												"src": "672:217:6"
											},
											{
												"body": {
													"nativeSrc": "995:102:6",
													"nodeType": "YulBlock",
													"src": "995:102:6",
													"statements": [
														{
															"nativeSrc": "1005:26:6",
															"nodeType": "YulAssignment",
															"src": "1005:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1017:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1017:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1028:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1028:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1013:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1013:3:6"
																},
																"nativeSrc": "1013:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1013:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1005:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1005:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1047:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1047:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1062:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1062:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1078:3:6",
																								"nodeType": "YulLiteral",
																								"src": "1078:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1083:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1083:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1074:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1074:3:6"
																						},
																						"nativeSrc": "1074:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1074:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1087:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1087:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1070:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:6"
																				},
																				"nativeSrc": "1070:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1070:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1058:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1058:3:6"
																		},
																		"nativeSrc": "1058:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1058:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1040:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1040:6:6"
																},
																"nativeSrc": "1040:51:6",
																"nodeType": "YulFunctionCall",
																"src": "1040:51:6"
															},
															"nativeSrc": "1040:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "1040:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "894:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "964:9:6",
														"nodeType": "YulTypedName",
														"src": "964:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "975:6:6",
														"nodeType": "YulTypedName",
														"src": "975:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "986:4:6",
														"nodeType": "YulTypedName",
														"src": "986:4:6",
														"type": ""
													}
												],
												"src": "894:203:6"
											},
											{
												"body": {
													"nativeSrc": "1134:95:6",
													"nodeType": "YulBlock",
													"src": "1134:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1151:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1151:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1158:3:6",
																				"nodeType": "YulLiteral",
																				"src": "1158:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1163:10:6",
																				"nodeType": "YulLiteral",
																				"src": "1163:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1154:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1154:3:6"
																		},
																		"nativeSrc": "1154:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1154:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:6"
																},
																"nativeSrc": "1144:31:6",
																"nodeType": "YulFunctionCall",
																"src": "1144:31:6"
															},
															"nativeSrc": "1144:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "1144:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1191:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1191:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1194:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1194:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1184:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1184:6:6"
																},
																"nativeSrc": "1184:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1184:15:6"
															},
															"nativeSrc": "1184:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1184:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1215:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1218:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1218:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1208:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:6"
																},
																"nativeSrc": "1208:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1208:15:6"
															},
															"nativeSrc": "1208:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1208:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1102:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1102:127:6"
											},
											{
												"body": {
													"nativeSrc": "1283:79:6",
													"nodeType": "YulBlock",
													"src": "1283:79:6",
													"statements": [
														{
															"nativeSrc": "1293:17:6",
															"nodeType": "YulAssignment",
															"src": "1293:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1305:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1305:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1308:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1308:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1301:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1301:3:6"
																},
																"nativeSrc": "1301:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1301:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "1293:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1293:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1334:22:6",
																"nodeType": "YulBlock",
																"src": "1334:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1336:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1336:16:6"
																			},
																			"nativeSrc": "1336:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1336:18:6"
																		},
																		"nativeSrc": "1336:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1336:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "1325:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1325:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "1331:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1331:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1322:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1322:2:6"
																},
																"nativeSrc": "1322:11:6",
																"nodeType": "YulFunctionCall",
																"src": "1322:11:6"
															},
															"nativeSrc": "1319:37:6",
															"nodeType": "YulIf",
															"src": "1319:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "1234:128:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1265:1:6",
														"nodeType": "YulTypedName",
														"src": "1265:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1268:1:6",
														"nodeType": "YulTypedName",
														"src": "1268:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "1274:4:6",
														"nodeType": "YulTypedName",
														"src": "1274:4:6",
														"type": ""
													}
												],
												"src": "1234:128:6"
											},
											{
												"body": {
													"nativeSrc": "1419:116:6",
													"nodeType": "YulBlock",
													"src": "1419:116:6",
													"statements": [
														{
															"nativeSrc": "1429:20:6",
															"nodeType": "YulAssignment",
															"src": "1429:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1444:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1444:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1447:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1447:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1440:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1440:3:6"
																},
																"nativeSrc": "1440:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1440:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "1429:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1429:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1507:22:6",
																"nodeType": "YulBlock",
																"src": "1507:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1509:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1509:16:6"
																			},
																			"nativeSrc": "1509:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1509:18:6"
																		},
																		"nativeSrc": "1509:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1509:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "1478:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "1478:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1471:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1471:6:6"
																				},
																				"nativeSrc": "1471:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1471:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "1485:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "1485:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "1492:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "1492:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "1501:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "1501:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "1488:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1488:3:6"
																						},
																						"nativeSrc": "1488:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1488:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "1482:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1482:2:6"
																				},
																				"nativeSrc": "1482:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1482:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "1468:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1468:2:6"
																		},
																		"nativeSrc": "1468:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1468:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1461:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1461:6:6"
																},
																"nativeSrc": "1461:45:6",
																"nodeType": "YulFunctionCall",
																"src": "1461:45:6"
															},
															"nativeSrc": "1458:71:6",
															"nodeType": "YulIf",
															"src": "1458:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "1367:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1398:1:6",
														"nodeType": "YulTypedName",
														"src": "1398:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1401:1:6",
														"nodeType": "YulTypedName",
														"src": "1401:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "1407:7:6",
														"nodeType": "YulTypedName",
														"src": "1407:7:6",
														"type": ""
													}
												],
												"src": "1367:168:6"
											},
											{
												"body": {
													"nativeSrc": "1586:171:6",
													"nodeType": "YulBlock",
													"src": "1586:171:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1617:111:6",
																"nodeType": "YulBlock",
																"src": "1617:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1638:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1638:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1645:3:6",
																							"nodeType": "YulLiteral",
																							"src": "1645:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1650:10:6",
																							"nodeType": "YulLiteral",
																							"src": "1650:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1641:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1641:3:6"
																					},
																					"nativeSrc": "1641:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1641:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1631:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:6"
																			},
																			"nativeSrc": "1631:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1631:31:6"
																		},
																		"nativeSrc": "1631:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1682:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1682:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1685:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1685:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1675:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1675:6:6"
																			},
																			"nativeSrc": "1675:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1675:15:6"
																		},
																		"nativeSrc": "1675:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1675:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1713:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:6"
																			},
																			"nativeSrc": "1703:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:15:6"
																		},
																		"nativeSrc": "1703:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "1606:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1606:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1599:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1599:6:6"
																},
																"nativeSrc": "1599:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1599:9:6"
															},
															"nativeSrc": "1596:132:6",
															"nodeType": "YulIf",
															"src": "1596:132:6"
														},
														{
															"nativeSrc": "1737:14:6",
															"nodeType": "YulAssignment",
															"src": "1737:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1746:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1746:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1749:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1749:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1742:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:6"
																},
																"nativeSrc": "1742:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1742:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "1737:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "1737:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "1540:217:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1571:1:6",
														"nodeType": "YulTypedName",
														"src": "1571:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1574:1:6",
														"nodeType": "YulTypedName",
														"src": "1574:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "1580:1:6",
														"nodeType": "YulTypedName",
														"src": "1580:1:6",
														"type": ""
													}
												],
												"src": "1540:217:6"
											},
											{
												"body": {
													"nativeSrc": "1810:77:6",
													"nodeType": "YulBlock",
													"src": "1810:77:6",
													"statements": [
														{
															"nativeSrc": "1820:16:6",
															"nodeType": "YulAssignment",
															"src": "1820:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1831:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1831:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1834:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1834:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1827:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1827:3:6"
																},
																"nativeSrc": "1827:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1827:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "1820:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1820:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1859:22:6",
																"nodeType": "YulBlock",
																"src": "1859:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1861:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1861:16:6"
																			},
																			"nativeSrc": "1861:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1861:18:6"
																		},
																		"nativeSrc": "1861:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1861:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1851:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1851:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "1854:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1854:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1848:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1848:2:6"
																},
																"nativeSrc": "1848:10:6",
																"nodeType": "YulFunctionCall",
																"src": "1848:10:6"
															},
															"nativeSrc": "1845:36:6",
															"nodeType": "YulIf",
															"src": "1845:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "1762:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1793:1:6",
														"nodeType": "YulTypedName",
														"src": "1793:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1796:1:6",
														"nodeType": "YulTypedName",
														"src": "1796:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "1802:3:6",
														"nodeType": "YulTypedName",
														"src": "1802:3:6",
														"type": ""
													}
												],
												"src": "1762:125:6"
											},
											{
												"body": {
													"nativeSrc": "2066:161:6",
													"nodeType": "YulBlock",
													"src": "2066:161:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2083:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2083:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2094:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2094:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2076:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2076:6:6"
																},
																"nativeSrc": "2076:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2076:21:6"
															},
															"nativeSrc": "2076:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "2076:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2117:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2117:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2128:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2128:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2113:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2113:3:6"
																		},
																		"nativeSrc": "2113:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2113:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2133:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2133:2:6",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2106:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2106:6:6"
																},
																"nativeSrc": "2106:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2106:30:6"
															},
															"nativeSrc": "2106:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "2106:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2156:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2156:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2167:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2167:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2152:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2152:3:6"
																		},
																		"nativeSrc": "2152:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2152:18:6"
																	},
																	{
																		"hexValue": "416d6f756e74207a65726f",
																		"kind": "string",
																		"nativeSrc": "2172:13:6",
																		"nodeType": "YulLiteral",
																		"src": "2172:13:6",
																		"type": "",
																		"value": "Amount zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2145:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2145:6:6"
																},
																"nativeSrc": "2145:41:6",
																"nodeType": "YulFunctionCall",
																"src": "2145:41:6"
															},
															"nativeSrc": "2145:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "2145:41:6"
														},
														{
															"nativeSrc": "2195:26:6",
															"nodeType": "YulAssignment",
															"src": "2195:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2207:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2207:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2218:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2218:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2203:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2203:3:6"
																},
																"nativeSrc": "2203:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2203:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2195:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2195:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e7781ea458ec1953907f64a217bfd3ffe515f3c1737fce4ecf66ca84f23798b0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1892:335:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2043:9:6",
														"nodeType": "YulTypedName",
														"src": "2043:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2057:4:6",
														"nodeType": "YulTypedName",
														"src": "2057:4:6",
														"type": ""
													}
												],
												"src": "1892:335:6"
											},
											{
												"body": {
													"nativeSrc": "2361:145:6",
													"nodeType": "YulBlock",
													"src": "2361:145:6",
													"statements": [
														{
															"nativeSrc": "2371:26:6",
															"nodeType": "YulAssignment",
															"src": "2371:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2383:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2383:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2394:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2394:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2379:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2379:3:6"
																},
																"nativeSrc": "2379:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2379:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2371:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2371:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2413:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2413:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2428:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2428:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2444:3:6",
																								"nodeType": "YulLiteral",
																								"src": "2444:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2449:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2449:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2440:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2440:3:6"
																						},
																						"nativeSrc": "2440:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2440:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2453:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2453:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2436:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2436:3:6"
																				},
																				"nativeSrc": "2436:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2436:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2424:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2424:3:6"
																		},
																		"nativeSrc": "2424:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2424:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2406:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2406:6:6"
																},
																"nativeSrc": "2406:51:6",
																"nodeType": "YulFunctionCall",
																"src": "2406:51:6"
															},
															"nativeSrc": "2406:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "2406:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2477:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2477:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2488:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2488:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2473:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2473:3:6"
																		},
																		"nativeSrc": "2473:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2473:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2493:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2493:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2466:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2466:6:6"
																},
																"nativeSrc": "2466:34:6",
																"nodeType": "YulFunctionCall",
																"src": "2466:34:6"
															},
															"nativeSrc": "2466:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "2466:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2232:274:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2322:9:6",
														"nodeType": "YulTypedName",
														"src": "2322:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2333:6:6",
														"nodeType": "YulTypedName",
														"src": "2333:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2341:6:6",
														"nodeType": "YulTypedName",
														"src": "2341:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2352:4:6",
														"nodeType": "YulTypedName",
														"src": "2352:4:6",
														"type": ""
													}
												],
												"src": "2232:274:6"
											},
											{
												"body": {
													"nativeSrc": "2589:199:6",
													"nodeType": "YulBlock",
													"src": "2589:199:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2635:16:6",
																"nodeType": "YulBlock",
																"src": "2635:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2644:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2644:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2647:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2647:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2637:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2637:6:6"
																			},
																			"nativeSrc": "2637:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2637:12:6"
																		},
																		"nativeSrc": "2637:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2637:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2610:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2610:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2619:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2619:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2606:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2606:3:6"
																		},
																		"nativeSrc": "2606:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2606:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2631:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2631:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2602:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2602:3:6"
																},
																"nativeSrc": "2602:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2602:32:6"
															},
															"nativeSrc": "2599:52:6",
															"nodeType": "YulIf",
															"src": "2599:52:6"
														},
														{
															"nativeSrc": "2660:29:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2660:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2679:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2679:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2673:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2673:5:6"
																},
																"nativeSrc": "2673:16:6",
																"nodeType": "YulFunctionCall",
																"src": "2673:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2664:5:6",
																	"nodeType": "YulTypedName",
																	"src": "2664:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2742:16:6",
																"nodeType": "YulBlock",
																"src": "2742:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2751:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2751:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2754:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2754:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2744:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2744:6:6"
																			},
																			"nativeSrc": "2744:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2744:12:6"
																		},
																		"nativeSrc": "2744:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2744:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2711:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2711:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2732:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "2732:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2725:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2725:6:6"
																						},
																						"nativeSrc": "2725:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2725:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2718:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2718:6:6"
																				},
																				"nativeSrc": "2718:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2718:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2708:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2708:2:6"
																		},
																		"nativeSrc": "2708:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2701:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2701:6:6"
																},
																"nativeSrc": "2701:40:6",
																"nodeType": "YulFunctionCall",
																"src": "2701:40:6"
															},
															"nativeSrc": "2698:60:6",
															"nodeType": "YulIf",
															"src": "2698:60:6"
														},
														{
															"nativeSrc": "2767:15:6",
															"nodeType": "YulAssignment",
															"src": "2767:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "2777:5:6",
																"nodeType": "YulIdentifier",
																"src": "2777:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2767:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2767:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "2511:277:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2555:9:6",
														"nodeType": "YulTypedName",
														"src": "2555:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2566:7:6",
														"nodeType": "YulTypedName",
														"src": "2566:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2578:6:6",
														"nodeType": "YulTypedName",
														"src": "2578:6:6",
														"type": ""
													}
												],
												"src": "2511:277:6"
											},
											{
												"body": {
													"nativeSrc": "2967:158:6",
													"nodeType": "YulBlock",
													"src": "2967:158:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2984:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2984:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2995:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2995:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2977:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2977:6:6"
																},
																"nativeSrc": "2977:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2977:21:6"
															},
															"nativeSrc": "2977:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "2977:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3018:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3018:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3029:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3029:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3014:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3014:3:6"
																		},
																		"nativeSrc": "3014:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3014:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3034:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3034:1:6",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3007:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3007:6:6"
																},
																"nativeSrc": "3007:29:6",
																"nodeType": "YulFunctionCall",
																"src": "3007:29:6"
															},
															"nativeSrc": "3007:29:6",
															"nodeType": "YulExpressionStatement",
															"src": "3007:29:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3056:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3056:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3067:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3067:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3052:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3052:3:6"
																		},
																		"nativeSrc": "3052:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3052:18:6"
																	},
																	{
																		"hexValue": "4e6f74206f776e6572",
																		"kind": "string",
																		"nativeSrc": "3072:11:6",
																		"nodeType": "YulLiteral",
																		"src": "3072:11:6",
																		"type": "",
																		"value": "Not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3045:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3045:6:6"
																},
																"nativeSrc": "3045:39:6",
																"nodeType": "YulFunctionCall",
																"src": "3045:39:6"
															},
															"nativeSrc": "3045:39:6",
															"nodeType": "YulExpressionStatement",
															"src": "3045:39:6"
														},
														{
															"nativeSrc": "3093:26:6",
															"nodeType": "YulAssignment",
															"src": "3093:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3105:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3105:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3116:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3116:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3101:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3101:3:6"
																},
																"nativeSrc": "3101:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3101:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3093:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3093:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2793:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2944:9:6",
														"nodeType": "YulTypedName",
														"src": "2944:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2958:4:6",
														"nodeType": "YulTypedName",
														"src": "2958:4:6",
														"type": ""
													}
												],
												"src": "2793:332:6"
											},
											{
												"body": {
													"nativeSrc": "3304:166:6",
													"nodeType": "YulBlock",
													"src": "3304:166:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3321:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3321:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3332:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3332:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3314:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3314:6:6"
																},
																"nativeSrc": "3314:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3314:21:6"
															},
															"nativeSrc": "3314:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3314:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3355:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3366:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3366:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3351:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:6"
																		},
																		"nativeSrc": "3351:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3351:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3371:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3371:2:6",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3344:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:6"
																},
																"nativeSrc": "3344:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3344:30:6"
															},
															"nativeSrc": "3344:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3344:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3394:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3394:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3405:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3405:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3390:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3390:3:6"
																		},
																		"nativeSrc": "3390:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3390:18:6"
																	},
																	{
																		"hexValue": "5265776172642072617465207a65726f",
																		"kind": "string",
																		"nativeSrc": "3410:18:6",
																		"nodeType": "YulLiteral",
																		"src": "3410:18:6",
																		"type": "",
																		"value": "Reward rate zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3383:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:6"
																},
																"nativeSrc": "3383:46:6",
																"nodeType": "YulFunctionCall",
																"src": "3383:46:6"
															},
															"nativeSrc": "3383:46:6",
															"nodeType": "YulExpressionStatement",
															"src": "3383:46:6"
														},
														{
															"nativeSrc": "3438:26:6",
															"nodeType": "YulAssignment",
															"src": "3438:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3450:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3450:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3461:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3461:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3446:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3446:3:6"
																},
																"nativeSrc": "3446:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3446:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3438:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3438:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f9693727a7647b970cb4cc403bee711f554db2ecad00498574b9c0de963d710e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3130:340:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3281:9:6",
														"nodeType": "YulTypedName",
														"src": "3281:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3295:4:6",
														"nodeType": "YulTypedName",
														"src": "3295:4:6",
														"type": ""
													}
												],
												"src": "3130:340:6"
											},
											{
												"body": {
													"nativeSrc": "3556:103:6",
													"nodeType": "YulBlock",
													"src": "3556:103:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3602:16:6",
																"nodeType": "YulBlock",
																"src": "3602:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3611:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3611:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3614:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3614:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3604:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3604:6:6"
																			},
																			"nativeSrc": "3604:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3604:12:6"
																		},
																		"nativeSrc": "3604:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3604:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3577:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3577:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3586:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3586:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3573:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3573:3:6"
																		},
																		"nativeSrc": "3573:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3573:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3598:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3598:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3569:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3569:3:6"
																},
																"nativeSrc": "3569:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3569:32:6"
															},
															"nativeSrc": "3566:52:6",
															"nodeType": "YulIf",
															"src": "3566:52:6"
														},
														{
															"nativeSrc": "3627:26:6",
															"nodeType": "YulAssignment",
															"src": "3627:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3643:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3643:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3637:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3637:5:6"
																},
																"nativeSrc": "3637:16:6",
																"nodeType": "YulFunctionCall",
																"src": "3637:16:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3627:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3475:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3522:9:6",
														"nodeType": "YulTypedName",
														"src": "3522:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3533:7:6",
														"nodeType": "YulTypedName",
														"src": "3533:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3545:6:6",
														"nodeType": "YulTypedName",
														"src": "3545:6:6",
														"type": ""
													}
												],
												"src": "3475:184:6"
											},
											{
												"body": {
													"nativeSrc": "3838:176:6",
													"nodeType": "YulBlock",
													"src": "3838:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3855:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3855:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3866:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3866:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3848:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3848:6:6"
																},
																"nativeSrc": "3848:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3848:21:6"
															},
															"nativeSrc": "3848:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3848:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3889:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3889:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3900:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3900:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3885:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3885:3:6"
																		},
																		"nativeSrc": "3885:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3885:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3905:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3905:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3878:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3878:6:6"
																},
																"nativeSrc": "3878:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3878:30:6"
															},
															"nativeSrc": "3878:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3878:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3939:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3939:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3924:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3924:3:6"
																		},
																		"nativeSrc": "3924:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3924:18:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e742072657761726420746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "3944:28:6",
																		"nodeType": "YulLiteral",
																		"src": "3944:28:6",
																		"type": "",
																		"value": "Insufficient reward tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3917:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3917:6:6"
																},
																"nativeSrc": "3917:56:6",
																"nodeType": "YulFunctionCall",
																"src": "3917:56:6"
															},
															"nativeSrc": "3917:56:6",
															"nodeType": "YulExpressionStatement",
															"src": "3917:56:6"
														},
														{
															"nativeSrc": "3982:26:6",
															"nodeType": "YulAssignment",
															"src": "3982:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3994:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3994:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4005:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4005:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3990:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3990:3:6"
																},
																"nativeSrc": "3990:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3990:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3982:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3982:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_feb9ed92c05bf894f55a1d03e984cee0770acd4ac6704cea1f36818e6e0544c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3664:350:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3815:9:6",
														"nodeType": "YulTypedName",
														"src": "3815:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3829:4:6",
														"nodeType": "YulTypedName",
														"src": "3829:4:6",
														"type": ""
													}
												],
												"src": "3664:350:6"
											},
											{
												"body": {
													"nativeSrc": "4176:214:6",
													"nodeType": "YulBlock",
													"src": "4176:214:6",
													"statements": [
														{
															"nativeSrc": "4186:26:6",
															"nodeType": "YulAssignment",
															"src": "4186:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4198:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4198:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4209:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4209:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4194:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4194:3:6"
																},
																"nativeSrc": "4194:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4194:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4186:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4186:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4228:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4228:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4243:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4243:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4259:3:6",
																								"nodeType": "YulLiteral",
																								"src": "4259:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4264:1:6",
																								"nodeType": "YulLiteral",
																								"src": "4264:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4255:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4255:3:6"
																						},
																						"nativeSrc": "4255:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4255:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4268:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4268:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4251:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4251:3:6"
																				},
																				"nativeSrc": "4251:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4251:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4239:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4239:3:6"
																		},
																		"nativeSrc": "4239:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4239:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4221:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4221:6:6"
																},
																"nativeSrc": "4221:51:6",
																"nodeType": "YulFunctionCall",
																"src": "4221:51:6"
															},
															"nativeSrc": "4221:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "4221:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4292:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4292:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4303:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4303:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4288:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4288:3:6"
																		},
																		"nativeSrc": "4288:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4288:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "4312:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4312:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4328:3:6",
																								"nodeType": "YulLiteral",
																								"src": "4328:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4333:1:6",
																								"nodeType": "YulLiteral",
																								"src": "4333:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4324:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4324:3:6"
																						},
																						"nativeSrc": "4324:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4324:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4337:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4337:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4320:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4320:3:6"
																				},
																				"nativeSrc": "4320:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4320:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4308:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4308:3:6"
																		},
																		"nativeSrc": "4308:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4308:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4281:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4281:6:6"
																},
																"nativeSrc": "4281:60:6",
																"nodeType": "YulFunctionCall",
																"src": "4281:60:6"
															},
															"nativeSrc": "4281:60:6",
															"nodeType": "YulExpressionStatement",
															"src": "4281:60:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4361:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4361:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4372:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4372:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4357:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4357:3:6"
																		},
																		"nativeSrc": "4357:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4357:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4377:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4377:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4350:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4350:6:6"
																},
																"nativeSrc": "4350:34:6",
																"nodeType": "YulFunctionCall",
																"src": "4350:34:6"
															},
															"nativeSrc": "4350:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "4350:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4019:371:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4129:9:6",
														"nodeType": "YulTypedName",
														"src": "4129:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4140:6:6",
														"nodeType": "YulTypedName",
														"src": "4140:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4148:6:6",
														"nodeType": "YulTypedName",
														"src": "4148:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4156:6:6",
														"nodeType": "YulTypedName",
														"src": "4156:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4167:4:6",
														"nodeType": "YulTypedName",
														"src": "4167:4:6",
														"type": ""
													}
												],
												"src": "4019:371:6"
											},
											{
												"body": {
													"nativeSrc": "4569:180:6",
													"nodeType": "YulBlock",
													"src": "4569:180:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4586:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4586:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4597:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4597:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4579:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4579:6:6"
																},
																"nativeSrc": "4579:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4579:21:6"
															},
															"nativeSrc": "4579:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4579:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4620:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4620:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4631:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4631:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4616:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4616:3:6"
																		},
																		"nativeSrc": "4616:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4616:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4636:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4636:2:6",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4609:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4609:6:6"
																},
																"nativeSrc": "4609:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4609:30:6"
															},
															"nativeSrc": "4609:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4609:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4659:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4659:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4670:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4670:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4655:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4655:3:6"
																		},
																		"nativeSrc": "4655:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4655:18:6"
																	},
																	{
																		"hexValue": "50726576696f75732072657761726473206e6f7420636f6d706c65746564",
																		"kind": "string",
																		"nativeSrc": "4675:32:6",
																		"nodeType": "YulLiteral",
																		"src": "4675:32:6",
																		"type": "",
																		"value": "Previous rewards not completed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4648:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4648:6:6"
																},
																"nativeSrc": "4648:60:6",
																"nodeType": "YulFunctionCall",
																"src": "4648:60:6"
															},
															"nativeSrc": "4648:60:6",
															"nodeType": "YulExpressionStatement",
															"src": "4648:60:6"
														},
														{
															"nativeSrc": "4717:26:6",
															"nodeType": "YulAssignment",
															"src": "4717:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4729:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4729:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4740:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4740:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4725:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4725:3:6"
																},
																"nativeSrc": "4725:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4725:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4717:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4717:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_740db3786ffac1c1b57d0374fe48d0baae54b340ac11eee4d95d61c124e6865d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4395:354:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4546:9:6",
														"nodeType": "YulTypedName",
														"src": "4546:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4560:4:6",
														"nodeType": "YulTypedName",
														"src": "4560:4:6",
														"type": ""
													}
												],
												"src": "4395:354:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_e7781ea458ec1953907f64a217bfd3ffe515f3c1737fce4ecf66ca84f23798b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Amount zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"Not owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f9693727a7647b970cb4cc403bee711f554db2ecad00498574b9c0de963d710e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Reward rate zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_feb9ed92c05bf894f55a1d03e984cee0770acd4ac6704cea1f36818e6e0544c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Insufficient reward tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_740db3786ffac1c1b57d0374fe48d0baae54b340ac11eee4d95d61c124e6865d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Previous rewards not completed\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"791": [
									{
										"length": 32,
										"start": 478
									},
									{
										"length": 32,
										"start": 1071
									},
									{
										"length": 32,
										"start": 2244
									}
								],
								"794": [
									{
										"length": 32,
										"start": 662
									},
									{
										"length": 32,
										"start": 1528
									},
									{
										"length": 32,
										"start": 1925
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610126575f3560e01c80637519ab50116100a9578063a694fc3a1161006e578063a694fc3a14610263578063c0ed00c914610276578063cd3daf9d14610289578063d1af0c7d14610291578063df136d65146102b8575f5ffd5b80637519ab50146102185780637b0a47ee1461022157806380faa57d1461022a5780638b876347146102325780638da5cb5b14610251575f5ffd5b80633c6b16ab116100ef5780633c6b16ab146101965780633d18b912146101a957806367d3b488146101b157806370a08231146101ba57806372f702f3146101d9575f5ffd5b80628cc2621461012a5780630700037d146101505780630fb5a6b41461016f57806318160ddd146101785780632e1a7d4d14610181575b5f5ffd5b61013d6101383660046109f5565b6102c1565b6040519081526020015b60405180910390f35b61013d61015e3660046109f5565b60076020525f908152604090205481565b61013d60015481565b61013d60095481565b61019461018f366004610a22565b61033c565b005b6101946101a4366004610a22565b6104a7565b6101946106df565b61013d60025481565b61013d6101c83660046109f5565b60086020525f908152604090205481565b6102007f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610147565b61013d60035481565b61013d60045481565b61013d6107b8565b61013d6102403660046109f5565b60066020525f908152604090205481565b5f54610200906001600160a01b031681565b610194610271366004610a22565b6107d0565b610194610284366004610a22565b6108fb565b61013d610996565b6102007f000000000000000000000000000000000000000000000000000000000000000081565b61013d60055481565b6001600160a01b0381165f908152600760209081526040808320546006909252822054670de0b6b3a7640000906102f6610996565b6103009190610a4d565b6001600160a01b0385165f908152600860205260409020546103229190610a60565b61032c9190610a77565b6103369190610a96565b92915050565b33610345610996565b6005556103506107b8565b6003556001600160a01b038116156103965761036b816102c1565b6001600160a01b0382165f908152600760209081526040808320939093556005546006909152919020555b5f82116103d85760405162461bcd60e51b815260206004820152600b60248201526a416d6f756e74207a65726f60a81b60448201526064015b60405180910390fd5b335f90815260086020526040812080548492906103f6908490610a4d565b925050819055508160095f82825461040e9190610a4d565b909155505060405163a9059cbb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044015b6020604051808303815f875af115801561047e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a29190610aa9565b505050565b5f546001600160a01b031633146104ec5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064016103cf565b5f6104f5610996565b6005556105006107b8565b6003556001600160a01b038116156105465761051b816102c1565b6001600160a01b0382165f908152600760209081526040808320939093556005546006909152919020555b60025442106105645760015461055c9083610a77565b60045561059f565b5f600454426002546105769190610a4d565b6105809190610a60565b6001549091506105908483610a96565b61059a9190610a77565b600455505b5f600454116105e35760405162461bcd60e51b815260206004820152601060248201526f5265776172642072617465207a65726f60801b60448201526064016103cf565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610645573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106699190610ac8565b6001546004546106799190610a60565b11156106c75760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e742072657761726420746f6b656e7300000000000060448201526064016103cf565b6001546106d49042610a96565b600255505042600355565b336106e8610996565b6005556106f36107b8565b6003556001600160a01b038116156107395761070e816102c1565b6001600160a01b0382165f908152600760209081526040808320939093556005546006909152919020555b335f9081526007602052604090205480156107b457335f81815260076020526040808220919091555163a9059cbb60e01b81526004810191909152602481018290526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401610462565b5050565b5f60025442106107c9575060025490565b425b905090565b336107d9610996565b6005556107e46107b8565b6003556001600160a01b0381161561082a576107ff816102c1565b6001600160a01b0382165f908152600760209081526040808320939093556005546006909152919020555b5f82116108675760405162461bcd60e51b815260206004820152600b60248201526a416d6f756e74207a65726f60a81b60448201526064016103cf565b335f9081526008602052604081208054849290610885908490610a96565b925050819055508160095f82825461089d9190610a96565b90915550506040516323b872dd60e01b8152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401610462565b5f546001600160a01b031633146109405760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064016103cf565b42600254106109915760405162461bcd60e51b815260206004820152601e60248201527f50726576696f75732072657761726473206e6f7420636f6d706c65746564000060448201526064016103cf565b600155565b5f6009545f036109a7575060055490565b6009546003546109b56107b8565b6109bf9190610a4d565b6004546109cc9190610a60565b6109de90670de0b6b3a7640000610a60565b6109e89190610a77565b6005546107cb9190610a96565b5f60208284031215610a05575f5ffd5b81356001600160a01b0381168114610a1b575f5ffd5b9392505050565b5f60208284031215610a32575f5ffd5b5035919050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561033657610336610a39565b808202811582820484141761033657610336610a39565b5f82610a9157634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561033657610336610a39565b5f60208284031215610ab9575f5ffd5b81518015158114610a1b575f5ffd5b5f60208284031215610ad8575f5ffd5b505191905056fea26469706673582212208d94054b8b22d3e370d9406a8b4a167c056ed608c038381b237e8596669be12b64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x126 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7519AB50 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xC0ED00C9 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x2B8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7519AB50 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x251 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x3C6B16AB GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x67D3B488 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x1D9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x181 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13D PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13D PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x33C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x194 PUSH2 0x1A4 CALLDATASIZE PUSH1 0x4 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x6DF JUMP JUMPDEST PUSH2 0x13D PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x200 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x147 JUMP JUMPDEST PUSH2 0x13D PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13D PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x200 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x13D PUSH2 0x996 JUMP JUMPDEST PUSH2 0x200 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x13D PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x2F6 PUSH2 0x996 JUMP JUMPDEST PUSH2 0x300 SWAP2 SWAP1 PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x32C SWAP2 SWAP1 PUSH2 0xA77 JUMP JUMPDEST PUSH2 0x336 SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH2 0x345 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x350 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x396 JUMPI PUSH2 0x36B DUP2 PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SLOAD PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH0 DUP3 GT PUSH2 0x3D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x416D6F756E74207A65726F PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x3F6 SWAP1 DUP5 SWAP1 PUSH2 0xA4D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x40E SWAP2 SWAP1 PUSH2 0xA4D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x47E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CF JUMP JUMPDEST PUSH0 PUSH2 0x4F5 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x500 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x546 JUMPI PUSH2 0x51B DUP2 PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SLOAD PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT PUSH2 0x564 JUMPI PUSH1 0x1 SLOAD PUSH2 0x55C SWAP1 DUP4 PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0x59F JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD TIMESTAMP PUSH1 0x2 SLOAD PUSH2 0x576 SWAP2 SWAP1 PUSH2 0xA4D JUMP JUMPDEST PUSH2 0x580 SWAP2 SWAP1 PUSH2 0xA60 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH2 0x590 DUP5 DUP4 PUSH2 0xA96 JUMP JUMPDEST PUSH2 0x59A SWAP2 SWAP1 PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x4 SSTORE POP JUMPDEST PUSH0 PUSH1 0x4 SLOAD GT PUSH2 0x5E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x5265776172642072617465207A65726F PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x645 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x669 SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x4 SLOAD PUSH2 0x679 SWAP2 SWAP1 PUSH2 0xA60 JUMP JUMPDEST GT ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742072657761726420746F6B656E73000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x6D4 SWAP1 TIMESTAMP PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x2 SSTORE POP POP TIMESTAMP PUSH1 0x3 SSTORE JUMP JUMPDEST CALLER PUSH2 0x6E8 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x6F3 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x739 JUMPI PUSH2 0x70E DUP2 PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SLOAD PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x7B4 JUMPI CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH2 0x462 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD TIMESTAMP LT PUSH2 0x7C9 JUMPI POP PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH2 0x7D9 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x7E4 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x82A JUMPI PUSH2 0x7FF DUP2 PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SLOAD PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH0 DUP3 GT PUSH2 0x867 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x416D6F756E74207A65726F PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CF JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x885 SWAP1 DUP5 SWAP1 PUSH2 0xA96 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x89D SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH2 0x462 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x940 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CF JUMP JUMPDEST TIMESTAMP PUSH1 0x2 SLOAD LT PUSH2 0x991 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726576696F75732072657761726473206E6F7420636F6D706C657465640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD PUSH0 SUB PUSH2 0x9A7 JUMPI POP PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x3 SLOAD PUSH2 0x9B5 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x9BF SWAP2 SWAP1 PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x9CC SWAP2 SWAP1 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x9DE SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x7CB SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA05 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA1B JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA32 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x336 JUMPI PUSH2 0x336 PUSH2 0xA39 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x336 JUMPI PUSH2 0x336 PUSH2 0xA39 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xA91 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x336 JUMPI PUSH2 0x336 PUSH2 0xA39 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA1B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 SWAP5 SDIV 0x4B DUP12 0x22 0xD3 CALLF 0x70D9 BLOCKHASH PUSH11 0x8B4A167C056ED608C03838 SHL 0x23 PUSH31 0x8596669BE12B64736F6C634300081D00330000000000000000000000000000 ",
							"sourceMap": "1128:6379:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6903:466;;;;;;:::i;:::-;;:::i;:::-;;;451:25:6;;;439:2;424:18;6903:466:5;;;;;;;;1803:39;;;;;;:::i;:::-;;;;;;;;;;;;;;1311:20;;;;;;1968:23;;;;;;5748:249;;;;;;:::i;:::-;;:::i;:::-;;4195:1063;;;;;;:::i;:::-;;:::i;6026:239::-;;;:::i;1375:20::-;;;;;;1884:41;;;;;;:::i;:::-;;;;;;;;;;;;;;1159:36;;;;;;;;-1:-1:-1;;;;;850:32:6;;;832:51;;820:2;805:18;1159:36:5;672:217:6;1430:21:5;;;;;;1518:22;;;;;;6306:144;;;:::i;1701:54::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1251:20;;;;;-1:-1:-1;;;;;1251:20:5;;;5411:308;;;;;;:::i;:::-;;:::i;3594:181::-;;;;;;:::i;:::-;;:::i;6509:353::-;;;:::i;1202:36::-;;;;;1591:32;;;;;;6903:466;-1:-1:-1;;;;;7344:17:5;;6958:4;7344:17;;;:7;:17;;;;;;;;;7272:22;:32;;;;;;7323:4;;7129:16;:14;:16::i;:::-;:175;;;;:::i;:::-;-1:-1:-1;;;;;7092:19:5;;;;;;:9;:19;;;;;;:213;;;;:::i;:::-;7091:236;;;;:::i;:::-;:270;;;;:::i;:::-;7084:277;6903:466;-1:-1:-1;;6903:466:5:o;5748:249::-;5802:10;2871:16;:14;:16::i;:::-;2848:20;:39;2910:26;:24;:26::i;:::-;2898:9;:38;-1:-1:-1;;;;;2961:22:5;;;2957:341;;3150:16;3157:8;3150:6;:16::i;:::-;-1:-1:-1;;;;;3130:17:5;;;;;;:7;:17;;;;;;;;:36;;;;3266:20;;3231:22;:32;;;;;;:55;2957:341;5843:1:::1;5833:7;:11;5825:35;;;::::0;-1:-1:-1;;;5825:35:5;;2094:2:6;5825:35:5::1;::::0;::::1;2076:21:6::0;2133:2;2113:18;;;2106:30;-1:-1:-1;;;2152:18:6;;;2145:41;2203:18;;5825:35:5::1;;;;;;;;;5881:10;5871:21;::::0;;;:9:::1;:21;::::0;;;;:32;;5896:7;;5871:21;:32:::1;::::0;5896:7;;5871:32:::1;:::i;:::-;;;;;;;;5929:7;5914:11;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5947:42:5::1;::::0;-1:-1:-1;;;5947:42:5;;5969:10:::1;5947:42;::::0;::::1;2406:51:6::0;2473:18;;;2466:34;;;5947:12:5::1;-1:-1:-1::0;;;;;5947:21:5::1;::::0;::::1;::::0;2379:18:6;;5947:42:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5748:249:::0;;:::o;4195:1063::-;2108:5;;-1:-1:-1;;;;;2108:5:5;2094:10;:19;2086:41;;;;-1:-1:-1;;;2086:41:5;;2995:2:6;2086:41:5;;;2977:21:6;3034:1;3014:18;;;3007:29;-1:-1:-1;;;3052:18:6;;;3045:39;3101:18;;2086:41:5;2793:332:6;2086:41:5;4277:1:::1;2871:16;:14;:16::i;:::-;2848:20;:39:::0;2910:26:::1;:24;:26::i;:::-;2898:9;:38:::0;-1:-1:-1;;;;;2961:22:5;::::1;::::0;2957:341:::1;;3150:16;3157:8;3150:6;:16::i;:::-;-1:-1:-1::0;;;;;3130:17:5;::::1;;::::0;;;:7:::1;:17;::::0;;;;;;;:36;;;;3266:20:::1;::::0;3231:22:::1;:32:::0;;;;;;:55;2957:341:::1;4364:8:::2;;4345:15;:27;4341:515;;4412:8;::::0;4402:18:::2;::::0;:7;:18:::2;:::i;:::-;4389:10;:31:::0;4341:515:::2;;;4586:14;4634:10;;4615:15;4604:8;;:26;;;;:::i;:::-;4603:41;;;;:::i;:::-;4836:8;::::0;4586:58;;-1:-1:-1;4813:19:5::2;4825:7:::0;4586:58;4813:19:::2;:::i;:::-;4812:32;;;;:::i;:::-;4799:10;:45:::0;-1:-1:-1;4341:515:5::2;4889:1;4876:10;;:14;4868:43;;;::::0;-1:-1:-1;;;4868:43:5;;3332:2:6;4868:43:5::2;::::0;::::2;3314:21:6::0;3371:2;3351:18;;;3344:30;-1:-1:-1;;;3390:18:6;;;3383:46;3446:18;;4868:43:5::2;3130:340:6::0;4868:43:5::2;5012:37;::::0;-1:-1:-1;;;5012:37:5;;5043:4:::2;5012:37;::::0;::::2;832:51:6::0;5012:12:5::2;-1:-1:-1::0;;;;;5012:22:5::2;::::0;::::2;::::0;805:18:6;;5012:37:5::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5000:8;;4987:10;;:21;;;;:::i;:::-;:62;;4965:138;;;::::0;-1:-1:-1;;;4965:138:5;;3866:2:6;4965:138:5::2;::::0;::::2;3848:21:6::0;3905:2;3885:18;;;3878:30;3944:28;3924:18;;;3917:56;3990:18;;4965:138:5::2;3664:350:6::0;4965:138:5::2;5173:8;::::0;5155:26:::2;::::0;:15:::2;:26;:::i;:::-;5144:8;:37:::0;-1:-1:-1;;5235:15:5::2;5223:9;:27:::0;4195:1063::o;6026:239::-;6069:10;2871:16;:14;:16::i;:::-;2848:20;:39;2910:26;:24;:26::i;:::-;2898:9;:38;-1:-1:-1;;;;;2961:22:5;;;2957:341;;3150:16;3157:8;3150:6;:16::i;:::-;-1:-1:-1;;;;;3130:17:5;;;;;;:7;:17;;;;;;;;:36;;;;3266:20;;3231:22;:32;;;;;;:55;2957:341;6114:10:::1;6092:11;6106:19:::0;;;:7:::1;:19;::::0;;;;;6140:10;;6136:122:::1;;6175:10;6189:1;6167:19:::0;;;:7:::1;:19;::::0;;;;;:23;;;;6205:41;-1:-1:-1;;;6205:41:5;;::::1;::::0;::::1;2406:51:6::0;;;;2473:18;;;2466:34;;;-1:-1:-1;;;;;6205:12:5::1;:21;::::0;::::1;::::0;2379:18:6;;6205:41:5::1;2232:274:6::0;6136:122:5::1;6081:184;6026:239:::0;:::o;6306:144::-;6363:4;6405:8;;6387:15;:26;:55;;-1:-1:-1;6434:8:5;;;6306:144::o;6387:55::-;6416:15;6387:55;6380:62;;6306:144;:::o;5411:308::-;5462:10;2871:16;:14;:16::i;:::-;2848:20;:39;2910:26;:24;:26::i;:::-;2898:9;:38;-1:-1:-1;;;;;2961:22:5;;;2957:341;;3150:16;3157:8;3150:6;:16::i;:::-;-1:-1:-1;;;;;3130:17:5;;;;;;:7;:17;;;;;;;;:36;;;;3266:20;;3231:22;:32;;;;;;:55;2957:341;5503:1:::1;5493:7;:11;5485:35;;;::::0;-1:-1:-1;;;5485:35:5;;2094:2:6;5485:35:5::1;::::0;::::1;2076:21:6::0;2133:2;2113:18;;;2106:30;-1:-1:-1;;;2152:18:6;;;2145:41;2203:18;;5485:35:5::1;1892:335:6::0;5485:35:5::1;5541:10;5531:21;::::0;;;:9:::1;:21;::::0;;;;:32;;5556:7;;5531:21;:32:::1;::::0;5556:7;;5531:32:::1;:::i;:::-;;;;;;;;5589:7;5574:11;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5650:61:5::1;::::0;-1:-1:-1;;;5650:61:5;;5676:10:::1;5650:61;::::0;::::1;4221:51:6::0;5696:4:5::1;4288:18:6::0;;;4281:60;4357:18;;;4350:34;;;5650:12:5::1;-1:-1:-1::0;;;;;5650:25:5::1;::::0;::::1;::::0;4194:18:6;;5650:61:5::1;4019:371:6::0;3594:181:5;2108:5;;-1:-1:-1;;;;;2108:5:5;2094:10;:19;2086:41;;;;-1:-1:-1;;;2086:41:5;;2995:2:6;2086:41:5;;;2977:21:6;3034:1;3014:18;;;3007:29;-1:-1:-1;;;3052:18:6;;;3045:39;3101:18;;2086:41:5;2793:332:6;2086:41:5;3686:15:::1;3675:8;;:26;3667:69;;;::::0;-1:-1:-1;;;3667:69:5;;4597:2:6;3667:69:5::1;::::0;::::1;4579:21:6::0;4636:2;4616:18;;;4609:30;4675:32;4655:18;;;4648:60;4725:18;;3667:69:5::1;4395:354:6::0;3667:69:5::1;3747:8;:20:::0;3594:181::o;6509:353::-;6556:4;6577:11;;6592:1;6577:16;6573:49;;-1:-1:-1;6602:20:5;;;6509:353::o;6573:49::-;6820:11;;6735:9;;6706:26;:24;:26::i;:::-;:38;;;;:::i;:::-;6678:10;;:67;;;;:::i;:::-;:109;;6783:4;6678:109;:::i;:::-;6677:154;;;;:::i;:::-;6640:20;;:191;;;;:::i;14:286:6:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:6;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:6:o;487:180::-;546:6;599:2;587:9;578:7;574:23;570:32;567:52;;;615:1;612;605:12;567:52;-1:-1:-1;638:23:6;;487:180;-1:-1:-1;487:180:6:o;1102:127::-;1163:10;1158:3;1154:20;1151:1;1144:31;1194:4;1191:1;1184:15;1218:4;1215:1;1208:15;1234:128;1301:9;;;1322:11;;;1319:37;;;1336:18;;:::i;1367:168::-;1440:9;;;1471;;1488:15;;;1482:22;;1468:37;1458:71;;1509:18;;:::i;1540:217::-;1580:1;1606;1596:132;;1650:10;1645:3;1641:20;1638:1;1631:31;1685:4;1682:1;1675:15;1713:4;1710:1;1703:15;1596:132;-1:-1:-1;1742:9:6;;1540:217::o;1762:125::-;1827:9;;;1848:10;;;1845:36;;;1861:18;;:::i;2511:277::-;2578:6;2631:2;2619:9;2610:7;2606:23;2602:32;2599:52;;;2647:1;2644;2637:12;2599:52;2679:9;2673:16;2732:5;2725:13;2718:21;2711:5;2708:32;2698:60;;2754:1;2751;2744:12;3475:184;3545:6;3598:2;3586:9;3577:7;3573:23;3569:32;3566:52;;;3614:1;3611;3604:12;3566:52;-1:-1:-1;3637:16:6;;3475:184;-1:-1:-1;3475:184:6:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "567400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address)": "2559",
								"duration()": "2351",
								"earned(address)": "infinite",
								"finishAt()": "2350",
								"getReward()": "infinite",
								"lastTimeRewardApplicable()": "4487",
								"notifyRewardAmount(uint256)": "infinite",
								"owner()": "2446",
								"rewardPerToken()": "infinite",
								"rewardPerTokenStored()": "2393",
								"rewardRate()": "2328",
								"rewards(address)": "2516",
								"rewardsToken()": "infinite",
								"setRewardDuration(uint256)": "26627",
								"stake(uint256)": "infinite",
								"stakingToken()": "infinite",
								"totalSupply()": "2373",
								"updatedAt()": "2306",
								"userRewardPerTokenPaid(address)": "2559",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1128,
									"end": 7507,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 1128,
									"end": 7507,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1128,
									"end": 7507,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 3325,
									"end": 3514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 3325,
									"end": 3514,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3394,
									"end": 3399,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3394,
									"end": 3412,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3394,
									"end": 3412,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3394,
									"end": 3412,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3402,
									"end": 3412,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 3394,
									"end": 3412,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 3394,
									"end": 3412,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3394,
									"end": 3412,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3423,
									"end": 3459,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3423,
									"end": 3459,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3423,
									"end": 3459,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3423,
									"end": 3459,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 3423,
									"end": 3459,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3470,
									"end": 3506,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3470,
									"end": 3506,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 3470,
									"end": 3506,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1128,
									"end": 7507,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1128,
									"end": 7507,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1128,
									"end": 7507,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 7507,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1128,
									"end": 7507,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 1128,
									"end": 7507,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1128,
									"end": 7507,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1128,
									"end": 7507,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1128,
									"end": 7507,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1128,
									"end": 7507,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1128,
									"end": 7507,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1128,
									"end": 7507,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "794"
								},
								{
									"begin": 1128,
									"end": 7507,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1128,
									"end": 7507,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "791"
								},
								{
									"begin": 1128,
									"end": 7507,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1128,
									"end": 7507,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1128,
									"end": 7507,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208d94054b8b22d3e370d9406a8b4a167c056ed608c038381b237e8596669be12b64736f6c634300081d0033",
									".code": [
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "7519AB50"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "A694FC3A"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "A694FC3A"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "C0ED00C9"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "CD3DAF9D"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "D1AF0C7D"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "DF136D65"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "7519AB50"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "7B0A47EE"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "80FAA57D"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "8B876347"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "3C6B16AB"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "3C6B16AB"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "3D18B912"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "67D3B488"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "72F702F3"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "8CC262"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "700037D"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "FB5A6B4"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "2E1A7D4D"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 7507,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 6903,
											"end": 7369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 6903,
											"end": 7369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 451,
											"end": 476,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1803,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1842,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1311,
											"end": 1331,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1968,
											"end": 1991,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1968,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1968,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1968,
											"end": 1991,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1968,
											"end": 1991,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1968,
											"end": 1991,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1968,
											"end": 1991,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 5997,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 5748,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 5748,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 5748,
											"end": 5997,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 5997,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5748,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5748,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 5997,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 5748,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 5748,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 5997,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 5748,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 5997,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4195,
											"end": 5258,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4195,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4195,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4195,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4195,
											"end": 5258,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4195,
											"end": 5258,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4195,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4195,
											"end": 5258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4195,
											"end": 5258,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4195,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4195,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4195,
											"end": 5258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6026,
											"end": 6265,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 6026,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6026,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 6026,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 6026,
											"end": 6265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1884,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1925,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1159,
											"end": 1195,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1159,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1159,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1159,
											"end": 1195,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 1159,
											"end": 1195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1159,
											"end": 1195,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1159,
											"end": 1195,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1159,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1159,
											"end": 1195,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1159,
											"end": 1195,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 850,
											"end": 882,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 850,
											"end": 882,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 832,
											"end": 883,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 832,
											"end": 883,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 820,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 805,
											"end": 823,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 672,
											"end": 889,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1540,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1518,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1518,
											"end": 1540,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1518,
											"end": 1540,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1540,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1540,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6306,
											"end": 6450,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 6306,
											"end": 6450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6306,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 6306,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 6306,
											"end": 6450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1701,
											"end": 1755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1755,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1271,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1251,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1271,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1271,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1251,
											"end": 1271,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1251,
											"end": 1271,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1271,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1271,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5411,
											"end": 5719,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 5411,
											"end": 5719,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5411,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 5411,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5411,
											"end": 5719,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5411,
											"end": 5719,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5411,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5411,
											"end": 5719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5411,
											"end": 5719,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5411,
											"end": 5719,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5411,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 5411,
											"end": 5719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3594,
											"end": 3775,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 3594,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3594,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3594,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3594,
											"end": 3775,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3594,
											"end": 3775,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3594,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3594,
											"end": 3775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3594,
											"end": 3775,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3594,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3594,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3594,
											"end": 3775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6509,
											"end": 6862,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6509,
											"end": 6862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6509,
											"end": 6862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 6509,
											"end": 6862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 6509,
											"end": 6862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1238,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1623,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1591,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1591,
											"end": 1623,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1591,
											"end": 1623,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1623,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7344,
											"end": 7361,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7344,
											"end": 7361,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6958,
											"end": 6962,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7344,
											"end": 7361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7344,
											"end": 7361,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7344,
											"end": 7361,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7344,
											"end": 7351,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 7344,
											"end": 7361,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7344,
											"end": 7361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7344,
											"end": 7361,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7344,
											"end": 7361,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7344,
											"end": 7361,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7344,
											"end": 7361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7344,
											"end": 7361,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7344,
											"end": 7361,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7344,
											"end": 7361,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7272,
											"end": 7294,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 7272,
											"end": 7304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7272,
											"end": 7304,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7272,
											"end": 7304,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7272,
											"end": 7304,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7272,
											"end": 7304,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7272,
											"end": 7304,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7327,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7323,
											"end": 7327,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 7129,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 7129,
											"end": 7145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7145,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 7129,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 7129,
											"end": 7304,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 7129,
											"end": 7304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7304,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 7129,
											"end": 7304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7092,
											"end": 7111,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7111,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7111,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7092,
											"end": 7111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7111,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7111,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7101,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7092,
											"end": 7111,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7092,
											"end": 7111,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7111,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7092,
											"end": 7111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7111,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7111,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 7092,
											"end": 7305,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 7092,
											"end": 7305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7305,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 7092,
											"end": 7305,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7091,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7091,
											"end": 7327,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7091,
											"end": 7327,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7091,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 7091,
											"end": 7327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7091,
											"end": 7327,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7091,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7091,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 7091,
											"end": 7361,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7091,
											"end": 7361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7091,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 7091,
											"end": 7361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7091,
											"end": 7361,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 7091,
											"end": 7361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7084,
											"end": 7361,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 7369,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6903,
											"end": 7369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 5997,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 5748,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5802,
											"end": 5812,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2871,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2871,
											"end": 2887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2887,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2871,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2848,
											"end": 2868,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2848,
											"end": 2887,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2910,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2910,
											"end": 2936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2910,
											"end": 2936,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2910,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2898,
											"end": 2936,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2957,
											"end": 3298,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3157,
											"end": 3165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3150,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3166,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3150,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3137,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3166,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3166,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3166,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3253,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3286,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 3298,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2957,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5833,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5833,
											"end": 5844,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5825,
											"end": 5860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 5825,
											"end": 5860,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5825,
											"end": 5860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5825,
											"end": 5860,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5825,
											"end": 5860,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5825,
											"end": 5860,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2096,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5825,
											"end": 5860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5825,
											"end": 5860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5825,
											"end": 5860,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2076,
											"end": 2097,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 2113,
											"end": 2131,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2113,
											"end": 2131,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2131,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "416D6F756E74207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2152,
											"end": 2170,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2152,
											"end": 2170,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2170,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2186,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5825,
											"end": 5860,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 5825,
											"end": 5860,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5825,
											"end": 5860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5825,
											"end": 5860,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5825,
											"end": 5860,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5825,
											"end": 5860,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5825,
											"end": 5860,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5825,
											"end": 5860,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5825,
											"end": 5860,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5825,
											"end": 5860,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 5825,
											"end": 5860,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5881,
											"end": 5891,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5871,
											"end": 5892,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5892,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5892,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 5871,
											"end": 5892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5871,
											"end": 5892,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5892,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 5892,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5892,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5896,
											"end": 5903,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5896,
											"end": 5903,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5892,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5896,
											"end": 5903,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5896,
											"end": 5903,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 5871,
											"end": 5903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 5871,
											"end": 5903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5903,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5903,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 5936,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5914,
											"end": 5925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5936,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5936,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5936,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 5914,
											"end": 5936,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5936,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 5914,
											"end": 5936,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5936,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 5914,
											"end": 5936,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5936,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5936,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5936,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5947,
											"end": 5989,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5947,
											"end": 5989,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5969,
											"end": 5979,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5947,
											"end": 5989,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2457,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2491,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2473,
											"end": 2491,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2491,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2466,
											"end": 2500,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2466,
											"end": 2500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2466,
											"end": 2500,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5947,
											"end": 5959,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5947,
											"end": 5968,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5968,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 5947,
											"end": 5968,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 2397,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2379,
											"end": 2397,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5947,
											"end": 5989,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5989,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 5997,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 5997,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 5997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4195,
											"end": 5258,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4195,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2113,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2108,
											"end": 2113,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2104,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2113,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2995,
											"end": 2997,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 2998,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3035,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3014,
											"end": 3032,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3014,
											"end": 3032,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3014,
											"end": 3032,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3007,
											"end": 3036,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3084,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2793,
											"end": 3125,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2871,
											"end": 2887,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2871,
											"end": 2885,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2871,
											"end": 2887,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2887,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2871,
											"end": 2887,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2848,
											"end": 2868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2848,
											"end": 2887,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2910,
											"end": 2936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2910,
											"end": 2934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2910,
											"end": 2936,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2910,
											"end": 2936,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2910,
											"end": 2936,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2898,
											"end": 2907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2898,
											"end": 2936,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 2983,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 3298,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2957,
											"end": 3298,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3157,
											"end": 3165,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3150,
											"end": 3166,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3166,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3150,
											"end": 3166,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3130,
											"end": 3147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3166,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3166,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3166,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3266,
											"end": 3286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3286,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 3298,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2957,
											"end": 3298,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4364,
											"end": 4372,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4364,
											"end": 4372,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4345,
											"end": 4360,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 4345,
											"end": 4372,
											"modifierDepth": 2,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4341,
											"end": 4856,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4341,
											"end": 4856,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4420,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4412,
											"end": 4420,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4402,
											"end": 4420,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4402,
											"end": 4420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4402,
											"end": 4409,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4402,
											"end": 4420,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4402,
											"end": 4420,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4402,
											"end": 4420,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4402,
											"end": 4420,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4389,
											"end": 4399,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4389,
											"end": 4420,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4341,
											"end": 4856,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4341,
											"end": 4856,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4341,
											"end": 4856,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4341,
											"end": 4856,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4634,
											"end": 4644,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4634,
											"end": 4644,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4615,
											"end": 4630,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4604,
											"end": 4612,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 4630,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4604,
											"end": 4630,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 4630,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 4630,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 4604,
											"end": 4630,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 4630,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4604,
											"end": 4630,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4644,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4603,
											"end": 4644,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4644,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4644,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4603,
											"end": 4644,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4644,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4603,
											"end": 4644,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4844,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4836,
											"end": 4844,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4644,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4644,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4813,
											"end": 4832,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4825,
											"end": 4832,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4644,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4832,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4813,
											"end": 4832,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4832,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4813,
											"end": 4832,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4812,
											"end": 4844,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4812,
											"end": 4844,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4812,
											"end": 4844,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4812,
											"end": 4844,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4812,
											"end": 4844,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4812,
											"end": 4844,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4812,
											"end": 4844,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4799,
											"end": 4809,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4799,
											"end": 4844,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4341,
											"end": 4856,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4341,
											"end": 4856,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4889,
											"end": 4890,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4886,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4876,
											"end": 4886,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4890,
											"modifierDepth": 2,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4868,
											"end": 4911,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4868,
											"end": 4911,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4868,
											"end": 4911,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4868,
											"end": 4911,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4868,
											"end": 4911,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4868,
											"end": 4911,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3332,
											"end": 3334,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4868,
											"end": 4911,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4868,
											"end": 4911,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4868,
											"end": 4911,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3335,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3371,
											"end": 3373,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3374,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5265776172642072617465207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3383,
											"end": 3429,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 4911,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3130,
											"end": 3470,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 4911,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4868,
											"end": 4911,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5012,
											"end": 5049,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5012,
											"end": 5049,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5043,
											"end": 5047,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5012,
											"end": 5049,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 832,
											"end": 883,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5012,
											"end": 5024,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5012,
											"end": 5034,
											"modifierDepth": 2,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5034,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 5012,
											"end": 5034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 805,
											"end": 823,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 805,
											"end": 823,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 5012,
											"end": 5049,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5012,
											"end": 5049,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5000,
											"end": 5008,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4987,
											"end": 4997,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4987,
											"end": 4997,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4987,
											"end": 5008,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4987,
											"end": 5008,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4987,
											"end": 5008,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4987,
											"end": 5008,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4987,
											"end": 5008,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4987,
											"end": 5008,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4987,
											"end": 5008,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4987,
											"end": 5049,
											"modifierDepth": 2,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4987,
											"end": 5049,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4965,
											"end": 5103,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4965,
											"end": 5103,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4965,
											"end": 5103,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4965,
											"end": 5103,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4965,
											"end": 5103,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4965,
											"end": 5103,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 3868,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4965,
											"end": 5103,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4965,
											"end": 5103,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4965,
											"end": 5103,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3848,
											"end": 3869,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3905,
											"end": 3907,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 3885,
											"end": 3903,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3885,
											"end": 3903,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3885,
											"end": 3903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3908,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3944,
											"end": 3972,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E742072657761726420746F6B656E73000000000000"
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3917,
											"end": 3973,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3990,
											"end": 4008,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3990,
											"end": 4008,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5103,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3664,
											"end": 4014,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 5103,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4965,
											"end": 5103,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5181,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5173,
											"end": 5181,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5155,
											"end": 5181,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 5155,
											"end": 5181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5155,
											"end": 5170,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 5155,
											"end": 5181,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 5155,
											"end": 5181,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5155,
											"end": 5181,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 5155,
											"end": 5181,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5144,
											"end": 5152,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5144,
											"end": 5181,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5235,
											"end": 5250,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5232,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5223,
											"end": 5250,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4195,
											"end": 5258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6026,
											"end": 6265,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 6026,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6069,
											"end": 6079,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2871,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2871,
											"end": 2887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2887,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2871,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2848,
											"end": 2868,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2848,
											"end": 2887,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2910,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2910,
											"end": 2936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2910,
											"end": 2936,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2910,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2898,
											"end": 2936,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2957,
											"end": 3298,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3157,
											"end": 3165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3150,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3166,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3150,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3137,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3166,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3166,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3166,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3253,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3286,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 3298,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2957,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6114,
											"end": 6124,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6092,
											"end": 6103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6106,
											"end": 6113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 6106,
											"end": 6125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6140,
											"end": 6150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6140,
											"end": 6150,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6136,
											"end": 6258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 6136,
											"end": 6258,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6175,
											"end": 6185,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6167,
											"end": 6174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 6167,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6167,
											"end": 6190,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6167,
											"end": 6190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6167,
											"end": 6190,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6167,
											"end": 6190,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6205,
											"end": 6246,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6205,
											"end": 6246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6205,
											"end": 6246,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6205,
											"end": 6246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6205,
											"end": 6246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6205,
											"end": 6246,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2457,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2457,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2457,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2457,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2491,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2473,
											"end": 2491,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2491,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2466,
											"end": 2500,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2466,
											"end": 2500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2466,
											"end": 2500,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6205,
											"end": 6217,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 6205,
											"end": 6226,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6205,
											"end": 6226,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6205,
											"end": 6226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 6205,
											"end": 6226,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 2397,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2379,
											"end": 2397,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6205,
											"end": 6246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2232,
											"end": 2506,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 6136,
											"end": 6258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6081,
											"end": 6265,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6026,
											"end": 6265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6026,
											"end": 6265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6306,
											"end": 6450,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 6306,
											"end": 6450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6363,
											"end": 6367,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6413,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6405,
											"end": 6413,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6387,
											"end": 6402,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 6387,
											"end": 6413,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6387,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 6387,
											"end": 6442,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6434,
											"end": 6442,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6434,
											"end": 6442,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6434,
											"end": 6442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6306,
											"end": 6450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6387,
											"end": 6442,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 6387,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6416,
											"end": 6431,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 6387,
											"end": 6442,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 6387,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6380,
											"end": 6442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6380,
											"end": 6442,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6306,
											"end": 6450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6306,
											"end": 6450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5411,
											"end": 5719,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 5411,
											"end": 5719,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5472,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2871,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2871,
											"end": 2887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2887,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2871,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2848,
											"end": 2868,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2848,
											"end": 2887,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2910,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2910,
											"end": 2936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2910,
											"end": 2936,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2910,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2898,
											"end": 2936,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2957,
											"end": 3298,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3157,
											"end": 3165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3150,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3166,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3150,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3137,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3147,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3166,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3166,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3166,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3253,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3286,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 3298,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2957,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5503,
											"end": 5504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5493,
											"end": 5500,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5493,
											"end": 5504,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5485,
											"end": 5520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 5485,
											"end": 5520,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5485,
											"end": 5520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5485,
											"end": 5520,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5485,
											"end": 5520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5485,
											"end": 5520,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2096,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5485,
											"end": 5520,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5485,
											"end": 5520,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2076,
											"end": 2097,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 2113,
											"end": 2131,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2113,
											"end": 2131,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2131,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "416D6F756E74207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2152,
											"end": 2170,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2152,
											"end": 2170,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2170,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2186,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1892,
											"end": 2227,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5520,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 5485,
											"end": 5520,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5541,
											"end": 5551,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5531,
											"end": 5552,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5552,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5552,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 5531,
											"end": 5552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5531,
											"end": 5552,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5552,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5531,
											"end": 5552,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5552,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5563,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5563,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5556,
											"end": 5563,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5556,
											"end": 5563,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5552,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5563,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 5531,
											"end": 5563,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5556,
											"end": 5563,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5556,
											"end": 5563,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5563,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 5531,
											"end": 5563,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5563,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 5531,
											"end": 5563,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5563,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5563,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5563,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5563,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5563,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5563,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5563,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5589,
											"end": 5596,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5574,
											"end": 5585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5574,
											"end": 5585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5574,
											"end": 5596,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5574,
											"end": 5596,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5574,
											"end": 5596,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5574,
											"end": 5596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 5574,
											"end": 5596,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5574,
											"end": 5596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5574,
											"end": 5596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 5574,
											"end": 5596,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5574,
											"end": 5596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 5574,
											"end": 5596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5574,
											"end": 5596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5574,
											"end": 5596,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5574,
											"end": 5596,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5650,
											"end": 5711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5650,
											"end": 5711,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5650,
											"end": 5711,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5650,
											"end": 5711,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5676,
											"end": 5686,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5650,
											"end": 5711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5650,
											"end": 5711,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5650,
											"end": 5711,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4221,
											"end": 4272,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5696,
											"end": 5700,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4281,
											"end": 4341,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4375,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4357,
											"end": 4375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4375,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4384,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4384,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4384,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5662,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5650,
											"end": 5675,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5650,
											"end": 5675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5650,
											"end": 5675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 5650,
											"end": 5675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4194,
											"end": 4212,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4194,
											"end": 4212,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4019,
											"end": 4390,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3775,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3594,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2113,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2108,
											"end": 2113,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2104,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2113,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2995,
											"end": 2997,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 2998,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3035,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3014,
											"end": 3032,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3014,
											"end": 3032,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3014,
											"end": 3032,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3007,
											"end": 3036,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3084,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2793,
											"end": 3125,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2086,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3686,
											"end": 3701,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3683,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3675,
											"end": 3683,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3701,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3736,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3667,
											"end": 3736,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3667,
											"end": 3736,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3667,
											"end": 3736,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3736,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4599,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3667,
											"end": 3736,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3736,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4579,
											"end": 4600,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4636,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4609,
											"end": 4639,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 4707,
											"name": "PUSH",
											"source": 6,
											"value": "50726576696F75732072657761726473206E6F7420636F6D706C657465640000"
										},
										{
											"begin": 4655,
											"end": 4673,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4655,
											"end": 4673,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4673,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4648,
											"end": 4708,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4743,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4725,
											"end": 4743,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3736,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4395,
											"end": 4749,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3736,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3667,
											"end": 3736,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3747,
											"end": 3755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3747,
											"end": 3767,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3594,
											"end": 3775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6509,
											"end": 6862,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 6509,
											"end": 6862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6577,
											"end": 6588,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 6577,
											"end": 6588,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6592,
											"end": 6593,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 6573,
											"end": 6622,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6602,
											"end": 6622,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6602,
											"end": 6622,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6509,
											"end": 6862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6622,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 6573,
											"end": 6622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6820,
											"end": 6831,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 6820,
											"end": 6831,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6735,
											"end": 6744,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6735,
											"end": 6744,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 6706,
											"end": 6730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 6706,
											"end": 6732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6732,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 6706,
											"end": 6732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 6706,
											"end": 6744,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6744,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 6706,
											"end": 6744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6744,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 6706,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6688,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6678,
											"end": 6688,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 6678,
											"end": 6745,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 6678,
											"end": 6745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6745,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 6678,
											"end": 6745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 6678,
											"end": 6787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6783,
											"end": 6787,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6678,
											"end": 6787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 6678,
											"end": 6787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6787,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 6678,
											"end": 6787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 6677,
											"end": 6831,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 6677,
											"end": 6831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6831,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 6677,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6660,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6640,
											"end": 6660,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 6640,
											"end": 6831,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 6640,
											"end": 6831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 487,
											"end": 667,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 487,
											"end": 667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 546,
											"end": 552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 601,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 587,
											"end": 596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 578,
											"end": 585,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 574,
											"end": 597,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 570,
											"end": 602,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 567,
											"end": 619,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 567,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 567,
											"end": 619,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 615,
											"end": 616,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 605,
											"end": 617,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 567,
											"end": 619,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 567,
											"end": 619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 638,
											"end": 661,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 638,
											"end": 661,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 487,
											"end": 667,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 487,
											"end": 667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1102,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1163,
											"end": 1173,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 1158,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1175,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1198,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1191,
											"end": 1192,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1184,
											"end": 1199,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1222,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1223,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1234,
											"end": 1362,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1234,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1310,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1310,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1310,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1333,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1333,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1333,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1356,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1319,
											"end": 1356,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1336,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1336,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1336,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1535,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1367,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1449,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1449,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1449,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1480,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1480,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1503,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1504,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1504,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1505,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1458,
											"end": 1529,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1509,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1509,
											"end": 1527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1757,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1540,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1607,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1596,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1596,
											"end": 1728,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1660,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 1645,
											"end": 1648,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1639,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1662,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1689,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1682,
											"end": 1683,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1675,
											"end": 1690,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1717,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1718,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1596,
											"end": 1728,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1596,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1742,
											"end": 1751,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1762,
											"end": 1887,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1762,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1827,
											"end": 1836,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1827,
											"end": 1836,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1827,
											"end": 1836,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1858,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1858,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1858,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 1881,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1845,
											"end": 1881,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1861,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1861,
											"end": 1879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2511,
											"end": 2788,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2511,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2584,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2619,
											"end": 2628,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2617,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2629,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2634,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2651,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2599,
											"end": 2651,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2648,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2645,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2637,
											"end": 2649,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2651,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2599,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2688,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2673,
											"end": 2689,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2737,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2738,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2739,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2716,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2740,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2698,
											"end": 2758,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2751,
											"end": 2752,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2756,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3659,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3475,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3551,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3600,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3586,
											"end": 3595,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3584,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3601,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3615,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3611,
											"end": 3612,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3616,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3637,
											"end": 3653,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3653,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3659,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3475,
											"end": 3659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"five/StakingRewards.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"duration()": "0fb5a6b4",
							"earned(address)": "008cc262",
							"finishAt()": "67d3b488",
							"getReward()": "3d18b912",
							"lastTimeRewardApplicable()": "80faa57d",
							"notifyRewardAmount(uint256)": "3c6b16ab",
							"owner()": "8da5cb5b",
							"rewardPerToken()": "cd3daf9d",
							"rewardPerTokenStored()": "df136d65",
							"rewardRate()": "7b0a47ee",
							"rewards(address)": "0700037d",
							"rewardsToken()": "d1af0c7d",
							"setRewardDuration(uint256)": "c0ed00c9",
							"stake(uint256)": "a694fc3a",
							"stakingToken()": "72f702f3",
							"totalSupply()": "18160ddd",
							"updatedAt()": "7519ab50",
							"userRewardPerTokenPaid(address)": "8b876347",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finishAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"setRewardDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updatedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"five/StakingRewards.sol\":\"StakingRewards\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"five/StakingRewards.sol\":{\"keccak256\":\"0xfac13b0baef3f299b0d291c16940194bbfc9b66030602c18d211b89909ee383a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e48792b4c3198d23bde1a3004f6eb2edea084a841aeadbb62de79284599787c1\",\"dweb:/ipfs/QmaDoHGRUEroU6vKUKTQ3tPWNYAcjpX2XYpXaokLj1FKhE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 796,
								"contract": "five/StakingRewards.sol:StakingRewards",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 798,
								"contract": "five/StakingRewards.sol:StakingRewards",
								"label": "duration",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 800,
								"contract": "five/StakingRewards.sol:StakingRewards",
								"label": "finishAt",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 802,
								"contract": "five/StakingRewards.sol:StakingRewards",
								"label": "updatedAt",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 804,
								"contract": "five/StakingRewards.sol:StakingRewards",
								"label": "rewardRate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 806,
								"contract": "five/StakingRewards.sol:StakingRewards",
								"label": "rewardPerTokenStored",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 810,
								"contract": "five/StakingRewards.sol:StakingRewards",
								"label": "userRewardPerTokenPaid",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 814,
								"contract": "five/StakingRewards.sol:StakingRewards",
								"label": "rewards",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 818,
								"contract": "five/StakingRewards.sol:StakingRewards",
								"label": "balanceOf",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 820,
								"contract": "five/StakingRewards.sol:StakingRewards",
								"label": "totalSupply",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10618:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10636:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10655:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10632:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10662:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10714:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10723:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10741:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10687:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10812:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10819:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10828:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10847:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10803:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9787:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10789:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"five/StakingRewards.sol": {
				"ast": {
					"absolutePath": "five/StakingRewards.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"StakingRewards": [
							1193
						]
					},
					"id": 1194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1194,
							"sourceUnit": 652,
							"src": "60:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StakingRewards",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1193,
							"linearizedBaseContracts": [
								1193
							],
							"name": "StakingRewards",
							"nameLocation": "1137:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 791,
									"mutability": "immutable",
									"name": "stakingToken",
									"nameLocation": "1183:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1193,
									"src": "1159:36:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 790,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 789,
											"name": "IERC20",
											"nameLocations": [
												"1159:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "1159:6:5"
										},
										"referencedDeclaration": 729,
										"src": "1159:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 794,
									"mutability": "immutable",
									"name": "rewardsToken",
									"nameLocation": "1226:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1193,
									"src": "1202:36:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 793,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 792,
											"name": "IERC20",
											"nameLocations": [
												"1202:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "1202:6:5"
										},
										"referencedDeclaration": 729,
										"src": "1202:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 796,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "1266:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1193,
									"src": "1251:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 795,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1251:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0fb5a6b4",
									"id": 798,
									"mutability": "mutable",
									"name": "duration",
									"nameLocation": "1323:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1193,
									"src": "1311:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 797,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1311:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "67d3b488",
									"id": 800,
									"mutability": "mutable",
									"name": "finishAt",
									"nameLocation": "1387:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1193,
									"src": "1375:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 799,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1375:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7519ab50",
									"id": 802,
									"mutability": "mutable",
									"name": "updatedAt",
									"nameLocation": "1442:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1193,
									"src": "1430:21:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 801,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1430:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b0a47ee",
									"id": 804,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "1530:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1193,
									"src": "1518:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 803,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1518:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df136d65",
									"id": 806,
									"mutability": "mutable",
									"name": "rewardPerTokenStored",
									"nameLocation": "1603:20:5",
									"nodeType": "VariableDeclaration",
									"scope": 1193,
									"src": "1591:32:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 805,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1591:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b876347",
									"id": 810,
									"mutability": "mutable",
									"name": "userRewardPerTokenPaid",
									"nameLocation": "1733:22:5",
									"nodeType": "VariableDeclaration",
									"scope": 1193,
									"src": "1701:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 809,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 807,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1709:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1701:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 808,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1720:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 814,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "1835:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1193,
									"src": "1803:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 813,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 811,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1811:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1803:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 812,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1822:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 818,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "1916:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1193,
									"src": "1884:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 817,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 815,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1892:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1884:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 816,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1903:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 820,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "1980:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1193,
									"src": "1968:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 819,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1968:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "2075:72:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 823,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2094:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2098:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2094:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 825,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "2108:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2094:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e6572",
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2115:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															},
															"value": "Not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															}
														],
														"id": 822,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2086:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2086:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "2086:41:5"
											},
											{
												"id": 830,
												"nodeType": "PlaceholderStatement",
												"src": "2138:1:5"
											}
										]
									},
									"id": 832,
									"name": "onlyOwner",
									"nameLocation": "2063:9:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2072:2:5"
									},
									"src": "2054:93:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "2784:533:5",
										"statements": [
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 836,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "2848:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 837,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "2871:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2871:16:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2848:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "2848:39:5"
											},
											{
												"expression": {
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 841,
														"name": "updatedAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "2898:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 842,
															"name": "lastTimeRewardApplicable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "2910:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2910:26:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2898:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "2898:38:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 846,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "2961:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2981:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2973:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 847,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2973:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2973:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2961:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 867,
												"nodeType": "IfStatement",
												"src": "2957:341:5",
												"trueBody": {
													"id": 866,
													"nodeType": "Block",
													"src": "2985:313:5",
													"statements": [
														{
															"expression": {
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 852,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "3130:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 854,
																	"indexExpression": {
																		"id": 853,
																		"name": "_account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 834,
																		"src": "3138:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3130:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 856,
																			"name": "_account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 834,
																			"src": "3157:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 855,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1175,
																		"src": "3150:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3150:16:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3130:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 859,
															"nodeType": "ExpressionStatement",
															"src": "3130:36:5"
														},
														{
															"expression": {
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 860,
																		"name": "userRewardPerTokenPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "3231:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 862,
																	"indexExpression": {
																		"id": 861,
																		"name": "_account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 834,
																		"src": "3254:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3231:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 863,
																	"name": "rewardPerTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "3266:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3231:55:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 865,
															"nodeType": "ExpressionStatement",
															"src": "3231:55:5"
														}
													]
												}
											},
											{
												"id": 868,
												"nodeType": "PlaceholderStatement",
												"src": "3308:1:5"
											}
										]
									},
									"id": 870,
									"name": "updateReward",
									"nameLocation": "2753:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "2774:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2766:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:18:5"
									},
									"src": "2744:573:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "3383:131:5",
										"statements": [
											{
												"expression": {
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 877,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "3394:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 878,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3402:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3406:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3402:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3394:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "3394:18:5"
											},
											{
												"expression": {
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 882,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "3423:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 884,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "3445:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 883,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "3438:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3438:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "3423:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "3423:36:5"
											},
											{
												"expression": {
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 888,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "3470:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 890,
																"name": "_rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "3492:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 889,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "3485:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3485:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "3470:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "3470:36:5"
											}
										]
									},
									"id": 895,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "3345:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3337:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3337:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "_rewardsToken",
												"nameLocation": "3368:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3360:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3360:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3336:46:5"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:5"
									},
									"scope": 1193,
									"src": "3325:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "3656:119:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 903,
																"name": "finishAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "3675:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 904,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3686:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3692:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3686:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3675:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726576696f75732072657761726473206e6f7420636f6d706c65746564",
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3703:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_740db3786ffac1c1b57d0374fe48d0baae54b340ac11eee4d95d61c124e6865d",
																"typeString": "literal_string \"Previous rewards not completed\""
															},
															"value": "Previous rewards not completed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_740db3786ffac1c1b57d0374fe48d0baae54b340ac11eee4d95d61c124e6865d",
																"typeString": "literal_string \"Previous rewards not completed\""
															}
														],
														"id": 902,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3667:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3667:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "3667:69:5"
											},
											{
												"expression": {
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 910,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "3747:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 911,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "3758:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3747:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "3747:20:5"
											}
										]
									},
									"functionSelector": "c0ed00c9",
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 900,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 899,
												"name": "onlyOwner",
												"nameLocations": [
													"3646:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 832,
												"src": "3646:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3646:9:5"
										}
									],
									"name": "setRewardDuration",
									"nameLocation": "3603:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "3626:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "3621:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3621:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3620:16:5"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3656:0:5"
									},
									"scope": 1193,
									"src": "3594:181:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "4281:977:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 928,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4345:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4351:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4345:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 930,
														"name": "finishAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "4364:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4345:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 958,
													"nodeType": "Block",
													"src": "4438:418:5",
													"statements": [
														{
															"assignments": [
																940
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 940,
																	"mutability": "mutable",
																	"name": "remaining",
																	"nameLocation": "4591:9:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 958,
																	"src": "4586:14:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 939,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4586:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 948,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 941,
																				"name": "finishAt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 800,
																				"src": "4604:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"expression": {
																					"id": 942,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "4615:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 943,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4621:9:5",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "4615:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4604:26:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 945,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4603:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 946,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "4634:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4603:41:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4586:58:5"
														},
														{
															"expression": {
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 949,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "4799:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 952,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 950,
																					"name": "remaining",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 940,
																					"src": "4813:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 951,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 917,
																					"src": "4825:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4813:19:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 953,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4812:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 954,
																		"name": "duration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "4836:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4812:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4799:45:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 957,
															"nodeType": "ExpressionStatement",
															"src": "4799:45:5"
														}
													]
												},
												"id": 959,
												"nodeType": "IfStatement",
												"src": "4341:515:5",
												"trueBody": {
													"id": 938,
													"nodeType": "Block",
													"src": "4374:58:5",
													"statements": [
														{
															"expression": {
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 932,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "4389:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 933,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "4402:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 934,
																		"name": "duration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "4412:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4402:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4389:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 937,
															"nodeType": "ExpressionStatement",
															"src": "4389:31:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 961,
																"name": "rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "4876:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4889:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4876:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265776172642072617465207a65726f",
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4892:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f9693727a7647b970cb4cc403bee711f554db2ecad00498574b9c0de963d710e",
																"typeString": "literal_string \"Reward rate zero\""
															},
															"value": "Reward rate zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f9693727a7647b970cb4cc403bee711f554db2ecad00498574b9c0de963d710e",
																"typeString": "literal_string \"Reward rate zero\""
															}
														],
														"id": 960,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4868:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4868:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "4868:43:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 968,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "4987:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 969,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "5000:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4987:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 975,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5043:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_StakingRewards_$1193",
																					"typeString": "contract StakingRewards"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_StakingRewards_$1193",
																					"typeString": "contract StakingRewards"
																				}
																			],
																			"id": 974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5035:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 973,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5035:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5035:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 971,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "5012:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5025:9:5",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 686,
																	"src": "5012:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5012:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4987:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742072657761726420746f6b656e73",
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5064:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_feb9ed92c05bf894f55a1d03e984cee0770acd4ac6704cea1f36818e6e0544c2",
																"typeString": "literal_string \"Insufficient reward tokens\""
															},
															"value": "Insufficient reward tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_feb9ed92c05bf894f55a1d03e984cee0770acd4ac6704cea1f36818e6e0544c2",
																"typeString": "literal_string \"Insufficient reward tokens\""
															}
														],
														"id": 967,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4965:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4965:138:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "4965:138:5"
											},
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 982,
														"name": "finishAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "5144:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 983,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5155:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5161:9:5",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5155:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 985,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "5173:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5155:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5144:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "5144:37:5"
											},
											{
												"expression": {
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 989,
														"name": "updatedAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "5223:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 990,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5235:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5241:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5235:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5223:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "5223:27:5"
											}
										]
									},
									"functionSelector": "3c6b16ab",
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 920,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 919,
												"name": "onlyOwner",
												"nameLocations": [
													"4246:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 832,
												"src": "4246:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4246:9:5"
										},
										{
											"arguments": [
												{
													"arguments": [
														{
															"hexValue": "30",
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4277:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4269:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 922,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4269:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4269:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 926,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 921,
												"name": "updateReward",
												"nameLocations": [
													"4256:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 870,
												"src": "4256:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:24:5"
										}
									],
									"name": "notifyRewardAmount",
									"nameLocation": "4204:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4228:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "4223:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4223:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4222:14:5"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:0:5"
									},
									"scope": 1193,
									"src": "4195:1063:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "5474:245:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1005,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "5493:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5503:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5493:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74207a65726f",
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5506:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7781ea458ec1953907f64a217bfd3ffe515f3c1737fce4ecf66ca84f23798b0",
																"typeString": "literal_string \"Amount zero\""
															},
															"value": "Amount zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7781ea458ec1953907f64a217bfd3ffe515f3c1737fce4ecf66ca84f23798b0",
																"typeString": "literal_string \"Amount zero\""
															}
														],
														"id": 1004,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5485:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5485:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "5485:35:5"
											},
											{
												"expression": {
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1011,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "5531:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1014,
														"indexExpression": {
															"expression": {
																"id": 1012,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5541:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5545:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5541:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5531:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1015,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "5556:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5531:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "5531:32:5"
											},
											{
												"expression": {
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1018,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "5574:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1019,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "5589:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5574:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "5574:22:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1025,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5676:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5680:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5676:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1029,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5696:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$1193",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$1193",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5688:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1027,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5688:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5688:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1031,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "5703:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1022,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "5650:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5663:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "5650:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5650:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "5650:61:5"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1000,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5462:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5466:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5462:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1002,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 999,
												"name": "updateReward",
												"nameLocations": [
													"5449:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 870,
												"src": "5449:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "5449:24:5"
										}
									],
									"name": "stake",
									"nameLocation": "5420:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5431:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "5426:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5426:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5425:14:5"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5474:0:5"
									},
									"scope": 1193,
									"src": "5411:308:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "5814:183:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1045,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "5833:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5843:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5833:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74207a65726f",
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5846:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7781ea458ec1953907f64a217bfd3ffe515f3c1737fce4ecf66ca84f23798b0",
																"typeString": "literal_string \"Amount zero\""
															},
															"value": "Amount zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7781ea458ec1953907f64a217bfd3ffe515f3c1737fce4ecf66ca84f23798b0",
																"typeString": "literal_string \"Amount zero\""
															}
														],
														"id": 1044,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5825:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5825:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "5825:35:5"
											},
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1051,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "5871:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1054,
														"indexExpression": {
															"expression": {
																"id": 1052,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5881:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5885:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5881:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5871:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1055,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "5896:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5871:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "5871:32:5"
											},
											{
												"expression": {
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1058,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "5914:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1059,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "5929:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5914:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "5914:22:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1065,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5969:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5973:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5969:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "5981:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1062,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "5947:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5960:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "5947:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5947:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "5947:42:5"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1040,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5802:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5806:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5802:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1042,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1039,
												"name": "updateReward",
												"nameLocations": [
													"5789:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 870,
												"src": "5789:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "5789:24:5"
										}
									],
									"name": "withdraw",
									"nameLocation": "5757:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5771:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "5766:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5766:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5765:14:5"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5814:0:5"
									},
									"scope": 1193,
									"src": "5748:249:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "6081:184:5",
										"statements": [
											{
												"assignments": [
													1079
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "6097:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1105,
														"src": "6092:11:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1078,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6092:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1084,
												"initialValue": {
													"baseExpression": {
														"id": 1080,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "6106:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1083,
													"indexExpression": {
														"expression": {
															"id": 1081,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6114:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6118:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6114:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6106:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6092:33:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1085,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "6140:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6149:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6140:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1104,
												"nodeType": "IfStatement",
												"src": "6136:122:5",
												"trueBody": {
													"id": 1103,
													"nodeType": "Block",
													"src": "6152:106:5",
													"statements": [
														{
															"expression": {
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1088,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "6167:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1091,
																	"indexExpression": {
																		"expression": {
																			"id": 1089,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6175:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6179:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6175:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6167:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6189:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6167:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1094,
															"nodeType": "ExpressionStatement",
															"src": "6167:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1098,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6227:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6231:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6227:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1100,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "6239:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1095,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "6205:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6218:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 696,
																	"src": "6205:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6205:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1102,
															"nodeType": "ExpressionStatement",
															"src": "6205:41:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3d18b912",
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1074,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6069:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6073:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6069:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1076,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1073,
												"name": "updateReward",
												"nameLocations": [
													"6056:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 870,
												"src": "6056:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "6056:24:5"
										}
									],
									"name": "getReward",
									"nameLocation": "6035:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6044:2:5"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6081:0:5"
									},
									"scope": 1193,
									"src": "6026:239:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "6369:81:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1111,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6387:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6393:9:5",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6387:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1113,
															"name": "finishAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "6405:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6387:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1117,
														"name": "finishAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "6434:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6387:55:5",
													"trueExpression": {
														"expression": {
															"id": 1115,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6416:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6422:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6416:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1110,
												"id": 1119,
												"nodeType": "Return",
												"src": "6380:62:5"
											}
										]
									},
									"functionSelector": "80faa57d",
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nameLocation": "6315:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6339:2:5"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "6363:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6363:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6362:6:5"
									},
									"scope": 1193,
									"src": "6306:144:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "6562:300:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1126,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "6577:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6592:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6577:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1131,
												"nodeType": "IfStatement",
												"src": "6573:49:5",
												"trueBody": {
													"expression": {
														"id": 1129,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "6602:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 1125,
													"id": 1130,
													"nodeType": "Return",
													"src": "6595:27:5"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1132,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "6640:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1133,
																			"name": "rewardRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 804,
																			"src": "6678:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1137,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1134,
																							"name": "lastTimeRewardApplicable",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1121,
																							"src": "6706:24:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																								"typeString": "function () view returns (uint256)"
																							}
																						},
																						"id": 1135,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6706:26:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 1136,
																						"name": "updatedAt",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 802,
																						"src": "6735:9:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "6706:38:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1138,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6705:40:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6678:67:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6783:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "6678:109:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1142,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6677:111:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1143,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "6820:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6677:154:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6640:191:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1125,
												"id": 1146,
												"nodeType": "Return",
												"src": "6633:198:5"
											}
										]
									},
									"functionSelector": "cd3daf9d",
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "6518:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6532:2:5"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "6556:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6556:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6555:6:5"
									},
									"scope": 1193,
									"src": "6509:353:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "6964:405:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 1155,
																			"name": "balanceOf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 818,
																			"src": "7092:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1157,
																		"indexExpression": {
																			"id": 1156,
																			"name": "_account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1150,
																			"src": "7102:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7092:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1163,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1158,
																						"name": "rewardPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1148,
																						"src": "7129:14:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 1159,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7129:16:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"baseExpression": {
																						"id": 1160,
																						"name": "userRewardPerTokenPaid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 810,
																						"src": "7272:22:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 1162,
																					"indexExpression": {
																						"id": 1161,
																						"name": "_account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1150,
																						"src": "7295:8:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7272:32:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7129:175:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1164,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7128:177:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7092:213:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1166,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7091:215:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7323:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "7091:236:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"baseExpression": {
															"id": 1169,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "7344:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1171,
														"indexExpression": {
															"id": 1170,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "7352:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7344:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7091:270:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1154,
												"id": 1173,
												"nodeType": "Return",
												"src": "7084:277:5"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "6912:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "6927:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "6919:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6919:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6918:18:5"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "6958:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6958:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6957:6:5"
									},
									"scope": 1193,
									"src": "6903:466:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "7465:39:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1184,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "7483:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1185,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "7487:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7483:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1188,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "7495:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7483:13:5",
													"trueExpression": {
														"id": 1187,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "7491:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1183,
												"id": 1190,
												"nodeType": "Return",
												"src": "7476:20:5"
											}
										]
									},
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_min",
									"nameLocation": "7416:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "7426:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "7421:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7421:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "7434:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "7429:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7429:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7420:16:5"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "7459:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7459:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7458:6:5"
									},
									"scope": 1193,
									"src": "7407:97:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1194,
							"src": "1128:6379:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:7474:5"
				},
				"id": 5
			}
		}
	}
}