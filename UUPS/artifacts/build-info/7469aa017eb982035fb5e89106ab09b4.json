{
	"id": "7469aa017eb982035fb5e89106ab09b4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"UUPS/UUPSV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.26;\r\n\r\n// 统一使用可升级合约库\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\n\r\ncontract UUPSV2 is \r\n    Initializable,         // 来自可升级合约库\r\n    UUPSUpgradeable,       // 来自可升级合约库\r\n    OwnableUpgradeable     // 显式继承 Ownable\r\n{\r\n    uint public x;\r\n\r\n    // 删除构造函数（可升级合约禁止使用构造函数）\r\n    // constructor(uint _var){ x = _var; }\r\n\r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor() {\r\n        _disableInitializers(); // 防止实现合约被直接初始化\r\n    }\r\n\r\n    // 初始化函数替代构造函数\r\n    function initialize(uint _var) external initializer {\r\n        x = _var;\r\n        __Ownable_init(msg.sender);  // 正确调用初始化函数\r\n        __UUPSUpgradeable_init();    // 显式初始化父合约\r\n    }\r\n\r\n    // 升级授权逻辑（必须包含权限检查）\r\n    function _authorizeUpgrade(address) internal override onlyOwner {}\r\n\r\n    // 业务逻辑保持不变\r\n    function cal() external {\r\n        x = x * 2;\r\n    }\r\n\r\n    // 修正ABI编码调用\r\n    function showInitCode() external pure returns(bytes memory) {\r\n        return abi.encodeWithSelector(this.initialize.selector, 1);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204f3205091c792732bae8ad69ba951312ed5ffd89d03cf617355f98046faedcc664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204f3205091c792732bae8ad69ba951312ed5ffd89d03cf617355f98046faedcc664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F ORIGIN SDIV MULMOD SHR PUSH26 0x2732BAE8AD69BA951312ED5FFD89D03CF617355F98046FAEDCC6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "496:5741:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;496:5741:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204f3205091c792732bae8ad69ba951312ed5ffd89d03cf617355f98046faedcc664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F ORIGIN SDIV MULMOD SHR PUSH26 0x2732BAE8AD69BA951312ED5FFD89D03CF617355F98046FAEDCC6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "496:5741:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204f3205091c792732bae8ad69ba951312ed5ffd89d03cf617355f98046faedcc664736f6c634300081a0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"UUPS/UUPSV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a0d3b44fd1e79890bd5572d7cca726ca12035a3387670291aec4fcfac0f1970e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a0d3b44fd1e79890bd5572d7cca726ca12035a3387670291aec4fcfac0f1970e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xD3 0xB4 0x4F 0xD1 0xE7 SWAP9 SWAP1 0xBD SSTORE PUSH19 0xD7CCA726CA12035A3387670291AEC4FCFAC0F1 SWAP8 0xE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5815:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5815:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a0d3b44fd1e79890bd5572d7cca726ca12035a3387670291aec4fcfac0f1970e64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xD3 0xB4 0x4F 0xD1 0xE7 SWAP9 SWAP1 0xBD SSTORE PUSH19 0xD7CCA726CA12035A3387670291AEC4FCFAC0F1 SWAP8 0xE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5815:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a0d3b44fd1e79890bd5572d7cca726ca12035a3387670291aec4fcfac0f1970e64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"UUPS/UUPSV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207f24a2d9d64be2436433cbce0ae15485d95954a8bc59d3a0738667681461fc9064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207f24a2d9d64be2436433cbce0ae15485d95954a8bc59d3a0738667681461fc9064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x24A2D9D64BE2436433CBCE0AE15485D95954A8BC59D3A0738667681461FC9064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "411:484:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207f24a2d9d64be2436433cbce0ae15485d95954a8bc59d3a0738667681461fc9064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x24A2D9D64BE2436433CBCE0AE15485D95954A8BC59D3A0738667681461FC9064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "411:484:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207f24a2d9d64be2436433cbce0ae15485d95954a8bc59d3a0738667681461fc9064736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"UUPS/UUPSV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122042851c92114da71f299d79fe664afa2e562fd3083c15ae52111e85361434430d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122042851c92114da71f299d79fe664afa2e562fd3083c15ae52111e85361434430d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP DUP6 SHR SWAP3 GT 0x4D 0xA7 0x1F 0x29 SWAP14 PUSH26 0xFE664AFA2E562FD3083C15AE52111E85361434430D64736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1407:2774:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122042851c92114da71f299d79fe664afa2e562fd3083c15ae52111e85361434430d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP DUP6 SHR SWAP3 GT 0x4D 0xA7 0x1F 0x29 SWAP14 PUSH26 0xFE664AFA2E562FD3083C15AE52111E85361434430D64736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1407:2774:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122042851c92114da71f299d79fe664afa2e562fd3083c15ae52111e85361434430d64736f6c634300081a0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"UUPS/UUPSV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"UUPS/UUPSV2.sol": {
				"UUPSV2": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_var",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "showInitCode",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "x",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"UUPS/UUPSV2.sol\":330:1477  contract UUPSV2 is ... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"UUPS/UUPSV2.sol\":716:811  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"UUPS/UUPSV2.sol\":741:763  _disableInitializers() */\n  tag_4\n    /* \"UUPS/UUPSV2.sol\":741:761  _disableInitializers */\n  tag_5\n    /* \"UUPS/UUPSV2.sol\":741:763  _disableInitializers() */\n  jump\t// in\ntag_4:\n    /* \"UUPS/UUPSV2.sol\":330:1477  contract UUPSV2 is ... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7709:8131  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7898:7913  $._initializing */\n  dup1\n  sload\n  0x010000000000000000\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7894:7970  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7936:7959  InvalidInitialization() */\n  mload(0x40)\n  shl(0xe0, 0xf92ee8a9)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7894:7970  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7983:7997  $._initialized */\n  dup1\n  sload\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7983:8017  $._initialized != type(uint64).max */\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7979:8125  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8033:8066  $._initialized = type(uint64).max */\n  dup1\n  sload\n  not(sub(shl(0x40, 0x01), 0x01))\n  and\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8085:8114  Initialized(type(uint64).max) */\n  mload(0x40)\n    /* \"#utility.yul\":158:208   */\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8085:8114  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n  swap1\n    /* \"#utility.yul\":146:148   */\n  0x20\n    /* \"#utility.yul\":131:149   */\n  add\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8085:8114  Initialized(type(uint64).max) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7979:8125  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7758:8131  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7709:8131  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":14:214   */\ntag_18:\n    /* \"UUPS/UUPSV2.sol\":330:1477  contract UUPSV2 is ... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"UUPS/UUPSV2.sol\":330:1477  contract UUPSV2 is ... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa4ef7d30\n      gt\n      tag_12\n      jumpi\n      dup1\n      0xa4ef7d30\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb7c738f4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xfe4b84df\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup1\n      0x0c55699c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"UUPS/UUPSV2.sol\":522:535  uint public x */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      sload(0x00)\n      dup2\n      jump\n    tag_14:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"UUPS/UUPSV2.sol\":522:535  uint public x */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_14\n      tag_24\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_18\n      tag_29\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1857:1908   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1845:1847   */\n      0x20\n        /* \"#utility.yul\":1830:1848   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      tag_16\n        /* \"#utility.yul\":1711:1914   */\n      jump\n        /* \"UUPS/UUPSV2.sol\":1337:1474  function showInitCode() external pure returns(bytes memory) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n        /* \"UUPS/UUPSV2.sol\":1415:1466  abi.encodeWithSelector(this.initialize.selector, 1) */\n      0x40\n      dup1\n      mload\n        /* \"UUPS/UUPSV2.sol\":1464:1465  1 */\n      0x01\n        /* \"UUPS/UUPSV2.sol\":1415:1466  abi.encodeWithSelector(this.initialize.selector, 1) */\n      0x24\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":3186:3222   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"UUPS/UUPSV2.sol\":1415:1466  abi.encodeWithSelector(this.initialize.selector, 1) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":3159:3177   */\n      0x44\n      swap1\n      swap2\n      add\n        /* \"UUPS/UUPSV2.sol\":1415:1466  abi.encodeWithSelector(this.initialize.selector, 1) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xfe4b84df)\n      or\n      swap1\n      mstore\n      swap1\n        /* \"UUPS/UUPSV2.sol\":1337:1474  function showInitCode() external pure returns(bytes memory) {... */\n      jump\n    tag_36:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_36\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n        /* \"UUPS/UUPSV2.sol\":1247:1299  function cal() external {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_18\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_18\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"UUPS/UUPSV2.sol\":861:1075  function initialize(uint _var) external initializer {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_18\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_21:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      tag_59\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2666  _checkProxy */\n      tag_60\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      jump\t// in\n    tag_59:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      tag_62\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4294:4311  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4293  _authorizeUpgrade */\n      tag_63\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_64\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4344:4361  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4363:4367  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4343  _upgradeToAndCallUUPS */\n      tag_65\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3777:3784  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      tag_67\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2944  _checkNotDelegated */\n      tag_68\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      jump\t// in\n    tag_67:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_71\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_72\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_75\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"UUPS/UUPSV2.sol\":1247:1299  function cal() external {... */\n    tag_47:\n        /* \"UUPS/UUPSV2.sol\":1286:1287  x */\n      sload(0x00)\n        /* \"UUPS/UUPSV2.sol\":1286:1291  x * 2 */\n      tag_83\n      swap1\n        /* \"UUPS/UUPSV2.sol\":1290:1291  2 */\n      0x02\n        /* \"UUPS/UUPSV2.sol\":1286:1291  x * 2 */\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"UUPS/UUPSV2.sol\":1282:1283  x */\n      0x00\n        /* \"UUPS/UUPSV2.sol\":1282:1291  x = x * 2 */\n      sstore\n        /* \"UUPS/UUPSV2.sol\":1247:1299  function cal() external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_72\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_88\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1857:1908   */\n      mstore\n        /* \"#utility.yul\":1830:1848   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_90\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_75\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"UUPS/UUPSV2.sol\":861:1075  function initialize(uint _var) external initializer {... */\n    tag_57:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_92\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_93\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0xff\n      shl(0x40, 0x01)\n      dup3\n      div\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_94\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n    tag_94:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4799  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4803:4804  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_95\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4816:4820  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n    tag_95:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_96\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4871:4883  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4870:4883  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n    tag_96:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n      iszero\n      tag_97\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4966:4967  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_98\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n    tag_98:\n        /* \"UUPS/UUPSV2.sol\":924:925  x */\n      0x00\n        /* \"UUPS/UUPSV2.sol\":924:932  x = _var */\n      dup7\n      swap1\n      sstore\n        /* \"UUPS/UUPSV2.sol\":943:969  __Ownable_init(msg.sender) */\n      tag_100\n        /* \"UUPS/UUPSV2.sol\":958:968  msg.sender */\n      caller\n        /* \"UUPS/UUPSV2.sol\":943:957  __Ownable_init */\n      tag_101\n        /* \"UUPS/UUPSV2.sol\":943:969  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_100:\n        /* \"UUPS/UUPSV2.sol\":1012:1036  __UUPSUpgradeable_init() */\n      tag_102\n        /* \"UUPS/UUPSV2.sol\":1012:1034  __UUPSUpgradeable_init */\n      tag_103\n        /* \"UUPS/UUPSV2.sol\":1012:1036  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5068:5082  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n      iszero\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":3656:3706   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":3644:3646   */\n      0x20\n        /* \"#utility.yul\":3629:3647   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5171  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"UUPS/UUPSV2.sol\":861:1075  function initialize(uint _var) external initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4578:4890  function _checkProxy() internal view virtual {... */\n    tag_60:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4662  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4667:4673  __self */\n      immutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4673  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4770  address(this) == __self || // Must be called through delegatecall... */\n      tag_108\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4764:4770  __self */\n      immutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4770  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4760  ERC1967Utils.getImplementation() */\n      tag_109\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4760  ERC1967Utils.getImplementation() */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4770  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4770  address(this) == __self || // Must be called through delegatecall... */\n    tag_108:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4633:4884  if (... */\n      iszero\n      tag_74\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4844:4873  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"UUPS/UUPSV2.sol\":1140:1206  function _authorizeUpgrade(address) internal override onlyOwner {} */\n    tag_63:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_90\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_72\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6032:6570  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_65:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6149:6166  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6131:6181  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6131:6183  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_116\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_117\n      swap2\n      dup2\n      add\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      0x01\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6127:6564  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6493:6553  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1875:1907   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6493:6553  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1857:1908   */\n      mstore\n        /* \"#utility.yul\":1830:1848   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6493:6553  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_89\n        /* \"#utility.yul\":1711:1914   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6127:6564  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_119:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6225:6265  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6221:6341  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6292:6326  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6292:6326  UUPSUnsupportedProxiableUUID(slot) */\n      tag_89\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6221:6341  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6408  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6384:6401  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6403:6407  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6383  ERC1967Utils.upgradeToAndCall */\n      tag_128\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6408  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6184:6419  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6032:6570  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5007:5220  function _checkNotDelegated() internal view virtual {... */\n    tag_68:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5081:5085  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5096  __self */\n      immutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5073:5096  address(this) != __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5069:5214  if (address(this) != __self) {... */\n      tag_74\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5174:5203  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_72:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_74\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1857:1908   */\n      mstore\n        /* \"#utility.yul\":1830:1848   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_89\n        /* \"#utility.yul\":1711:1914   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_75:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n    tag_142:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9213  bytes32 slot = _initializableStorageSlot() */\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_101:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_90\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_103:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      tag_157\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n      tag_158\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_127\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n      tag_161\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      tag_64\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n      tag_164\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n    tag_146:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7164  _isInitializing */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n      tag_74\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7189:7206  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_149:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1875:1907   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1857:1908   */\n      mstore\n        /* \"#utility.yul\":1830:1848   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      tag_89\n        /* \"#utility.yul\":1711:1914   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_179:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3999:4011  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4024:4036  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4038:4061  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4071  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4084  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4085:4089  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4090  target.delegatecall(data) */\n      mload(0x40)\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_187\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_186)\n    tag_187:\n      0x60\n      swap2\n      pop\n    tag_186:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4023:4090  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      tag_188\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4134:4140  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4142:4149  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4151:4161  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4133  verifyCallResultFromTarget */\n      tag_189\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4100:4162  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      tag_74\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8535:8539  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      tag_193\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8582  _getInitializableStorage */\n      tag_93\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8598  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n      swap2\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n    tag_189:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4581:4593  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4610:4617  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      tag_196\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4641:4651  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4640  _revert */\n      tag_197\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      jump(tag_198)\n    tag_195:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4874  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4879  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_199\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4901  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4906  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1875:1907   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1857:1908   */\n      mstore\n        /* \"#utility.yul\":1830:1848   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n      tag_89\n        /* \"#utility.yul\":1711:1914   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_200:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4992:5002  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5559:6046  function _revert(bytes memory returndata) private pure {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5707  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5711  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5887:5897  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5881:5898  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5943:5958  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5930:5940  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5926:5928  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5922:5941  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5915:5959  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6010:6029  Errors.FailedCall() */\n      mload(0x40)\n      shl(0xe0, 0xd6bda275)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":196:369   */\n    tag_205:\n        /* \"#utility.yul\":264:284   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":313:344   */\n      dup2\n      and\n        /* \"#utility.yul\":303:345   */\n      dup2\n      eq\n        /* \"#utility.yul\":293:363   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":359:360   */\n      0x00\n        /* \"#utility.yul\":356:357   */\n      dup1\n        /* \"#utility.yul\":349:361   */\n      revert\n        /* \"#utility.yul\":293:363   */\n    tag_211:\n        /* \"#utility.yul\":196:369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":374:501   */\n    tag_206:\n        /* \"#utility.yul\":435:445   */\n      0x4e487b71\n        /* \"#utility.yul\":430:433   */\n      0xe0\n        /* \"#utility.yul\":426:446   */\n      shl\n        /* \"#utility.yul\":423:424   */\n      0x00\n        /* \"#utility.yul\":416:447   */\n      mstore\n        /* \"#utility.yul\":466:470   */\n      0x41\n        /* \"#utility.yul\":463:464   */\n      0x04\n        /* \"#utility.yul\":456:471   */\n      mstore\n        /* \"#utility.yul\":490:494   */\n      0x24\n        /* \"#utility.yul\":487:488   */\n      0x00\n        /* \"#utility.yul\":480:495   */\n      revert\n        /* \"#utility.yul\":506:1524   */\n    tag_20:\n        /* \"#utility.yul\":583:589   */\n      0x00\n        /* \"#utility.yul\":591:597   */\n      dup1\n        /* \"#utility.yul\":644:646   */\n      0x40\n        /* \"#utility.yul\":632:641   */\n      dup4\n        /* \"#utility.yul\":623:630   */\n      dup6\n        /* \"#utility.yul\":619:642   */\n      sub\n        /* \"#utility.yul\":615:647   */\n      slt\n        /* \"#utility.yul\":612:664   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":660:661   */\n      0x00\n        /* \"#utility.yul\":657:658   */\n      dup1\n        /* \"#utility.yul\":650:662   */\n      revert\n        /* \"#utility.yul\":612:664   */\n    tag_214:\n        /* \"#utility.yul\":683:712   */\n      tag_215\n        /* \"#utility.yul\":702:711   */\n      dup4\n        /* \"#utility.yul\":683:712   */\n      tag_205\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":673:712   */\n      swap2\n      pop\n        /* \"#utility.yul\":763:765   */\n      0x20\n        /* \"#utility.yul\":752:761   */\n      dup4\n        /* \"#utility.yul\":748:766   */\n      add\n        /* \"#utility.yul\":735:767   */\n      calldataload\n        /* \"#utility.yul\":790:808   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":782:788   */\n      dup2\n        /* \"#utility.yul\":779:809   */\n      gt\n        /* \"#utility.yul\":776:826   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":822:823   */\n      0x00\n        /* \"#utility.yul\":819:820   */\n      dup1\n        /* \"#utility.yul\":812:824   */\n      revert\n        /* \"#utility.yul\":776:826   */\n    tag_216:\n        /* \"#utility.yul\":845:867   */\n      dup4\n      add\n        /* \"#utility.yul\":898:902   */\n      0x1f\n        /* \"#utility.yul\":890:903   */\n      dup2\n      add\n        /* \"#utility.yul\":886:913   */\n      dup6\n      sgt\n        /* \"#utility.yul\":876:931   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":927:928   */\n      0x00\n        /* \"#utility.yul\":924:925   */\n      dup1\n        /* \"#utility.yul\":917:929   */\n      revert\n        /* \"#utility.yul\":876:931   */\n    tag_217:\n        /* \"#utility.yul\":967:969   */\n      dup1\n        /* \"#utility.yul\":954:970   */\n      calldataload\n        /* \"#utility.yul\":993:1011   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":985:991   */\n      dup2\n        /* \"#utility.yul\":982:1012   */\n      gt\n        /* \"#utility.yul\":979:1035   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":1015:1033   */\n      tag_219\n      tag_206\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":1064:1066   */\n      0x40\n        /* \"#utility.yul\":1058:1067   */\n      mload\n        /* \"#utility.yul\":1156:1158   */\n      0x1f\n        /* \"#utility.yul\":1118:1135   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1114:1145   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1147:1149   */\n      0x3f\n        /* \"#utility.yul\":1110:1150   */\n      add\n        /* \"#utility.yul\":1106:1160   */\n      and\n        /* \"#utility.yul\":1094:1161   */\n      dup2\n      add\n        /* \"#utility.yul\":1191:1209   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1176:1210   */\n      dup2\n      gt\n        /* \"#utility.yul\":1212:1234   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1173:1235   */\n      or\n        /* \"#utility.yul\":1170:1258   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":1238:1256   */\n      tag_221\n      tag_206\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":1274:1276   */\n      0x40\n        /* \"#utility.yul\":1267:1289   */\n      mstore\n        /* \"#utility.yul\":1298:1320   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":1339:1354   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1356:1358   */\n      0x20\n        /* \"#utility.yul\":1335:1359   */\n      add\n        /* \"#utility.yul\":1332:1369   */\n      dup8\n      lt\n        /* \"#utility.yul\":1329:1386   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":1382:1383   */\n      0x00\n        /* \"#utility.yul\":1379:1380   */\n      dup1\n        /* \"#utility.yul\":1372:1384   */\n      revert\n        /* \"#utility.yul\":1329:1386   */\n    tag_222:\n        /* \"#utility.yul\":1438:1444   */\n      dup2\n        /* \"#utility.yul\":1433:1435   */\n      0x20\n        /* \"#utility.yul\":1429:1431   */\n      dup5\n        /* \"#utility.yul\":1425:1436   */\n      add\n        /* \"#utility.yul\":1420:1422   */\n      0x20\n        /* \"#utility.yul\":1412:1418   */\n      dup4\n        /* \"#utility.yul\":1408:1423   */\n      add\n        /* \"#utility.yul\":1395:1445   */\n      calldatacopy\n        /* \"#utility.yul\":1491:1492   */\n      0x00\n        /* \"#utility.yul\":1486:1488   */\n      0x20\n        /* \"#utility.yul\":1477:1483   */\n      dup4\n        /* \"#utility.yul\":1469:1475   */\n      dup4\n        /* \"#utility.yul\":1465:1484   */\n      add\n        /* \"#utility.yul\":1461:1489   */\n      add\n        /* \"#utility.yul\":1454:1493   */\n      mstore\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1502:1518   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":506:1524   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2207   */\n    tag_207:\n        /* \"#utility.yul\":1960:1963   */\n      0x00\n        /* \"#utility.yul\":1998:2003   */\n      dup2\n        /* \"#utility.yul\":1992:2004   */\n      mload\n        /* \"#utility.yul\":2025:2031   */\n      dup1\n        /* \"#utility.yul\":2020:2023   */\n      dup5\n        /* \"#utility.yul\":2013:2032   */\n      mstore\n        /* \"#utility.yul\":2081:2087   */\n      dup1\n        /* \"#utility.yul\":2074:2078   */\n      0x20\n        /* \"#utility.yul\":2067:2072   */\n      dup5\n        /* \"#utility.yul\":2063:2079   */\n      add\n        /* \"#utility.yul\":2056:2060   */\n      0x20\n        /* \"#utility.yul\":2051:2054   */\n      dup7\n        /* \"#utility.yul\":2047:2061   */\n      add\n        /* \"#utility.yul\":2041:2088   */\n      mcopy\n        /* \"#utility.yul\":2133:2134   */\n      0x00\n        /* \"#utility.yul\":2126:2130   */\n      0x20\n        /* \"#utility.yul\":2117:2123   */\n      dup3\n        /* \"#utility.yul\":2112:2115   */\n      dup7\n        /* \"#utility.yul\":2108:2124   */\n      add\n        /* \"#utility.yul\":2104:2131   */\n      add\n        /* \"#utility.yul\":2097:2135   */\n      mstore\n        /* \"#utility.yul\":2196:2200   */\n      0x20\n        /* \"#utility.yul\":2189:2191   */\n      0x1f\n        /* \"#utility.yul\":2185:2192   */\n      not\n        /* \"#utility.yul\":2180:2182   */\n      0x1f\n        /* \"#utility.yul\":2172:2178   */\n      dup4\n        /* \"#utility.yul\":2168:2183   */\n      add\n        /* \"#utility.yul\":2164:2193   */\n      and\n        /* \"#utility.yul\":2159:2162   */\n      dup6\n        /* \"#utility.yul\":2155:2194   */\n      add\n        /* \"#utility.yul\":2151:2201   */\n      add\n        /* \"#utility.yul\":2144:2201   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1919:2207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2212:2429   */\n    tag_39:\n        /* \"#utility.yul\":2359:2361   */\n      0x20\n        /* \"#utility.yul\":2348:2357   */\n      dup2\n        /* \"#utility.yul\":2341:2362   */\n      mstore\n        /* \"#utility.yul\":2322:2326   */\n      0x00\n        /* \"#utility.yul\":2379:2423   */\n      tag_198\n        /* \"#utility.yul\":2419:2421   */\n      0x20\n        /* \"#utility.yul\":2408:2417   */\n      dup4\n        /* \"#utility.yul\":2404:2422   */\n      add\n        /* \"#utility.yul\":2396:2402   */\n      dup5\n        /* \"#utility.yul\":2379:2423   */\n      tag_207\n      jump\t// in\n        /* \"#utility.yul\":2658:2844   */\n    tag_51:\n        /* \"#utility.yul\":2717:2723   */\n      0x00\n        /* \"#utility.yul\":2770:2772   */\n      0x20\n        /* \"#utility.yul\":2758:2767   */\n      dup3\n        /* \"#utility.yul\":2749:2756   */\n      dup5\n        /* \"#utility.yul\":2745:2768   */\n      sub\n        /* \"#utility.yul\":2741:2773   */\n      slt\n        /* \"#utility.yul\":2738:2790   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":2786:2787   */\n      0x00\n        /* \"#utility.yul\":2783:2784   */\n      dup1\n        /* \"#utility.yul\":2776:2788   */\n      revert\n        /* \"#utility.yul\":2738:2790   */\n    tag_231:\n        /* \"#utility.yul\":2809:2838   */\n      tag_198\n        /* \"#utility.yul\":2828:2837   */\n      dup3\n        /* \"#utility.yul\":2809:2838   */\n      tag_205\n      jump\t// in\n        /* \"#utility.yul\":2849:3029   */\n    tag_56:\n        /* \"#utility.yul\":2908:2914   */\n      0x00\n        /* \"#utility.yul\":2961:2963   */\n      0x20\n        /* \"#utility.yul\":2949:2958   */\n      dup3\n        /* \"#utility.yul\":2940:2947   */\n      dup5\n        /* \"#utility.yul\":2936:2959   */\n      sub\n        /* \"#utility.yul\":2932:2964   */\n      slt\n        /* \"#utility.yul\":2929:2981   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":2977:2978   */\n      0x00\n        /* \"#utility.yul\":2974:2975   */\n      dup1\n        /* \"#utility.yul\":2967:2979   */\n      revert\n        /* \"#utility.yul\":2929:2981   */\n    tag_234:\n      pop\n        /* \"#utility.yul\":3000:3023   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2849:3029   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3233:3498   */\n    tag_84:\n        /* \"#utility.yul\":3306:3315   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3337:3346   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3354:3369   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3348:3370   */\n      dup5\n      eq\n        /* \"#utility.yul\":3334:3371   */\n      or\n        /* \"#utility.yul\":3324:3492   */\n      tag_142\n      jumpi\n        /* \"#utility.yul\":3414:3424   */\n      0x4e487b71\n        /* \"#utility.yul\":3409:3412   */\n      0xe0\n        /* \"#utility.yul\":3405:3425   */\n      shl\n        /* \"#utility.yul\":3402:3403   */\n      0x00\n        /* \"#utility.yul\":3395:3426   */\n      mstore\n        /* \"#utility.yul\":3449:3453   */\n      0x11\n        /* \"#utility.yul\":3446:3447   */\n      0x04\n        /* \"#utility.yul\":3439:3454   */\n      mstore\n        /* \"#utility.yul\":3477:3481   */\n      0x24\n        /* \"#utility.yul\":3474:3475   */\n      0x00\n        /* \"#utility.yul\":3467:3482   */\n      revert\n        /* \"#utility.yul\":3717:3901   */\n    tag_118:\n        /* \"#utility.yul\":3787:3793   */\n      0x00\n        /* \"#utility.yul\":3840:3842   */\n      0x20\n        /* \"#utility.yul\":3828:3837   */\n      dup3\n        /* \"#utility.yul\":3819:3826   */\n      dup5\n        /* \"#utility.yul\":3815:3838   */\n      sub\n        /* \"#utility.yul\":3811:3843   */\n      slt\n        /* \"#utility.yul\":3808:3860   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":3856:3857   */\n      0x00\n        /* \"#utility.yul\":3853:3854   */\n      dup1\n        /* \"#utility.yul\":3846:3858   */\n      revert\n        /* \"#utility.yul\":3808:3860   */\n    tag_240:\n      pop\n        /* \"#utility.yul\":3879:3895   */\n      mload\n      swap2\n        /* \"#utility.yul\":3717:3901   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3906:4207   */\n    tag_184:\n        /* \"#utility.yul\":4035:4038   */\n      0x00\n        /* \"#utility.yul\":4073:4079   */\n      dup3\n        /* \"#utility.yul\":4067:4080   */\n      mload\n        /* \"#utility.yul\":4119:4125   */\n      dup1\n        /* \"#utility.yul\":4112:4116   */\n      0x20\n        /* \"#utility.yul\":4104:4110   */\n      dup6\n        /* \"#utility.yul\":4100:4117   */\n      add\n        /* \"#utility.yul\":4095:4098   */\n      dup5\n        /* \"#utility.yul\":4089:4126   */\n      mcopy\n        /* \"#utility.yul\":4181:4182   */\n      0x00\n        /* \"#utility.yul\":4145:4161   */\n      swap3\n      add\n        /* \"#utility.yul\":4170:4183   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":4145:4161   */\n      swap2\n        /* \"#utility.yul\":3906:4207   */\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n\n    auxdata: 0xa26469706673582212201780e18680499af1328ad8c0dfacb250c67fb31458ca691e4c821cf7cc0147b964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1452": {
									"entryPoint": null,
									"id": 1452,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_416": {
									"entryPoint": 33,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_461": {
									"entryPoint": null,
									"id": 461,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:216:12",
										"nodeType": "YulBlock",
										"src": "0:216:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "113:101:12",
													"nodeType": "YulBlock",
													"src": "113:101:12",
													"statements": [
														{
															"nativeSrc": "123:26:12",
															"nodeType": "YulAssignment",
															"src": "123:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "135:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "146:2:12",
																		"nodeType": "YulLiteral",
																		"src": "146:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "131:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:12"
																},
																"nativeSrc": "131:18:12",
																"nodeType": "YulFunctionCall",
																"src": "131:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "123:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "165:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "180:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "196:2:12",
																								"nodeType": "YulLiteral",
																								"src": "196:2:12",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "200:1:12",
																								"nodeType": "YulLiteral",
																								"src": "200:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "192:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "192:3:12"
																						},
																						"nativeSrc": "192:10:12",
																						"nodeType": "YulFunctionCall",
																						"src": "192:10:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "204:1:12",
																						"nodeType": "YulLiteral",
																						"src": "204:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "188:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "188:3:12"
																				},
																				"nativeSrc": "188:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "188:18:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "176:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:12"
																		},
																		"nativeSrc": "176:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "176:31:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "158:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:12"
																},
																"nativeSrc": "158:50:12",
																"nodeType": "YulFunctionCall",
																"src": "158:50:12"
															},
															"nativeSrc": "158:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "158:50:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "14:200:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "82:9:12",
														"nodeType": "YulTypedName",
														"src": "82:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "93:6:12",
														"nodeType": "YulTypedName",
														"src": "93:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "104:4:12",
														"nodeType": "YulTypedName",
														"src": "104:4:12",
														"type": ""
													}
												],
												"src": "14:200:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405230608052348015610013575f80fd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051610aa26100f95f395f81816103c9015281816103f201526105360152610aa25ff3fe60806040526004361061008f575f3560e01c8063a4ef7d3011610057578063a4ef7d301461013d578063ad3cb1cc14610197578063b7c738f4146101c7578063f2fde38b146101db578063fe4b84df146101fa575f80fd5b80630c55699c146100935780634f1ef286146100ba57806352d1902d146100cf578063715018a6146100e35780638da5cb5b146100f7575b5f80fd5b34801561009e575f80fd5b506100a75f5481565b6040519081526020015b60405180910390f35b6100cd6100c83660046108c8565b610219565b005b3480156100da575f80fd5b506100a7610238565b3480156100ee575f80fd5b506100cd610253565b348015610102575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b0390911681526020016100b1565b348015610148575f80fd5b5061018a6040805160016024808301919091528251808303909101815260449091019091526020810180516001600160e01b031663fe4b84df60e01b17905290565b6040516100b191906109ba565b3480156101a2575f80fd5b5061018a604051806040016040528060058152602001640352e302e360dc1b81525081565b3480156101d2575f80fd5b506100cd610266565b3480156101e6575f80fd5b506100cd6101f53660046109cc565b610277565b348015610205575f80fd5b506100cd6102143660046109e5565b6102b9565b6102216103be565b61022a82610462565b610234828261046a565b5050565b5f61024161052b565b505f80516020610a4d83398151915290565b61025b610574565b6102645f6105cf565b565b5f546102739060026109fc565b5f55565b61027f610574565b6001600160a01b0381166102ad57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6102b6816105cf565b50565b5f6102c261063f565b805490915060ff600160401b820416159067ffffffffffffffff165f811580156102e95750825b90505f8267ffffffffffffffff1660011480156103055750303b155b905081158015610313575080155b156103315760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561035b57845460ff60401b1916600160401b1785555b5f86905561036833610669565b61037061067a565b83156103b657845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061044457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104385f80516020610a4d833981519152546001600160a01b031690565b6001600160a01b031614155b156102645760405163703e46dd60e11b815260040160405180910390fd5b6102b6610574565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156104c4575060408051601f3d908101601f191682019092526104c191810190610a1f565b60015b6104ec57604051634c9c8ce360e01b81526001600160a01b03831660048201526024016102a4565b5f80516020610a4d833981519152811461051c57604051632a87526960e21b8152600481018290526024016102a4565b6105268383610682565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102645760405163703e46dd60e11b815260040160405180910390fd5b336105a67f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146102645760405163118cdaa760e01b81523360048201526024016102a4565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005b92915050565b6106716106d7565b6102b6816106fc565b6102646106d7565b61068b82610704565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156106cf576105268282610767565b6102346107d9565b6106df6107f8565b61026457604051631afcd79f60e31b815260040160405180910390fd5b61027f6106d7565b806001600160a01b03163b5f0361073957604051634c9c8ce360e01b81526001600160a01b03821660048201526024016102a4565b5f80516020610a4d83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516107839190610a36565b5f60405180830381855af49150503d805f81146107bb576040519150601f19603f3d011682016040523d82523d5f602084013e6107c0565b606091505b50915091506107d0858383610811565b95945050505050565b34156102645760405163b398979f60e01b815260040160405180910390fd5b5f61080161063f565b54600160401b900460ff16919050565b6060826108265761082182610870565b610869565b815115801561083d57506001600160a01b0384163b155b1561086657604051639996b31560e01b81526001600160a01b03851660048201526024016102a4565b50805b9392505050565b8051156108805780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b80356001600160a01b03811681146108af575f80fd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f80604083850312156108d9575f80fd5b6108e283610899565b9150602083013567ffffffffffffffff8111156108fd575f80fd5b8301601f8101851361090d575f80fd5b803567ffffffffffffffff811115610927576109276108b4565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610956576109566108b4565b60405281815282820160200187101561096d575f80fd5b816020840160208301375f602083830101528093505050509250929050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610869602083018461098c565b5f602082840312156109dc575f80fd5b61086982610899565b5f602082840312156109f5575f80fd5b5035919050565b808202811582820484141761066357634e487b7160e01b5f52601160045260245ffd5b5f60208284031215610a2f575f80fd5b5051919050565b5f82518060208501845e5f92019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212201780e18680499af1328ad8c0dfacb250c67fb31458ca691e4c821cf7cc0147b964736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C PUSH2 0x21 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x71 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH2 0xD0 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xAA2 PUSH2 0xF9 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x3C9 ADD MSTORE DUP2 DUP2 PUSH2 0x3F2 ADD MSTORE PUSH2 0x536 ADD MSTORE PUSH2 0xAA2 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA4EF7D30 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xA4EF7D30 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xB7C738F4 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x1FA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC55699C EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C8 JUMP JUMPDEST PUSH2 0x219 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH2 0x238 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0x253 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x102 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x148 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xFE4B84DF PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x9BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0x266 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E5 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH2 0x221 PUSH2 0x3BE JUMP JUMPDEST PUSH2 0x22A DUP3 PUSH2 0x462 JUMP JUMPDEST PUSH2 0x234 DUP3 DUP3 PUSH2 0x46A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x241 PUSH2 0x52B JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x574 JUMP JUMPDEST PUSH2 0x264 PUSH0 PUSH2 0x5CF JUMP JUMPDEST JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x273 SWAP1 PUSH1 0x2 PUSH2 0x9FC JUMP JUMPDEST PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x27F PUSH2 0x574 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B6 DUP2 PUSH2 0x5CF JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x2C2 PUSH2 0x63F JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x2E9 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x305 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x313 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x35B JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH0 DUP7 SWAP1 SSTORE PUSH2 0x368 CALLER PUSH2 0x669 JUMP JUMPDEST PUSH2 0x370 PUSH2 0x67A JUMP JUMPDEST DUP4 ISZERO PUSH2 0x3B6 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x444 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x438 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x264 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B6 PUSH2 0x574 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x4C4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x4C1 SWAP2 DUP2 ADD SWAP1 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x4EC JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2A4 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x51C JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x2A4 JUMP JUMPDEST PUSH2 0x526 DUP4 DUP4 PUSH2 0x682 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x264 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x5A6 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x264 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2A4 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x671 PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x2B6 DUP2 PUSH2 0x6FC JUMP JUMPDEST PUSH2 0x264 PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x68B DUP3 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x6CF JUMPI PUSH2 0x526 DUP3 DUP3 PUSH2 0x767 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x6DF PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x264 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27F PUSH2 0x6D7 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x739 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2A4 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x783 SWAP2 SWAP1 PUSH2 0xA36 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7BB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x7D0 DUP6 DUP4 DUP4 PUSH2 0x811 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x264 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x801 PUSH2 0x63F JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x826 JUMPI PUSH2 0x821 DUP3 PUSH2 0x870 JUMP JUMPDEST PUSH2 0x869 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x83D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2A4 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x880 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8AF JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8E2 DUP4 PUSH2 0x899 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8FD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x90D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x927 JUMPI PUSH2 0x927 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x956 JUMPI PUSH2 0x956 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x96D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x869 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x98C JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x869 DUP3 PUSH2 0x899 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x663 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA2F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA264697066735822122017 DUP1 0xE1 DUP7 DUP1 BLOBHASH SWAP11 CALL ORIGIN DUP11 0xD8 0xC0 0xDF 0xAC 0xB2 POP 0xC6 PUSH32 0xB31458CA691E4C821CF7CC0147B964736F6C634300081A003300000000000000 ",
							"sourceMap": "330:1147:11:-:0;;;1171:4:2;1128:48;;716:95:11;;;;;;;;;-1:-1:-1;741:22:11;:20;:22::i;:::-;330:1147;;7709:422:1;3147:66;7898:15;;;;;;;7894:76;;;7936:23;;-1:-1:-1;;;7936:23:1;;;;;;;;;;;7894:76;7983:14;;-1:-1:-1;;;;;7983:14:1;;;:34;7979:146;;8033:33;;-1:-1:-1;;;;;;8033:33:1;-1:-1:-1;;;;;8033:33:1;;;;;8085:29;;158:50:12;;;8085:29:1;;146:2:12;131:18;8085:29:1;;;;;;;7979:146;7758:373;7709:422::o;14:200:12:-;330:1147:11;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_486": {
									"entryPoint": null,
									"id": 486,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 1641,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 1788,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_516": {
									"entryPoint": 1658,
									"id": 516,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_1481": {
									"entryPoint": 1122,
									"id": 1481,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 1751,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1014": {
									"entryPoint": 2009,
									"id": 1014,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_592": {
									"entryPoint": 1323,
									"id": 592,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 1396,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_576": {
									"entryPoint": 958,
									"id": 576,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_461": {
									"entryPoint": 1599,
									"id": 461,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 2040,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_672": {
									"entryPoint": null,
									"id": 672,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1284": {
									"entryPoint": 2160,
									"id": 1284,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_794": {
									"entryPoint": 1796,
									"id": 794,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 1487,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_643": {
									"entryPoint": 1130,
									"id": 643,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@cal_1491": {
									"entryPoint": 614,
									"id": 1491,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_1202": {
									"entryPoint": 1895,
									"id": 1202,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1342": {
									"entryPoint": null,
									"id": 1342,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_1472": {
									"entryPoint": 697,
									"id": 1472,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": null,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_534": {
									"entryPoint": 568,
									"id": 534,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 595,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@showInitCode_1505": {
									"entryPoint": null,
									"id": 1505,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_164": {
									"entryPoint": 631,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeToAndCall_554": {
									"entryPoint": 537,
									"id": 554,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_830": {
									"entryPoint": 1666,
									"id": 830,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1242": {
									"entryPoint": 2065,
									"id": 1242,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@x_1444": {
									"entryPoint": null,
									"id": 1444,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 2248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 2591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 2444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 2228,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4209:12",
										"nodeType": "YulBlock",
										"src": "0:4209:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:12",
													"nodeType": "YulBlock",
													"src": "115:76:12",
													"statements": [
														{
															"nativeSrc": "125:26:12",
															"nodeType": "YulAssignment",
															"src": "125:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:12",
																		"nodeType": "YulLiteral",
																		"src": "148:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:12"
																},
																"nativeSrc": "133:18:12",
																"nodeType": "YulFunctionCall",
																"src": "133:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:12"
																},
																"nativeSrc": "160:25:12",
																"nodeType": "YulFunctionCall",
																"src": "160:25:12"
															},
															"nativeSrc": "160:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:12",
														"nodeType": "YulTypedName",
														"src": "84:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:12",
														"nodeType": "YulTypedName",
														"src": "95:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:12",
														"nodeType": "YulTypedName",
														"src": "106:4:12",
														"type": ""
													}
												],
												"src": "14:177:12"
											},
											{
												"body": {
													"nativeSrc": "245:124:12",
													"nodeType": "YulBlock",
													"src": "245:124:12",
													"statements": [
														{
															"nativeSrc": "255:29:12",
															"nodeType": "YulAssignment",
															"src": "255:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "277:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "277:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "264:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "264:12:12"
																},
																"nativeSrc": "264:20:12",
																"nodeType": "YulFunctionCall",
																"src": "264:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "255:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "255:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "347:16:12",
																"nodeType": "YulBlock",
																"src": "347:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "356:1:12",
																					"nodeType": "YulLiteral",
																					"src": "356:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "359:1:12",
																					"nodeType": "YulLiteral",
																					"src": "359:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "349:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "349:6:12"
																			},
																			"nativeSrc": "349:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "349:12:12"
																		},
																		"nativeSrc": "349:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "349:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "306:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "306:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "317:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "317:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "332:3:12",
																										"nodeType": "YulLiteral",
																										"src": "332:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "337:1:12",
																										"nodeType": "YulLiteral",
																										"src": "337:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "328:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "328:3:12"
																								},
																								"nativeSrc": "328:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "328:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "341:1:12",
																								"nodeType": "YulLiteral",
																								"src": "341:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "324:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "324:3:12"
																						},
																						"nativeSrc": "324:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "324:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "313:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "313:3:12"
																				},
																				"nativeSrc": "313:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "313:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "303:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "303:2:12"
																		},
																		"nativeSrc": "303:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "303:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "296:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "296:6:12"
																},
																"nativeSrc": "296:50:12",
																"nodeType": "YulFunctionCall",
																"src": "296:50:12"
															},
															"nativeSrc": "293:70:12",
															"nodeType": "YulIf",
															"src": "293:70:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "196:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "224:6:12",
														"nodeType": "YulTypedName",
														"src": "224:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "235:5:12",
														"nodeType": "YulTypedName",
														"src": "235:5:12",
														"type": ""
													}
												],
												"src": "196:173:12"
											},
											{
												"body": {
													"nativeSrc": "406:95:12",
													"nodeType": "YulBlock",
													"src": "406:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "423:1:12",
																		"nodeType": "YulLiteral",
																		"src": "423:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "430:3:12",
																				"nodeType": "YulLiteral",
																				"src": "430:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "435:10:12",
																				"nodeType": "YulLiteral",
																				"src": "435:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "426:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "426:3:12"
																		},
																		"nativeSrc": "426:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "426:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "416:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "416:6:12"
																},
																"nativeSrc": "416:31:12",
																"nodeType": "YulFunctionCall",
																"src": "416:31:12"
															},
															"nativeSrc": "416:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "416:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "463:1:12",
																		"nodeType": "YulLiteral",
																		"src": "463:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "466:4:12",
																		"nodeType": "YulLiteral",
																		"src": "466:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "456:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "456:6:12"
																},
																"nativeSrc": "456:15:12",
																"nodeType": "YulFunctionCall",
																"src": "456:15:12"
															},
															"nativeSrc": "456:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "456:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "487:1:12",
																		"nodeType": "YulLiteral",
																		"src": "487:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "490:4:12",
																		"nodeType": "YulLiteral",
																		"src": "490:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "480:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:12"
																},
																"nativeSrc": "480:15:12",
																"nodeType": "YulFunctionCall",
																"src": "480:15:12"
															},
															"nativeSrc": "480:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "480:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "374:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "374:127:12"
											},
											{
												"body": {
													"nativeSrc": "602:922:12",
													"nodeType": "YulBlock",
													"src": "602:922:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "648:16:12",
																"nodeType": "YulBlock",
																"src": "648:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "657:1:12",
																					"nodeType": "YulLiteral",
																					"src": "657:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "660:1:12",
																					"nodeType": "YulLiteral",
																					"src": "660:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "650:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "650:6:12"
																			},
																			"nativeSrc": "650:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "650:12:12"
																		},
																		"nativeSrc": "650:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "650:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "623:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "623:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "632:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "632:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "619:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "619:3:12"
																		},
																		"nativeSrc": "619:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "619:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "644:2:12",
																		"nodeType": "YulLiteral",
																		"src": "644:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "615:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "615:3:12"
																},
																"nativeSrc": "615:32:12",
																"nodeType": "YulFunctionCall",
																"src": "615:32:12"
															},
															"nativeSrc": "612:52:12",
															"nodeType": "YulIf",
															"src": "612:52:12"
														},
														{
															"nativeSrc": "673:39:12",
															"nodeType": "YulAssignment",
															"src": "673:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "702:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "702:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "683:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "683:18:12"
																},
																"nativeSrc": "683:29:12",
																"nodeType": "YulFunctionCall",
																"src": "683:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "673:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "673:6:12"
																}
															]
														},
														{
															"nativeSrc": "721:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "721:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "752:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "752:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "763:2:12",
																				"nodeType": "YulLiteral",
																				"src": "763:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "748:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "748:3:12"
																		},
																		"nativeSrc": "748:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "748:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "735:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "735:12:12"
																},
																"nativeSrc": "735:32:12",
																"nodeType": "YulFunctionCall",
																"src": "735:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "725:6:12",
																	"nodeType": "YulTypedName",
																	"src": "725:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "810:16:12",
																"nodeType": "YulBlock",
																"src": "810:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "819:1:12",
																					"nodeType": "YulLiteral",
																					"src": "819:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "822:1:12",
																					"nodeType": "YulLiteral",
																					"src": "822:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "812:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "812:6:12"
																			},
																			"nativeSrc": "812:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "812:12:12"
																		},
																		"nativeSrc": "812:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "812:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "782:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "782:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "790:18:12",
																		"nodeType": "YulLiteral",
																		"src": "790:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "779:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "779:2:12"
																},
																"nativeSrc": "779:30:12",
																"nodeType": "YulFunctionCall",
																"src": "779:30:12"
															},
															"nativeSrc": "776:50:12",
															"nodeType": "YulIf",
															"src": "776:50:12"
														},
														{
															"nativeSrc": "835:32:12",
															"nodeType": "YulVariableDeclaration",
															"src": "835:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "849:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "849:9:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "860:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "860:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "845:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:12"
																},
																"nativeSrc": "845:22:12",
																"nodeType": "YulFunctionCall",
																"src": "845:22:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "839:2:12",
																	"nodeType": "YulTypedName",
																	"src": "839:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "915:16:12",
																"nodeType": "YulBlock",
																"src": "915:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "924:1:12",
																					"nodeType": "YulLiteral",
																					"src": "924:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "927:1:12",
																					"nodeType": "YulLiteral",
																					"src": "927:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "917:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "917:6:12"
																			},
																			"nativeSrc": "917:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "917:12:12"
																		},
																		"nativeSrc": "917:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "917:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "894:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "894:2:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "898:4:12",
																						"nodeType": "YulLiteral",
																						"src": "898:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "890:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "890:3:12"
																				},
																				"nativeSrc": "890:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "890:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "905:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "905:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "886:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "886:3:12"
																		},
																		"nativeSrc": "886:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "886:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "879:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "879:6:12"
																},
																"nativeSrc": "879:35:12",
																"nodeType": "YulFunctionCall",
																"src": "879:35:12"
															},
															"nativeSrc": "876:55:12",
															"nodeType": "YulIf",
															"src": "876:55:12"
														},
														{
															"nativeSrc": "940:30:12",
															"nodeType": "YulVariableDeclaration",
															"src": "940:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "967:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "967:2:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "954:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "954:12:12"
																},
																"nativeSrc": "954:16:12",
																"nodeType": "YulFunctionCall",
																"src": "954:16:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "944:6:12",
																	"nodeType": "YulTypedName",
																	"src": "944:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1013:22:12",
																"nodeType": "YulBlock",
																"src": "1013:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1015:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1015:16:12"
																			},
																			"nativeSrc": "1015:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1015:18:12"
																		},
																		"nativeSrc": "1015:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1015:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "985:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "985:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "993:18:12",
																		"nodeType": "YulLiteral",
																		"src": "993:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "982:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "982:2:12"
																},
																"nativeSrc": "982:30:12",
																"nodeType": "YulFunctionCall",
																"src": "982:30:12"
															},
															"nativeSrc": "979:56:12",
															"nodeType": "YulIf",
															"src": "979:56:12"
														},
														{
															"nativeSrc": "1044:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1044:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1064:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1058:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1058:5:12"
																},
																"nativeSrc": "1058:9:12",
																"nodeType": "YulFunctionCall",
																"src": "1058:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1048:6:12",
																	"nodeType": "YulTypedName",
																	"src": "1048:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1076:85:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1076:85:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1098:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1098:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "1122:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "1122:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1130:4:12",
																										"nodeType": "YulLiteral",
																										"src": "1130:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1118:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1118:3:12"
																								},
																								"nativeSrc": "1118:17:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1118:17:12"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1141:2:12",
																										"nodeType": "YulLiteral",
																										"src": "1141:2:12",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1137:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1137:3:12"
																								},
																								"nativeSrc": "1137:7:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1137:7:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "1114:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1114:3:12"
																						},
																						"nativeSrc": "1114:31:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1114:31:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1147:2:12",
																						"nodeType": "YulLiteral",
																						"src": "1147:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1110:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1110:3:12"
																				},
																				"nativeSrc": "1110:40:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1110:40:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1156:2:12",
																						"nodeType": "YulLiteral",
																						"src": "1156:2:12",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1152:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1152:3:12"
																				},
																				"nativeSrc": "1152:7:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1152:7:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1106:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1106:3:12"
																		},
																		"nativeSrc": "1106:54:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1106:54:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1094:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1094:3:12"
																},
																"nativeSrc": "1094:67:12",
																"nodeType": "YulFunctionCall",
																"src": "1094:67:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1080:10:12",
																	"nodeType": "YulTypedName",
																	"src": "1080:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1236:22:12",
																"nodeType": "YulBlock",
																"src": "1236:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1238:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1238:16:12"
																			},
																			"nativeSrc": "1238:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1238:18:12"
																		},
																		"nativeSrc": "1238:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1238:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1179:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1179:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1191:18:12",
																				"nodeType": "YulLiteral",
																				"src": "1191:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1176:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1176:2:12"
																		},
																		"nativeSrc": "1176:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1176:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1215:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1215:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1227:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1227:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1212:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1212:2:12"
																		},
																		"nativeSrc": "1212:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1212:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1173:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1173:2:12"
																},
																"nativeSrc": "1173:62:12",
																"nodeType": "YulFunctionCall",
																"src": "1173:62:12"
															},
															"nativeSrc": "1170:88:12",
															"nodeType": "YulIf",
															"src": "1170:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1274:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1274:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1278:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "1278:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1267:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1267:6:12"
																},
																"nativeSrc": "1267:22:12",
																"nodeType": "YulFunctionCall",
																"src": "1267:22:12"
															},
															"nativeSrc": "1267:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "1267:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1305:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1305:6:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1313:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1313:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1298:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1298:6:12"
																},
																"nativeSrc": "1298:22:12",
																"nodeType": "YulFunctionCall",
																"src": "1298:22:12"
															},
															"nativeSrc": "1298:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "1298:22:12"
														},
														{
															"body": {
																"nativeSrc": "1370:16:12",
																"nodeType": "YulBlock",
																"src": "1370:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1379:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1379:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1382:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1382:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1372:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1372:6:12"
																			},
																			"nativeSrc": "1372:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1372:12:12"
																		},
																		"nativeSrc": "1372:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1372:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1343:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "1343:2:12"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1347:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1347:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1339:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1339:3:12"
																				},
																				"nativeSrc": "1339:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1339:15:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1356:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1356:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1335:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1335:3:12"
																		},
																		"nativeSrc": "1335:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1335:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1361:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "1361:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1332:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1332:2:12"
																},
																"nativeSrc": "1332:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1332:37:12"
															},
															"nativeSrc": "1329:57:12",
															"nodeType": "YulIf",
															"src": "1329:57:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1412:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1412:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1420:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1420:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1408:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1408:3:12"
																		},
																		"nativeSrc": "1408:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1408:15:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "1429:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "1429:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1433:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1433:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1425:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1425:3:12"
																		},
																		"nativeSrc": "1425:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1425:11:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1438:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1438:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1395:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1395:12:12"
																},
																"nativeSrc": "1395:50:12",
																"nodeType": "YulFunctionCall",
																"src": "1395:50:12"
															},
															"nativeSrc": "1395:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "1395:50:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "1469:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1469:6:12"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1477:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1477:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1465:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1465:3:12"
																				},
																				"nativeSrc": "1465:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1465:19:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1486:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1486:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1461:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1461:3:12"
																		},
																		"nativeSrc": "1461:28:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1461:28:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1491:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1491:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1454:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1454:6:12"
																},
																"nativeSrc": "1454:39:12",
																"nodeType": "YulFunctionCall",
																"src": "1454:39:12"
															},
															"nativeSrc": "1454:39:12",
															"nodeType": "YulExpressionStatement",
															"src": "1454:39:12"
														},
														{
															"nativeSrc": "1502:16:12",
															"nodeType": "YulAssignment",
															"src": "1502:16:12",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1512:6:12",
																"nodeType": "YulIdentifier",
																"src": "1512:6:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1502:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1502:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "506:1018:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "560:9:12",
														"nodeType": "YulTypedName",
														"src": "560:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "571:7:12",
														"nodeType": "YulTypedName",
														"src": "571:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "583:6:12",
														"nodeType": "YulTypedName",
														"src": "583:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "591:6:12",
														"nodeType": "YulTypedName",
														"src": "591:6:12",
														"type": ""
													}
												],
												"src": "506:1018:12"
											},
											{
												"body": {
													"nativeSrc": "1630:76:12",
													"nodeType": "YulBlock",
													"src": "1630:76:12",
													"statements": [
														{
															"nativeSrc": "1640:26:12",
															"nodeType": "YulAssignment",
															"src": "1640:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1652:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1652:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1663:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1663:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1648:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1648:3:12"
																},
																"nativeSrc": "1648:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1648:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1640:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1640:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1682:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1682:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1693:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1693:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1675:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1675:6:12"
																},
																"nativeSrc": "1675:25:12",
																"nodeType": "YulFunctionCall",
																"src": "1675:25:12"
															},
															"nativeSrc": "1675:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "1675:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1529:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1599:9:12",
														"nodeType": "YulTypedName",
														"src": "1599:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1610:6:12",
														"nodeType": "YulTypedName",
														"src": "1610:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1621:4:12",
														"nodeType": "YulTypedName",
														"src": "1621:4:12",
														"type": ""
													}
												],
												"src": "1529:177:12"
											},
											{
												"body": {
													"nativeSrc": "1812:102:12",
													"nodeType": "YulBlock",
													"src": "1812:102:12",
													"statements": [
														{
															"nativeSrc": "1822:26:12",
															"nodeType": "YulAssignment",
															"src": "1822:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1834:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1834:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1845:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1845:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1830:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1830:3:12"
																},
																"nativeSrc": "1830:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1830:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1822:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1822:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1864:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1864:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1879:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1895:3:12",
																								"nodeType": "YulLiteral",
																								"src": "1895:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1900:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1900:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1891:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1891:3:12"
																						},
																						"nativeSrc": "1891:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1891:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1904:1:12",
																						"nodeType": "YulLiteral",
																						"src": "1904:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1887:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1887:3:12"
																				},
																				"nativeSrc": "1887:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1887:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1875:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1875:3:12"
																		},
																		"nativeSrc": "1875:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1875:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1857:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1857:6:12"
																},
																"nativeSrc": "1857:51:12",
																"nodeType": "YulFunctionCall",
																"src": "1857:51:12"
															},
															"nativeSrc": "1857:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "1857:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1711:203:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1781:9:12",
														"nodeType": "YulTypedName",
														"src": "1781:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1792:6:12",
														"nodeType": "YulTypedName",
														"src": "1792:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1803:4:12",
														"nodeType": "YulTypedName",
														"src": "1803:4:12",
														"type": ""
													}
												],
												"src": "1711:203:12"
											},
											{
												"body": {
													"nativeSrc": "1968:239:12",
													"nodeType": "YulBlock",
													"src": "1968:239:12",
													"statements": [
														{
															"nativeSrc": "1978:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1978:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1998:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1998:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1992:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1992:5:12"
																},
																"nativeSrc": "1992:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1992:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1982:6:12",
																	"nodeType": "YulTypedName",
																	"src": "1982:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2020:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2020:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2025:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2025:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2013:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2013:6:12"
																},
																"nativeSrc": "2013:19:12",
																"nodeType": "YulFunctionCall",
																"src": "2013:19:12"
															},
															"nativeSrc": "2013:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "2013:19:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2051:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2051:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2056:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2056:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2047:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2047:3:12"
																		},
																		"nativeSrc": "2047:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2047:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2067:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2067:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2074:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2074:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2063:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2063:3:12"
																		},
																		"nativeSrc": "2063:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2063:16:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2081:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2081:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2041:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2041:5:12"
																},
																"nativeSrc": "2041:47:12",
																"nodeType": "YulFunctionCall",
																"src": "2041:47:12"
															},
															"nativeSrc": "2041:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "2041:47:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2112:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2112:3:12"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2117:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2117:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2108:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2108:3:12"
																				},
																				"nativeSrc": "2108:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2108:16:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2126:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2126:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2104:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2104:3:12"
																		},
																		"nativeSrc": "2104:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2104:27:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2133:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2133:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2097:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2097:6:12"
																},
																"nativeSrc": "2097:38:12",
																"nodeType": "YulFunctionCall",
																"src": "2097:38:12"
															},
															"nativeSrc": "2097:38:12",
															"nodeType": "YulExpressionStatement",
															"src": "2097:38:12"
														},
														{
															"nativeSrc": "2144:57:12",
															"nodeType": "YulAssignment",
															"src": "2144:57:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2159:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2159:3:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "2172:6:12",
																								"nodeType": "YulIdentifier",
																								"src": "2172:6:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2180:2:12",
																								"nodeType": "YulLiteral",
																								"src": "2180:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2168:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2168:3:12"
																						},
																						"nativeSrc": "2168:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2168:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2189:2:12",
																								"nodeType": "YulLiteral",
																								"src": "2189:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "2185:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2185:3:12"
																						},
																						"nativeSrc": "2185:7:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2185:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2164:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:12"
																				},
																				"nativeSrc": "2164:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2155:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2155:3:12"
																		},
																		"nativeSrc": "2155:39:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2155:39:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2196:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2196:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2151:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2151:3:12"
																},
																"nativeSrc": "2151:50:12",
																"nodeType": "YulFunctionCall",
																"src": "2151:50:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2144:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2144:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nativeSrc": "1919:288:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1945:5:12",
														"nodeType": "YulTypedName",
														"src": "1945:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1952:3:12",
														"nodeType": "YulTypedName",
														"src": "1952:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1960:3:12",
														"nodeType": "YulTypedName",
														"src": "1960:3:12",
														"type": ""
													}
												],
												"src": "1919:288:12"
											},
											{
												"body": {
													"nativeSrc": "2331:98:12",
													"nodeType": "YulBlock",
													"src": "2331:98:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2348:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2348:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2359:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2359:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2341:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2341:6:12"
																},
																"nativeSrc": "2341:21:12",
																"nodeType": "YulFunctionCall",
																"src": "2341:21:12"
															},
															"nativeSrc": "2341:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "2341:21:12"
														},
														{
															"nativeSrc": "2371:52:12",
															"nodeType": "YulAssignment",
															"src": "2371:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2396:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2396:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2408:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2408:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2419:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2419:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2404:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2404:3:12"
																		},
																		"nativeSrc": "2404:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2404:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nativeSrc": "2379:16:12",
																	"nodeType": "YulIdentifier",
																	"src": "2379:16:12"
																},
																"nativeSrc": "2379:44:12",
																"nodeType": "YulFunctionCall",
																"src": "2379:44:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2371:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2371:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "2212:217:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2300:9:12",
														"nodeType": "YulTypedName",
														"src": "2300:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2311:6:12",
														"nodeType": "YulTypedName",
														"src": "2311:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2322:4:12",
														"nodeType": "YulTypedName",
														"src": "2322:4:12",
														"type": ""
													}
												],
												"src": "2212:217:12"
											},
											{
												"body": {
													"nativeSrc": "2555:98:12",
													"nodeType": "YulBlock",
													"src": "2555:98:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2572:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2572:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2583:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2583:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2565:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2565:6:12"
																},
																"nativeSrc": "2565:21:12",
																"nodeType": "YulFunctionCall",
																"src": "2565:21:12"
															},
															"nativeSrc": "2565:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "2565:21:12"
														},
														{
															"nativeSrc": "2595:52:12",
															"nodeType": "YulAssignment",
															"src": "2595:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2620:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2620:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2632:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2632:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2643:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2643:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2628:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2628:3:12"
																		},
																		"nativeSrc": "2628:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2628:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nativeSrc": "2603:16:12",
																	"nodeType": "YulIdentifier",
																	"src": "2603:16:12"
																},
																"nativeSrc": "2603:44:12",
																"nodeType": "YulFunctionCall",
																"src": "2603:44:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2595:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2595:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:219:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:12",
														"nodeType": "YulTypedName",
														"src": "2524:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2535:6:12",
														"nodeType": "YulTypedName",
														"src": "2535:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2546:4:12",
														"nodeType": "YulTypedName",
														"src": "2546:4:12",
														"type": ""
													}
												],
												"src": "2434:219:12"
											},
											{
												"body": {
													"nativeSrc": "2728:116:12",
													"nodeType": "YulBlock",
													"src": "2728:116:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2774:16:12",
																"nodeType": "YulBlock",
																"src": "2774:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2783:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2783:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2786:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2786:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2776:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2776:6:12"
																			},
																			"nativeSrc": "2776:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2776:12:12"
																		},
																		"nativeSrc": "2776:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2776:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2749:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2749:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2758:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2758:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2745:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2745:3:12"
																		},
																		"nativeSrc": "2745:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2745:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2770:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2770:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2741:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2741:3:12"
																},
																"nativeSrc": "2741:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2741:32:12"
															},
															"nativeSrc": "2738:52:12",
															"nodeType": "YulIf",
															"src": "2738:52:12"
														},
														{
															"nativeSrc": "2799:39:12",
															"nodeType": "YulAssignment",
															"src": "2799:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2828:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2828:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2809:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2809:18:12"
																},
																"nativeSrc": "2809:29:12",
																"nodeType": "YulFunctionCall",
																"src": "2809:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2799:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2799:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2658:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2694:9:12",
														"nodeType": "YulTypedName",
														"src": "2694:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2705:7:12",
														"nodeType": "YulTypedName",
														"src": "2705:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2717:6:12",
														"nodeType": "YulTypedName",
														"src": "2717:6:12",
														"type": ""
													}
												],
												"src": "2658:186:12"
											},
											{
												"body": {
													"nativeSrc": "2919:110:12",
													"nodeType": "YulBlock",
													"src": "2919:110:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2965:16:12",
																"nodeType": "YulBlock",
																"src": "2965:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2974:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2974:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2977:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2977:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2967:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2967:6:12"
																			},
																			"nativeSrc": "2967:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2967:12:12"
																		},
																		"nativeSrc": "2967:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2967:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2940:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2940:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2949:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2949:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2936:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2936:3:12"
																		},
																		"nativeSrc": "2936:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2936:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2961:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2961:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2932:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2932:3:12"
																},
																"nativeSrc": "2932:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2932:32:12"
															},
															"nativeSrc": "2929:52:12",
															"nodeType": "YulIf",
															"src": "2929:52:12"
														},
														{
															"nativeSrc": "2990:33:12",
															"nodeType": "YulAssignment",
															"src": "2990:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3013:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3013:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3000:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3000:12:12"
																},
																"nativeSrc": "3000:23:12",
																"nodeType": "YulFunctionCall",
																"src": "3000:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2990:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2990:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2849:180:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2885:9:12",
														"nodeType": "YulTypedName",
														"src": "2885:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2896:7:12",
														"nodeType": "YulTypedName",
														"src": "2896:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2908:6:12",
														"nodeType": "YulTypedName",
														"src": "2908:6:12",
														"type": ""
													}
												],
												"src": "2849:180:12"
											},
											{
												"body": {
													"nativeSrc": "3141:87:12",
													"nodeType": "YulBlock",
													"src": "3141:87:12",
													"statements": [
														{
															"nativeSrc": "3151:26:12",
															"nodeType": "YulAssignment",
															"src": "3151:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3163:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3163:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3174:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3174:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3159:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3159:3:12"
																},
																"nativeSrc": "3159:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3159:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3151:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3151:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3193:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3193:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3208:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3208:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3216:4:12",
																				"nodeType": "YulLiteral",
																				"src": "3216:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3204:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3204:3:12"
																		},
																		"nativeSrc": "3204:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3204:17:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3186:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3186:6:12"
																},
																"nativeSrc": "3186:36:12",
																"nodeType": "YulFunctionCall",
																"src": "3186:36:12"
															},
															"nativeSrc": "3186:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "3186:36:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nativeSrc": "3034:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3110:9:12",
														"nodeType": "YulTypedName",
														"src": "3110:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3121:6:12",
														"nodeType": "YulTypedName",
														"src": "3121:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3132:4:12",
														"nodeType": "YulTypedName",
														"src": "3132:4:12",
														"type": ""
													}
												],
												"src": "3034:194:12"
											},
											{
												"body": {
													"nativeSrc": "3285:213:12",
													"nodeType": "YulBlock",
													"src": "3285:213:12",
													"statements": [
														{
															"nativeSrc": "3295:20:12",
															"nodeType": "YulAssignment",
															"src": "3295:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3310:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "3310:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3313:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "3313:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3306:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3306:3:12"
																},
																"nativeSrc": "3306:9:12",
																"nodeType": "YulFunctionCall",
																"src": "3306:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3295:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3295:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3381:111:12",
																"nodeType": "YulBlock",
																"src": "3381:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3402:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3402:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3409:3:12",
																							"nodeType": "YulLiteral",
																							"src": "3409:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3414:10:12",
																							"nodeType": "YulLiteral",
																							"src": "3414:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3405:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3405:3:12"
																					},
																					"nativeSrc": "3405:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3405:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3395:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3395:6:12"
																			},
																			"nativeSrc": "3395:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3395:31:12"
																		},
																		"nativeSrc": "3395:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3395:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3446:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3446:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3449:4:12",
																					"nodeType": "YulLiteral",
																					"src": "3449:4:12",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3439:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3439:6:12"
																			},
																			"nativeSrc": "3439:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3439:15:12"
																		},
																		"nativeSrc": "3439:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3439:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3474:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3474:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3477:4:12",
																					"nodeType": "YulLiteral",
																					"src": "3477:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3467:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3467:6:12"
																			},
																			"nativeSrc": "3467:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3467:15:12"
																		},
																		"nativeSrc": "3467:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3467:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3344:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "3344:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3337:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "3337:6:12"
																				},
																				"nativeSrc": "3337:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3337:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3351:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "3351:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3358:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "3358:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3367:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "3367:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3354:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "3354:3:12"
																						},
																						"nativeSrc": "3354:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "3354:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3348:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "3348:2:12"
																				},
																				"nativeSrc": "3348:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3348:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3334:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3334:2:12"
																		},
																		"nativeSrc": "3334:37:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3334:37:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3327:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:12"
																},
																"nativeSrc": "3327:45:12",
																"nodeType": "YulFunctionCall",
																"src": "3327:45:12"
															},
															"nativeSrc": "3324:168:12",
															"nodeType": "YulIf",
															"src": "3324:168:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3233:265:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3264:1:12",
														"nodeType": "YulTypedName",
														"src": "3264:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3267:1:12",
														"nodeType": "YulTypedName",
														"src": "3267:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3273:7:12",
														"nodeType": "YulTypedName",
														"src": "3273:7:12",
														"type": ""
													}
												],
												"src": "3233:265:12"
											},
											{
												"body": {
													"nativeSrc": "3611:101:12",
													"nodeType": "YulBlock",
													"src": "3611:101:12",
													"statements": [
														{
															"nativeSrc": "3621:26:12",
															"nodeType": "YulAssignment",
															"src": "3621:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3633:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3633:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3644:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3644:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3629:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3629:3:12"
																},
																"nativeSrc": "3629:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3629:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3621:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3621:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3663:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3663:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3678:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3678:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3686:18:12",
																				"nodeType": "YulLiteral",
																				"src": "3686:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3674:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3674:3:12"
																		},
																		"nativeSrc": "3674:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3674:31:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3656:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3656:6:12"
																},
																"nativeSrc": "3656:50:12",
																"nodeType": "YulFunctionCall",
																"src": "3656:50:12"
															},
															"nativeSrc": "3656:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "3656:50:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "3503:209:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3580:9:12",
														"nodeType": "YulTypedName",
														"src": "3580:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3591:6:12",
														"nodeType": "YulTypedName",
														"src": "3591:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3602:4:12",
														"nodeType": "YulTypedName",
														"src": "3602:4:12",
														"type": ""
													}
												],
												"src": "3503:209:12"
											},
											{
												"body": {
													"nativeSrc": "3798:103:12",
													"nodeType": "YulBlock",
													"src": "3798:103:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3844:16:12",
																"nodeType": "YulBlock",
																"src": "3844:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3853:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3853:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3856:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3856:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3846:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3846:6:12"
																			},
																			"nativeSrc": "3846:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3846:12:12"
																		},
																		"nativeSrc": "3846:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3846:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3819:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3819:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3828:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3828:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3815:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3815:3:12"
																		},
																		"nativeSrc": "3815:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3815:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3840:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3840:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3811:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3811:3:12"
																},
																"nativeSrc": "3811:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3811:32:12"
															},
															"nativeSrc": "3808:52:12",
															"nodeType": "YulIf",
															"src": "3808:52:12"
														},
														{
															"nativeSrc": "3869:26:12",
															"nodeType": "YulAssignment",
															"src": "3869:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3885:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3885:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3879:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3879:5:12"
																},
																"nativeSrc": "3879:16:12",
																"nodeType": "YulFunctionCall",
																"src": "3879:16:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3869:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3869:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "3717:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3764:9:12",
														"nodeType": "YulTypedName",
														"src": "3764:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3775:7:12",
														"nodeType": "YulTypedName",
														"src": "3775:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3787:6:12",
														"nodeType": "YulTypedName",
														"src": "3787:6:12",
														"type": ""
													}
												],
												"src": "3717:184:12"
											},
											{
												"body": {
													"nativeSrc": "4043:164:12",
													"nodeType": "YulBlock",
													"src": "4043:164:12",
													"statements": [
														{
															"nativeSrc": "4053:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4053:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4073:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4073:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4067:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4067:5:12"
																},
																"nativeSrc": "4067:13:12",
																"nodeType": "YulFunctionCall",
																"src": "4067:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4057:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4057:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4095:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4095:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4104:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4104:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4112:4:12",
																				"nodeType": "YulLiteral",
																				"src": "4112:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4100:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4100:3:12"
																		},
																		"nativeSrc": "4100:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4100:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4119:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4119:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "4089:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4089:5:12"
																},
																"nativeSrc": "4089:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4089:37:12"
															},
															"nativeSrc": "4089:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "4089:37:12"
														},
														{
															"nativeSrc": "4135:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4135:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4149:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4149:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4154:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4154:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4145:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4145:3:12"
																},
																"nativeSrc": "4145:16:12",
																"nodeType": "YulFunctionCall",
																"src": "4145:16:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4139:2:12",
																	"nodeType": "YulTypedName",
																	"src": "4139:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "4177:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4177:2:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4181:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4181:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4170:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4170:6:12"
																},
																"nativeSrc": "4170:13:12",
																"nodeType": "YulFunctionCall",
																"src": "4170:13:12"
															},
															"nativeSrc": "4170:13:12",
															"nodeType": "YulExpressionStatement",
															"src": "4170:13:12"
														},
														{
															"nativeSrc": "4192:9:12",
															"nodeType": "YulAssignment",
															"src": "4192:9:12",
															"value": {
																"name": "_1",
																"nativeSrc": "4199:2:12",
																"nodeType": "YulIdentifier",
																"src": "4199:2:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4192:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4192:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "3906:301:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4019:3:12",
														"nodeType": "YulTypedName",
														"src": "4019:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4024:6:12",
														"nodeType": "YulTypedName",
														"src": "4024:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4035:3:12",
														"nodeType": "YulTypedName",
														"src": "4035:3:12",
														"type": ""
													}
												],
												"src": "3906:301:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x))))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"482": [
									{
										"length": 32,
										"start": 969
									},
									{
										"length": 32,
										"start": 1010
									},
									{
										"length": 32,
										"start": 1334
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061008f575f3560e01c8063a4ef7d3011610057578063a4ef7d301461013d578063ad3cb1cc14610197578063b7c738f4146101c7578063f2fde38b146101db578063fe4b84df146101fa575f80fd5b80630c55699c146100935780634f1ef286146100ba57806352d1902d146100cf578063715018a6146100e35780638da5cb5b146100f7575b5f80fd5b34801561009e575f80fd5b506100a75f5481565b6040519081526020015b60405180910390f35b6100cd6100c83660046108c8565b610219565b005b3480156100da575f80fd5b506100a7610238565b3480156100ee575f80fd5b506100cd610253565b348015610102575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b0390911681526020016100b1565b348015610148575f80fd5b5061018a6040805160016024808301919091528251808303909101815260449091019091526020810180516001600160e01b031663fe4b84df60e01b17905290565b6040516100b191906109ba565b3480156101a2575f80fd5b5061018a604051806040016040528060058152602001640352e302e360dc1b81525081565b3480156101d2575f80fd5b506100cd610266565b3480156101e6575f80fd5b506100cd6101f53660046109cc565b610277565b348015610205575f80fd5b506100cd6102143660046109e5565b6102b9565b6102216103be565b61022a82610462565b610234828261046a565b5050565b5f61024161052b565b505f80516020610a4d83398151915290565b61025b610574565b6102645f6105cf565b565b5f546102739060026109fc565b5f55565b61027f610574565b6001600160a01b0381166102ad57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6102b6816105cf565b50565b5f6102c261063f565b805490915060ff600160401b820416159067ffffffffffffffff165f811580156102e95750825b90505f8267ffffffffffffffff1660011480156103055750303b155b905081158015610313575080155b156103315760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561035b57845460ff60401b1916600160401b1785555b5f86905561036833610669565b61037061067a565b83156103b657845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061044457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104385f80516020610a4d833981519152546001600160a01b031690565b6001600160a01b031614155b156102645760405163703e46dd60e11b815260040160405180910390fd5b6102b6610574565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156104c4575060408051601f3d908101601f191682019092526104c191810190610a1f565b60015b6104ec57604051634c9c8ce360e01b81526001600160a01b03831660048201526024016102a4565b5f80516020610a4d833981519152811461051c57604051632a87526960e21b8152600481018290526024016102a4565b6105268383610682565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102645760405163703e46dd60e11b815260040160405180910390fd5b336105a67f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146102645760405163118cdaa760e01b81523360048201526024016102a4565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005b92915050565b6106716106d7565b6102b6816106fc565b6102646106d7565b61068b82610704565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156106cf576105268282610767565b6102346107d9565b6106df6107f8565b61026457604051631afcd79f60e31b815260040160405180910390fd5b61027f6106d7565b806001600160a01b03163b5f0361073957604051634c9c8ce360e01b81526001600160a01b03821660048201526024016102a4565b5f80516020610a4d83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516107839190610a36565b5f60405180830381855af49150503d805f81146107bb576040519150601f19603f3d011682016040523d82523d5f602084013e6107c0565b606091505b50915091506107d0858383610811565b95945050505050565b34156102645760405163b398979f60e01b815260040160405180910390fd5b5f61080161063f565b54600160401b900460ff16919050565b6060826108265761082182610870565b610869565b815115801561083d57506001600160a01b0384163b155b1561086657604051639996b31560e01b81526001600160a01b03851660048201526024016102a4565b50805b9392505050565b8051156108805780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b80356001600160a01b03811681146108af575f80fd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f80604083850312156108d9575f80fd5b6108e283610899565b9150602083013567ffffffffffffffff8111156108fd575f80fd5b8301601f8101851361090d575f80fd5b803567ffffffffffffffff811115610927576109276108b4565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610956576109566108b4565b60405281815282820160200187101561096d575f80fd5b816020840160208301375f602083830101528093505050509250929050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610869602083018461098c565b5f602082840312156109dc575f80fd5b61086982610899565b5f602082840312156109f5575f80fd5b5035919050565b808202811582820484141761066357634e487b7160e01b5f52601160045260245ffd5b5f60208284031215610a2f575f80fd5b5051919050565b5f82518060208501845e5f92019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212201780e18680499af1328ad8c0dfacb250c67fb31458ca691e4c821cf7cc0147b964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA4EF7D30 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xA4EF7D30 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xB7C738F4 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x1FA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC55699C EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C8 JUMP JUMPDEST PUSH2 0x219 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH2 0x238 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0x253 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x102 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x148 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xFE4B84DF PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x9BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0x266 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E5 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH2 0x221 PUSH2 0x3BE JUMP JUMPDEST PUSH2 0x22A DUP3 PUSH2 0x462 JUMP JUMPDEST PUSH2 0x234 DUP3 DUP3 PUSH2 0x46A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x241 PUSH2 0x52B JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x574 JUMP JUMPDEST PUSH2 0x264 PUSH0 PUSH2 0x5CF JUMP JUMPDEST JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x273 SWAP1 PUSH1 0x2 PUSH2 0x9FC JUMP JUMPDEST PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x27F PUSH2 0x574 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B6 DUP2 PUSH2 0x5CF JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x2C2 PUSH2 0x63F JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x2E9 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x305 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x313 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x35B JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH0 DUP7 SWAP1 SSTORE PUSH2 0x368 CALLER PUSH2 0x669 JUMP JUMPDEST PUSH2 0x370 PUSH2 0x67A JUMP JUMPDEST DUP4 ISZERO PUSH2 0x3B6 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x444 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x438 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x264 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B6 PUSH2 0x574 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x4C4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x4C1 SWAP2 DUP2 ADD SWAP1 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x4EC JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2A4 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x51C JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x2A4 JUMP JUMPDEST PUSH2 0x526 DUP4 DUP4 PUSH2 0x682 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x264 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x5A6 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x264 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2A4 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x671 PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x2B6 DUP2 PUSH2 0x6FC JUMP JUMPDEST PUSH2 0x264 PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x68B DUP3 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x6CF JUMPI PUSH2 0x526 DUP3 DUP3 PUSH2 0x767 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x6DF PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x264 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27F PUSH2 0x6D7 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x739 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2A4 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x783 SWAP2 SWAP1 PUSH2 0xA36 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7BB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x7D0 DUP6 DUP4 DUP4 PUSH2 0x811 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x264 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x801 PUSH2 0x63F JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x826 JUMPI PUSH2 0x821 DUP3 PUSH2 0x870 JUMP JUMPDEST PUSH2 0x869 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x83D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2A4 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x880 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8AF JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8E2 DUP4 PUSH2 0x899 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8FD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x90D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x927 JUMPI PUSH2 0x927 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x956 JUMPI PUSH2 0x956 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x96D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x869 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x98C JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x869 DUP3 PUSH2 0x899 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x663 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA2F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA264697066735822122017 DUP1 0xE1 DUP7 DUP1 BLOBHASH SWAP11 CALL ORIGIN DUP11 0xD8 0xC0 0xDF 0xAC 0xB2 POP 0xC6 PUSH32 0xB31458CA691E4C821CF7CC0147B964736F6C634300081A003300000000000000 ",
							"sourceMap": "330:1147:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;522:13;;;;;;;;;;;;;;;;;;;160:25:12;;;148:2;133:18;522:13:11;;;;;;;;4161:214:2;;;;;;:::i;:::-;;:::i;:::-;;3708:134;;;;;;;;;;;;;:::i;3155:101:0:-;;;;;;;;;;;;;:::i;2441:144::-;;;;;;;;;;-1:-1:-1;1313:22:0;2570:8;2441:144;;-1:-1:-1;;;;;2570:8:0;;;1857:51:12;;1845:2;1830:18;2441:144:0;1711:203:12;1337:137:11;;;;;;;;;;;;1415:51;;;1464:1;1415:51;;;;3186:36:12;;;;1415:51:11;;;;;;;;;;3159:18:12;;;;1415:51:11;;;;;;;;-1:-1:-1;;;;;1415:51:11;-1:-1:-1;;;1415:51:11;;;;1337:137;;;;;;;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;1247:52:11;;;;;;;;;;;;;:::i;3405:215:0:-;;;;;;;;;;-1:-1:-1;3405:215:0;;;;;:::i;:::-;;:::i;861:214:11:-;;;;;;;;;;-1:-1:-1;861:214:11;;;;;:::i;:::-;;:::i;4161::2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:2;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;1247:52:11:-;1286:1;;:5;;1290:1;1286:5;:::i;:::-;1282:1;:9;1247:52::o;3405:215:0:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:0;;3562:1:::1;3534:31;::::0;::::1;1857:51:12::0;1830:18;;3534:31:0::1;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;861:214:11:-;4158:30:1;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:1;-1:-1:-1;;;4302:15:1;;;4301:16;;4348:14;;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;:16;;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:1;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:1;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:1;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:1;-1:-1:-1;;;5011:22:1;;;4977:67;924:1:11::1;:8:::0;;;943:26:::1;958:10;943:14;:26::i;:::-;1012:24;:22;:24::i;:::-;5068:14:1::0;5064:101;;;5098:23;;-1:-1:-1;;;;5098:23:1;;;5140:14;;-1:-1:-1;3656:50:12;;5140:14:1;;3644:2:12;3629:18;5140:14:1;;;;;;;5064:101;4092:1079;;;;;861:214:11;:::o;4578:312:2:-;4658:4;-1:-1:-1;;;;;4667:6:2;4650:23;;;:120;;;4764:6;-1:-1:-1;;;;;4728:42:2;:32;-1:-1:-1;;;;;;;;;;;1519:53:6;-1:-1:-1;;;;;1519:53:6;;1441:138;4728:32:2;-1:-1:-1;;;;;4728:42:2;;;4650:120;4633:251;;;4844:29;;-1:-1:-1;;;4844:29:2;;;;;;;;;;;1140:66:11;2334:13:0;:11;:13::i;6032:538:2:-;6149:17;-1:-1:-1;;;;;6131:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6131:52:2;;;;;;;;-1:-1:-1;;6131:52:2;;;;;;;;;;;;:::i;:::-;;;6127:437;;6493:60;;-1:-1:-1;;;6493:60:2;;-1:-1:-1;;;;;1875:32:12;;6493:60:2;;;1857:51:12;1830:18;;6493:60:2;1711:203:12;6127:437:2;-1:-1:-1;;;;;;;;;;;6225:40:2;;6221:120;;6292:34;;-1:-1:-1;;;6292:34:2;;;;;160:25:12;;;133:18;;6292:34:2;14:177:12;6221:120:2;6354:54;6384:17;6403:4;6354:29;:54::i;:::-;6184:235;6032:538;;:::o;5007:213::-;5081:4;-1:-1:-1;;;;;5090:6:2;5073:23;;5069:145;;5174:29;;-1:-1:-1;;;5174:29:2;;;;;;;;;;;2658:162:0;966:10:3;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:0;;966:10:3;2763:40:0;;;1857:51:12;1830:18;;2763:40:0;1711:203:12;3774:248:0;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;9071:205:1:-;9129:30;;3147:66;9186:27;9171:42;9071:205;-1:-1:-1;;9071:205:1:o;1847:127:0:-;6929:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;2970:67:2:-:0;6929:20:1;:18;:20::i;2264:344:6:-;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:6;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;2454:148::-;2573:18;:16;:18::i;7082:141:1:-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;-1:-1:-1;;;7189:17:1;;;;;;;;;;;1980:235:0;6929:20:1;:18;:20::i;1671:281:6:-;1748:17;-1:-1:-1;;;;;1748:29:6;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:6;;-1:-1:-1;;;;;1875:32:12;;1805:47:6;;;1857:51:12;1830:18;;1805:47:6;1711:203:12;1744:119:6;-1:-1:-1;;;;;;;;;;;1872:73:6;;-1:-1:-1;;;;;;1872:73:6;-1:-1:-1;;;;;1872:73:6;;;;;;;;;;1671:281::o;3916:253:8:-;3999:12;4024;4038:23;4065:6;-1:-1:-1;;;;;4065:19:8;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;3916:253;-1:-1:-1;;;;;3916:253:8:o;6113:122:6:-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:6;;;;;;;;;;;8485:120:1;8535:4;8558:26;:24;:26::i;:::-;:40;-1:-1:-1;;;8558:40:1;;;;;;-1:-1:-1;8485:120:1:o;4437:582:8:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4857:17;;:22;:49;;;;-1:-1:-1;;;;;;4883:18:8;;;:23;4857:49;4853:119;;;4933:24;;-1:-1:-1;;;4933:24:8;;-1:-1:-1;;;;;1875:32:12;;4933:24:8;;;1857:51:12;1830:18;;4933:24:8;1711:203:12;4853:119:8;-1:-1:-1;4992:10:8;4605:408;4437:582;;;;;:::o;5559:487::-;5690:17;;:21;5686:354;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;-1:-1:-1;;;6010:19:8;;;;;;;;;;;196:173:12;264:20;;-1:-1:-1;;;;;313:31:12;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:127::-;435:10;430:3;426:20;423:1;416:31;466:4;463:1;456:15;490:4;487:1;480:15;506:1018;583:6;591;644:2;632:9;623:7;619:23;615:32;612:52;;;660:1;657;650:12;612:52;683:29;702:9;683:29;:::i;:::-;673:39;;763:2;752:9;748:18;735:32;790:18;782:6;779:30;776:50;;;822:1;819;812:12;776:50;845:22;;898:4;890:13;;886:27;-1:-1:-1;876:55:12;;927:1;924;917:12;876:55;967:2;954:16;993:18;985:6;982:30;979:56;;;1015:18;;:::i;:::-;1064:2;1058:9;1156:2;1118:17;;-1:-1:-1;;1114:31:12;;;1147:2;1110:40;1106:54;1094:67;;1191:18;1176:34;;1212:22;;;1173:62;1170:88;;;1238:18;;:::i;:::-;1274:2;1267:22;1298;;;1339:15;;;1356:2;1335:24;1332:37;-1:-1:-1;1329:57:12;;;1382:1;1379;1372:12;1329:57;1438:6;1433:2;1429;1425:11;1420:2;1412:6;1408:15;1395:50;1491:1;1486:2;1477:6;1469;1465:19;1461:28;1454:39;1512:6;1502:16;;;;;506:1018;;;;;:::o;1919:288::-;1960:3;1998:5;1992:12;2025:6;2020:3;2013:19;2081:6;2074:4;2067:5;2063:16;2056:4;2051:3;2047:14;2041:47;2133:1;2126:4;2117:6;2112:3;2108:16;2104:27;2097:38;2196:4;2189:2;2185:7;2180:2;2172:6;2168:15;2164:29;2159:3;2155:39;2151:50;2144:57;;;1919:288;;;;:::o;2212:217::-;2359:2;2348:9;2341:21;2322:4;2379:44;2419:2;2408:9;2404:18;2396:6;2379:44;:::i;2658:186::-;2717:6;2770:2;2758:9;2749:7;2745:23;2741:32;2738:52;;;2786:1;2783;2776:12;2738:52;2809:29;2828:9;2809:29;:::i;2849:180::-;2908:6;2961:2;2949:9;2940:7;2936:23;2932:32;2929:52;;;2977:1;2974;2967:12;2929:52;-1:-1:-1;3000:23:12;;2849:180;-1:-1:-1;2849:180:12:o;3233:265::-;3306:9;;;3337;;3354:15;;;3348:22;;3334:37;3324:168;;3414:10;3409:3;3405:20;3402:1;3395:31;3449:4;3446:1;3439:15;3477:4;3474:1;3467:15;3717:184;3787:6;3840:2;3828:9;3819:7;3815:23;3811:32;3808:52;;;3856:1;3853;3846:12;3808:52;-1:-1:-1;3879:16:12;;3717:184;-1:-1:-1;3717:184:12:o;3906:301::-;4035:3;4073:6;4067:13;4119:6;4112:4;4104:6;4100:17;4095:3;4089:37;4181:1;4145:16;;4170:13;;;-1:-1:-1;4145:16:12;3906:301;-1:-1:-1;3906:301:12:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "544400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"cal()": "24482",
								"initialize(uint256)": "infinite",
								"owner()": "2389",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"showInitCode()": "infinite",
								"transferOwnership(address)": "28431",
								"upgradeToAndCall(address,bytes)": "infinite",
								"x()": "2283"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 330,
									"end": 1477,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 330,
									"end": 1477,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 330,
									"end": 1477,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 716,
									"end": 811,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 716,
									"end": 811,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 716,
									"end": 811,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 716,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 716,
									"end": 811,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 716,
									"end": 811,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 716,
									"end": 811,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 716,
									"end": 811,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 716,
									"end": 811,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 716,
									"end": 811,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 741,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 741,
									"end": 761,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 741,
									"end": 763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 741,
									"end": 763,
									"name": "tag",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 741,
									"end": 763,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 330,
									"end": 1477,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 330,
									"end": 1477,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7709,
									"end": 8131,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 7709,
									"end": 8131,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3147,
									"end": 3213,
									"name": "PUSH",
									"source": 1,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "PUSH",
									"source": 1,
									"value": "10000000000000000"
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7894,
									"end": 7970,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7894,
									"end": 7970,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7894,
									"end": 7970,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F92EE8A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7894,
									"end": 7970,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7894,
									"end": 7970,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 8017,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7979,
									"end": 8125,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7979,
									"end": 8125,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 158,
									"end": 208,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 158,
									"end": 208,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 158,
									"end": 208,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "PUSH",
									"source": 1,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 148,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 131,
									"end": 149,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "LOG1",
									"source": 1
								},
								{
									"begin": 7979,
									"end": 8125,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7979,
									"end": 8125,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7758,
									"end": 8131,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7709,
									"end": 8131,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 214,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 14,
									"end": 214,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 330,
									"end": 1477,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 330,
									"end": 1477,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 330,
									"end": 1477,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 330,
									"end": 1477,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 330,
									"end": 1477,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 330,
									"end": 1477,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 330,
									"end": 1477,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 330,
									"end": 1477,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "482"
								},
								{
									"begin": 330,
									"end": 1477,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 330,
									"end": 1477,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 330,
									"end": 1477,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201780e18680499af1328ad8c0dfacb250c67fb31458ca691e4c821cf7cc0147b964736f6c634300081a0033",
									".code": [
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "A4EF7D30"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "A4EF7D30"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "AD3CB1CC"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "B7C738F4"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "FE4B84DF"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "C55699C"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "4F1EF286"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "52D1902D"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 330,
											"end": 1477,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 522,
											"end": 535,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 522,
											"end": 535,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 522,
											"end": 535,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 522,
											"end": 535,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 522,
											"end": 535,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 522,
											"end": 535,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 522,
											"end": 535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 522,
											"end": 535,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 522,
											"end": 535,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 522,
											"end": 535,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 522,
											"end": 535,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 522,
											"end": 535,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 522,
											"end": 535,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 522,
											"end": 535,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 522,
											"end": 535,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 522,
											"end": 535,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 522,
											"end": 535,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1908,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 1908,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1845,
											"end": 1847,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1848,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1711,
											"end": 1914,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3186,
											"end": 3222,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3186,
											"end": 3222,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3186,
											"end": 3222,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3186,
											"end": 3222,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3159,
											"end": 3177,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3159,
											"end": 3177,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3159,
											"end": 3177,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3159,
											"end": 3177,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FE4B84DF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1337,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1299,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1247,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1299,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1299,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 1247,
											"end": 1299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1299,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1299,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1299,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 1247,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1299,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1247,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1247,
											"end": 1299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 861,
											"end": 1075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 861,
											"end": 1075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4294,
											"end": 4311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4276,
											"end": 4312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4344,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4322,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2926,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1299,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1247,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1286,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 1286,
											"end": 1291,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1290,
											"end": 1291,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1286,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 1286,
											"end": 1291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1286,
											"end": 1291,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 1286,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1291,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1908,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1830,
											"end": 1848,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1830,
											"end": 1848,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 924,
											"end": 932,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 924,
											"end": 932,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 924,
											"end": 932,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 943,
											"end": 969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 958,
											"end": 968,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 943,
											"end": 957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 943,
											"end": 969,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 943,
											"end": 969,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 943,
											"end": 969,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1012,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1012,
											"end": 1036,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1012,
											"end": 1036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 3656,
											"end": 3706,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3656,
											"end": 3706,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3644,
											"end": 3646,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3647,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 861,
											"end": 1075,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 861,
											"end": 1075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4578,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4578,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4662,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4667,
											"end": 4673,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "482"
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4764,
											"end": 4770,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "482"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1206,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 1140,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6166,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6131,
											"end": 6183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1875,
											"end": 1907,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 1907,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1857,
											"end": 1908,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1830,
											"end": 1848,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1830,
											"end": 1848,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1711,
											"end": 1914,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6225,
											"end": 6265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6384,
											"end": 6401,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6403,
											"end": 6407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6354,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6184,
											"end": 6419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6032,
											"end": 6570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5220,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5007,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 5085,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5090,
											"end": 5096,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "482"
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1908,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1830,
											"end": 1848,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1830,
											"end": 1848,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1711,
											"end": 1914,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9071,
											"end": 9276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2355,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 6,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2573,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7149,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 7149,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1782,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1875,
											"end": 1907,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 1907,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1908,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1830,
											"end": 1848,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1830,
											"end": 1848,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1711,
											"end": 1914,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4011,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4065,
											"end": 4084,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4089,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 4065,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DELEGATECALL",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 4134,
											"end": 4140,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4142,
											"end": 4149,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4161,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 4107,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3916,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6163,
											"end": 6176,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 8558,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 8558,
											"end": 8584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8485,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4593,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4610,
											"end": 4617,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 4641,
											"end": 4651,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 4633,
											"end": 4652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4874,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4879,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 4883,
											"end": 4906,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1875,
											"end": 1907,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 1907,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1908,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1830,
											"end": 1848,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1830,
											"end": 1848,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1711,
											"end": 1914,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4992,
											"end": 5002,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 5019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5690,
											"end": 5711,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5887,
											"end": 5897,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 5958,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5930,
											"end": 5940,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5926,
											"end": 5928,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5915,
											"end": 5959,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D6BDA275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 196,
											"end": 369,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 196,
											"end": 369,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 264,
											"end": 284,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 264,
											"end": 284,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 313,
											"end": 344,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 313,
											"end": 344,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 303,
											"end": 345,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 303,
											"end": 345,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 293,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 293,
											"end": 363,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 359,
											"end": 360,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 357,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 349,
											"end": 361,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 293,
											"end": 363,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 293,
											"end": 363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 196,
											"end": 369,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 196,
											"end": 369,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 196,
											"end": 369,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 196,
											"end": 369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 374,
											"end": 501,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 374,
											"end": 501,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 435,
											"end": 445,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 430,
											"end": 433,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 426,
											"end": 446,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 423,
											"end": 424,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 447,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 466,
											"end": 470,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 463,
											"end": 464,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 456,
											"end": 471,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 490,
											"end": 494,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 495,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 506,
											"end": 1524,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 506,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 583,
											"end": 589,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 644,
											"end": 646,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 641,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 623,
											"end": 630,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 619,
											"end": 642,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 615,
											"end": 647,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 612,
											"end": 664,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 612,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 612,
											"end": 664,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 660,
											"end": 661,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 658,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 650,
											"end": 662,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 612,
											"end": 664,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 612,
											"end": 664,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 683,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 702,
											"end": 711,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 683,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 683,
											"end": 712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 683,
											"end": 712,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 683,
											"end": 712,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 673,
											"end": 712,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 673,
											"end": 712,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 763,
											"end": 765,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 761,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 748,
											"end": 766,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 735,
											"end": 767,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 790,
											"end": 808,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 782,
											"end": 788,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 779,
											"end": 809,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 776,
											"end": 826,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 776,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 776,
											"end": 826,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 822,
											"end": 823,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 819,
											"end": 820,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 812,
											"end": 824,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 776,
											"end": 826,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 776,
											"end": 826,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 845,
											"end": 867,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 845,
											"end": 867,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 898,
											"end": 902,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 890,
											"end": 903,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 890,
											"end": 903,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 886,
											"end": 913,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 876,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 876,
											"end": 931,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 927,
											"end": 928,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 924,
											"end": 925,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 917,
											"end": 929,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 876,
											"end": 931,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 876,
											"end": 931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 967,
											"end": 969,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 954,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 982,
											"end": 1012,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 979,
											"end": 1035,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 979,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 979,
											"end": 1035,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1015,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 1015,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 1015,
											"end": 1033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1015,
											"end": 1033,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 1015,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1064,
											"end": 1066,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1067,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1156,
											"end": 1158,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1118,
											"end": 1135,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1118,
											"end": 1135,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1114,
											"end": 1145,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1145,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1145,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 1110,
											"end": 1150,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1106,
											"end": 1160,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1094,
											"end": 1161,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1094,
											"end": 1161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1209,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1176,
											"end": 1210,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1212,
											"end": 1234,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1212,
											"end": 1234,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1212,
											"end": 1234,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1173,
											"end": 1235,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1170,
											"end": 1258,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1170,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 1170,
											"end": 1258,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 1238,
											"end": 1256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1274,
											"end": 1276,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1267,
											"end": 1289,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1339,
											"end": 1354,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1339,
											"end": 1354,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1339,
											"end": 1354,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1356,
											"end": 1358,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1332,
											"end": 1369,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1329,
											"end": 1386,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 1329,
											"end": 1386,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1382,
											"end": 1383,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1380,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1372,
											"end": 1384,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1329,
											"end": 1386,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 1329,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1438,
											"end": 1444,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1429,
											"end": 1431,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1425,
											"end": 1436,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1420,
											"end": 1422,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1418,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1408,
											"end": 1423,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1395,
											"end": 1445,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 1491,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1486,
											"end": 1488,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1483,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1461,
											"end": 1489,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1493,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1502,
											"end": 1518,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1502,
											"end": 1518,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1502,
											"end": 1518,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1502,
											"end": 1518,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1502,
											"end": 1518,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 506,
											"end": 1524,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 506,
											"end": 1524,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 506,
											"end": 1524,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 506,
											"end": 1524,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 506,
											"end": 1524,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 506,
											"end": 1524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 2207,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 1919,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1960,
											"end": 1963,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2003,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2025,
											"end": 2031,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2020,
											"end": 2023,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2087,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2074,
											"end": 2078,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2067,
											"end": 2072,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2063,
											"end": 2079,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2056,
											"end": 2060,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2051,
											"end": 2054,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2047,
											"end": 2061,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2041,
											"end": 2088,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 2133,
											"end": 2134,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2130,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2117,
											"end": 2123,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2115,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2124,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2104,
											"end": 2131,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2097,
											"end": 2135,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2196,
											"end": 2200,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2191,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2185,
											"end": 2192,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2180,
											"end": 2182,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2172,
											"end": 2178,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2164,
											"end": 2193,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2162,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2155,
											"end": 2194,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2151,
											"end": 2201,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2201,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 2207,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 2207,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 2207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 2207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 2207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2429,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 2212,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2359,
											"end": 2361,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2357,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2341,
											"end": 2362,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2326,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 2419,
											"end": 2421,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2417,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2404,
											"end": 2422,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2396,
											"end": 2402,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2379,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 2379,
											"end": 2423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2658,
											"end": 2844,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 2658,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2717,
											"end": 2723,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 2772,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2758,
											"end": 2767,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2749,
											"end": 2756,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2745,
											"end": 2768,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2741,
											"end": 2773,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2738,
											"end": 2790,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2738,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 2738,
											"end": 2790,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2787,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2776,
											"end": 2788,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2738,
											"end": 2790,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 2738,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2809,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 2828,
											"end": 2837,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2809,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 2809,
											"end": 2838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 3029,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 2849,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2908,
											"end": 2914,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2963,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2949,
											"end": 2958,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 2947,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 2959,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2932,
											"end": 2964,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2929,
											"end": 2981,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2929,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 2929,
											"end": 2981,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 2978,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2975,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2967,
											"end": 2979,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2929,
											"end": 2981,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 2929,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3023,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3023,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 3029,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2849,
											"end": 3029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3233,
											"end": 3498,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 3233,
											"end": 3498,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3306,
											"end": 3315,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3306,
											"end": 3315,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3306,
											"end": 3315,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3337,
											"end": 3346,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3337,
											"end": 3346,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3354,
											"end": 3369,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3354,
											"end": 3369,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3354,
											"end": 3369,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3348,
											"end": 3370,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3348,
											"end": 3370,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3334,
											"end": 3371,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 3324,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 3324,
											"end": 3492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3414,
											"end": 3424,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 3409,
											"end": 3412,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 3405,
											"end": 3425,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3403,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3426,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3449,
											"end": 3453,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 3446,
											"end": 3447,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3439,
											"end": 3454,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3477,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3474,
											"end": 3475,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3482,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3717,
											"end": 3901,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 3717,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3787,
											"end": 3793,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3842,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3837,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3819,
											"end": 3826,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3815,
											"end": 3838,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3811,
											"end": 3843,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3808,
											"end": 3860,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3808,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 3808,
											"end": 3860,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3856,
											"end": 3857,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 3854,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3846,
											"end": 3858,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3808,
											"end": 3860,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 3808,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3879,
											"end": 3895,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3879,
											"end": 3895,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3717,
											"end": 3901,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3717,
											"end": 3901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4207,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 3906,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4035,
											"end": 4038,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4080,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4116,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4104,
											"end": 4110,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4100,
											"end": 4117,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4095,
											"end": 4098,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4126,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 4181,
											"end": 4182,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4145,
											"end": 4161,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4170,
											"end": 4183,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4170,
											"end": 4183,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4170,
											"end": 4183,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4145,
											"end": 4161,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4207,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3906,
											"end": 4207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"UUPS/UUPSV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"cal()": "b7c738f4",
							"initialize(uint256)": "fe4b84df",
							"owner()": "8da5cb5b",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"showInitCode()": "a4ef7d30",
							"transferOwnership(address)": "f2fde38b",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"x()": "0c55699c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_var\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showInitCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"x\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"UUPS/UUPSV2.sol\":\"UUPSV2\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"UUPS/UUPSV2.sol\":{\"keccak256\":\"0x00b8bc8c483ff1ab47dc4e9f778773832dbe0f5a78db4a8207c54fddc33f06cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8efe8082676c8e2ef0b84cd841fe0d5565baa824c470726b4219de27ba546f0a\",\"dweb:/ipfs/QmXD2f1pkSWkUgAgQbXoDJiBGC4vMKC6CrdgtSxukma5au\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1444,
								"contract": "UUPS/UUPSV2.sol:UUPSV2",
								"label": "x",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							690
						],
						"Initializable": [
							462
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 691,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 690,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 463,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 690,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								690,
								462
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							462
						]
					},
					"id": 463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 462,
							"linearizedBaseContracts": [
								462
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 462,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 462,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1079:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4704:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4724:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4744:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4768:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4788:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$462",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$462",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4854:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4871:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4849:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4885:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4906:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4899:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4949:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4949:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4981:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4977:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4997:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5011:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5011:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5068:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5064:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5084:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5098:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5098:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5140:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5135:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1102:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6289:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6355:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6355:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6355:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "6388:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6429:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6429:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6448:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6448:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6466:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6425:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6475:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6496:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6489:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6539:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6539:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6556:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6573:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6573:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6616:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6616:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6666:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6654:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6649:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6259:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6273:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:1"
									},
									"src": "6250:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6919:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6929:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:1"
									},
									"src": "6891:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7134:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7149:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7144:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7168:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7189:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7182:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:1"
									},
									"scope": 462,
									"src": "7082:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7758:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7824:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7824:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7824:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7857:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7898:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7898:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7894:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7915:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7936:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7929:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7983:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7983:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7979:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8019:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8033:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8033:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8085:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8080:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:1"
									},
									"scope": 462,
									"src": "7709:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8306:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8323:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8323:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8316:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8298:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:1"
									},
									"scope": 462,
									"src": "8241:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8541:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8558:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8558:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8551:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8535:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:1"
									},
									"scope": 462,
									"src": "8485:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8896:45:1",
										"statements": [
											{
												"expression": {
													"id": 444,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 208,
													"src": "8913:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 443,
												"id": 445,
												"nodeType": "Return",
												"src": "8906:28:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:1",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:1"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8887:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 441,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:1"
									},
									"scope": 462,
									"src": "8819:122:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "9161:115:1",
										"statements": [
											{
												"assignments": [
													455
												],
												"declarations": [
													{
														"constant": false,
														"id": 455,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 460,
														"src": "9171:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 454,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 458,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 456,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "9186:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:1"
											},
											{
												"AST": {
													"nativeSrc": "9232:38:1",
													"nodeType": "YulBlock",
													"src": "9232:38:1",
													"statements": [
														{
															"nativeSrc": "9246:14:1",
															"nodeType": "YulAssignment",
															"src": "9246:14:1",
															"value": {
																"name": "slot",
																"nativeSrc": "9256:4:1",
																"nodeType": "YulIdentifier",
																"src": "9256:4:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "9246:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 452,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 455,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:1",
														"valueSize": 1
													}
												],
												"id": 459,
												"nodeType": "InlineAssembly",
												"src": "9223:47:1"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:1"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "9129:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 451,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 450,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "9129:20:1"
													},
													"referencedDeclaration": 205,
													"src": "9129:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:1"
									},
									"scope": 462,
									"src": "9071:205:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 463,
							"src": "2349:6929:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:9166:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1015
						],
						"IERC1822Proxiable": [
							721
						],
						"Initializable": [
							462
						],
						"UUPSUpgradeable": [
							644
						]
					},
					"id": 645,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 722,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 465,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 721,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 1016,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 467,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1015,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 463,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 469,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 472,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "1023:13:2"
									},
									"id": 473,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 474,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 721,
										"src": "1038:17:2"
									},
									"id": 475,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 644,
							"linearizedBaseContracts": [
								644,
								721,
								462
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 482,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 477,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 480,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 479,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 478,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 481,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 486,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 484,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 485,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 489,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 494,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 491,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "2645:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 497,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "2655:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:2"
											},
											{
												"id": 500,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:2"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 502,
									"name": "onlyProxy",
									"nameLocation": "2633:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:2"
									},
									"src": "2624:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "2916:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 505,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "2926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:2"
											},
											{
												"id": 508,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:2"
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 510,
									"name": "notDelegated",
									"nameLocation": "2901:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:2"
									},
									"src": "2892:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "3030:7:2",
										"statements": []
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 513,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 512,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3013:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:2"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:2"
									},
									"scope": 644,
									"src": "2970:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "3113:7:2",
										"statements": []
									},
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 519,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 518,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3096:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:2"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:2"
									},
									"scope": 644,
									"src": "3043:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										720
									],
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "3786:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 530,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "3803:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 736,
													"src": "3803:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 529,
												"id": 532,
												"nodeType": "Return",
												"src": "3796:39:2"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:2",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 526,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 525,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 510,
												"src": "3755:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3777:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 527,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:2"
									},
									"scope": 644,
									"src": "3708:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "4266:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 545,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4294:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 544,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "4276:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 549,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4344:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 550,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "4363:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 548,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "4322:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:2"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 542,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 541,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 502,
												"src": "4256:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4187:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4214:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 538,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:2"
									},
									"scope": 644,
									"src": "4161:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "4623:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 560,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4658:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4650:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 558,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4650:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4650:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 562,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "4667:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4650:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 564,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "4728:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4741:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 767,
																"src": "4728:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4728:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 567,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "4764:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4728:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4650:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 574,
												"nodeType": "IfStatement",
												"src": "4633:251:2",
												"trueBody": {
													"id": 573,
													"nodeType": "Block",
													"src": "4823:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 570,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "4844:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4844:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 572,
															"nodeType": "RevertStatement",
															"src": "4837:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "4381:192:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4587:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4598:2:2"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:0:2"
									},
									"scope": 644,
									"src": "4578:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "5059:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 582,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5081:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5073:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 580,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5073:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5073:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 584,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "5090:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5073:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 590,
												"nodeType": "IfStatement",
												"src": "5069:145:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "5098:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 586,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "5174:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5174:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 588,
															"nodeType": "RevertStatement",
															"src": "5167:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "4896:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5016:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5034:2:2"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:0:2"
									},
									"scope": 644,
									"src": "5007:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "5226:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5612:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5638:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "5630:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5630:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5629:27:2"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5673:0:2"
									},
									"scope": 644,
									"src": "5603:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "6117:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 631,
															"nodeType": "Block",
															"src": "6207:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 614,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 612,
																			"src": "6225:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 615,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1015,
																				"src": "6233:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6246:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 736,
																			"src": "6233:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6225:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 623,
																	"nodeType": "IfStatement",
																	"src": "6221:120:2",
																	"trueBody": {
																		"id": 622,
																		"nodeType": "Block",
																		"src": "6267:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 619,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 612,
																							"src": "6321:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 618,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 494,
																						"src": "6292:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 620,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6292:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 621,
																				"nodeType": "RevertStatement",
																				"src": "6285:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 627,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6384:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 628,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 603,
																				"src": "6403:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 624,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1015,
																				"src": "6354:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6367:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 830,
																			"src": "6354:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6354:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 630,
																	"nodeType": "ExpressionStatement",
																	"src": "6354:54:2"
																}
															]
														},
														"errorName": "",
														"id": 632,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 613,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 612,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6201:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 632,
																	"src": "6193:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 611,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6193:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6192:14:2"
														},
														"src": "6184:235:2"
													},
													{
														"block": {
															"id": 639,
															"nodeType": "Block",
															"src": "6426:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 636,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6535:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 633,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1015,
																				"src": "6493:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6506:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 741,
																			"src": "6493:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6493:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 638,
																	"nodeType": "RevertStatement",
																	"src": "6486:67:2"
																}
															]
														},
														"errorName": "",
														"id": 640,
														"nodeType": "TryCatchClause",
														"src": "6420:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 607,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6149:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 606,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "6131:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$721_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6131:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$721",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6168:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "6131:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 641,
												"nodeType": "TryStatement",
												"src": "6127:437:2"
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "5680:347:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6041:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6071:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6063:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6063:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6103:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6090:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 602,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6090:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6062:46:2"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6117:0:2"
									},
									"scope": 644,
									"src": "6032:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 645,
							"src": "986:5586:2",
							"usedErrors": [
								211,
								214,
								489,
								494,
								741,
								754,
								1035,
								1298
							],
							"usedEvents": [
								219,
								698
							]
						}
					],
					"src": "115:6458:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							690
						],
						"Initializable": [
							462
						]
					},
					"id": 691,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 646,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 648,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 691,
							"sourceUnit": 463,
							"src": "126:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 647,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "134:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 650,
										"name": "Initializable",
										"nameLocations": [
											"728:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "728:13:3"
									},
									"id": 651,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 649,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 690,
							"linearizedBaseContracts": [
								690,
								462
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "800:7:3",
										"statements": []
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 654,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 653,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:3"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:3"
									},
									"scope": 690,
									"src": "748:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "875:7:3",
										"statements": []
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 660,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 659,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:3"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:3"
									},
									"scope": 690,
									"src": "813:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "949:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 668,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 667,
												"id": 670,
												"nodeType": "Return",
												"src": "959:17:3"
											}
										]
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:3"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 690,
									"src": "887:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "1056:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 677,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 676,
												"id": 679,
												"nodeType": "Return",
												"src": "1066:15:3"
											}
										]
									},
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:3"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:3"
									},
									"scope": 690,
									"src": "989:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "1166:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 685,
												"id": 687,
												"nodeType": "Return",
												"src": "1176:8:3"
											}
										]
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:3"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1157:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:3"
									},
									"scope": 690,
									"src": "1094:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 691,
							"src": "688:505:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							711
						]
					},
					"id": 712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 692,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 693,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:4",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 711,
							"linearizedBaseContracts": [
								711
							],
							"name": "IERC1967",
							"nameLocation": "245:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:4",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 698,
									"name": "Upgraded",
									"nameLocation": "339:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "348:30:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:4"
									},
									"src": "333:47:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:4",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 705,
									"name": "AdminChanged",
									"nameLocation": "464:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "477:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "500:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:4"
									},
									"src": "458:60:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:4",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 710,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "609:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:4"
									},
									"src": "588:45:4"
								}
							],
							"scope": 712,
							"src": "235:400:4",
							"usedErrors": [],
							"usedEvents": [
								698,
								705,
								710
							]
						}
					],
					"src": "107:529:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							721
						]
					},
					"id": 722,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 714,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:5",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 721,
							"linearizedBaseContracts": [
								721
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:5",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 720,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:5"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "869:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 717,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:5"
									},
									"scope": 721,
									"src": "821:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 722,
							"src": "344:536:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1285
						],
						"ERC1967Utils": [
							1015
						],
						"IBeacon": [
							1025
						],
						"IERC1967": [
							711
						],
						"StorageSlot": [
							1431
						]
					},
					"id": 1016,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 723,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 725,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 1026,
							"src": "140:46:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 724,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1025,
										"src": "148:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 727,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 712,
							"src": "187:55:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 726,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 711,
										"src": "195:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 729,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 1286,
							"src": "243:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 728,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1285,
										"src": "251:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 731,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 1432,
							"src": "292:56:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 730,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1431,
										"src": "300:11:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 732,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:6",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 1015,
							"linearizedBaseContracts": [
								1015
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:6",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 736,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1015,
									"src": "763:114:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 734,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 735,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:6",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 741,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "993:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:6"
									},
									"src": "958:59:6"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:6",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 746,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "1114:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:6"
									},
									"src": "1088:41:6"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:6",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 751,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1228:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:6"
									},
									"src": "1201:43:6"
								},
								{
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:6",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 754,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:6"
									},
									"src": "1337:26:6"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "1502:77:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 762,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "1546:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 760,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "1519:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1342,
															"src": "1519:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1312,
													"src": "1519:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 759,
												"id": 765,
												"nodeType": "Return",
												"src": "1512:60:6"
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:6",
										"text": " @dev Returns the current implementation address."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:6"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "1493:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:6"
									},
									"scope": 1015,
									"src": "1441:138:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "1734:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 773,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "1748:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 783,
												"nodeType": "IfStatement",
												"src": "1744:119:6",
												"trueBody": {
													"id": 782,
													"nodeType": "Block",
													"src": "1784:79:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 779,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "1834:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 778,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "1805:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 781,
															"nodeType": "RevertStatement",
															"src": "1798:54:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 787,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "1899:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 784,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "1872:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1342,
																"src": "1872:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 789,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1312,
														"src": "1872:53:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 790,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "1928:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:6"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:6",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "1699:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:6"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:6"
									},
									"scope": 1015,
									"src": "1671:281:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "2345:263:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 803,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "2374:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 802,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "2355:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 809,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "2425:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 806,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "2407:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$711_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:6",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 698,
														"src": "2407:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "EmitStatement",
												"src": "2402:41:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 812,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "2458:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 827,
													"nodeType": "Block",
													"src": "2559:43:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 824,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "2573:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 826,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:6"
														}
													]
												},
												"id": 828,
												"nodeType": "IfStatement",
												"src": "2454:148:6",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "2475:78:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 819,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "2518:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 820,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "2537:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 816,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "2489:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1285_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:6",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1202,
																	"src": "2489:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 822,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:6",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2290:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2317:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 798,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:6"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:6"
									},
									"scope": 1015,
									"src": "2264:344:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:6",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 834,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1015,
									"src": "2829:105:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 832,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 833,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "3339:68:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 842,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "3383:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 840,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "3356:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1342,
															"src": "3356:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1312,
													"src": "3356:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 839,
												"id": 845,
												"nodeType": "Return",
												"src": "3349:51:6"
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:6",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:6"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "3330:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:6"
									},
									"scope": 1015,
									"src": "3287:120:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "3535:172:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 853,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "3549:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 854,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 867,
												"nodeType": "IfStatement",
												"src": "3545:91:6",
												"trueBody": {
													"id": 866,
													"nodeType": "Block",
													"src": "3573:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 860,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 859,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "3594:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 865,
															"nodeType": "RevertStatement",
															"src": "3587:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 871,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "3672:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 868,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "3645:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1342,
																"src": "3645:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1312,
														"src": "3645:44:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 874,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "3692:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:6"
											}
										]
									},
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:6",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "3509:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:6"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:6"
									},
									"scope": 1015,
									"src": "3490:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "3875:94:6",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 887,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "3912:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 889,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "3924:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 884,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "3890:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$711_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:6",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 705,
														"src": "3890:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "EmitStatement",
												"src": "3885:48:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "3953:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 892,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "3943:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:6"
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:6",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "3848:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:6"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:6"
									},
									"scope": 1015,
									"src": "3827:142:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:6",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 901,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1015,
									"src": "4246:106:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 899,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 900,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "4468:69:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 909,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "4512:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 907,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "4485:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1342,
															"src": "4485:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1312,
													"src": "4485:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 906,
												"id": 912,
												"nodeType": "Return",
												"src": "4478:52:6"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:6",
										"text": " @dev Returns the current beacon."
									},
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:6"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "4459:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:6"
									},
									"scope": 1015,
									"src": "4415:122:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "4667:390:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 920,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "4681:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "4677:95:6",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "4709:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 926,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "4751:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 925,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "4730:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 928,
															"nodeType": "RevertStatement",
															"src": "4723:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 934,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "4809:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 931,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "4782:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1342,
																"src": "4782:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1312,
														"src": "4782:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 937,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "4830:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:6"
											},
											{
												"assignments": [
													941
												],
												"declarations": [
													{
														"constant": false,
														"id": 941,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:6",
														"nodeType": "VariableDeclaration",
														"scope": 959,
														"src": "4850:28:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 940,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 947,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 943,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "4889:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 942,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "4881:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1025_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1025",
																"typeString": "contract IBeacon"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:6",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1024,
														"src": "4881:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 948,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "4930:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 958,
												"nodeType": "IfStatement",
												"src": "4926:125:6",
												"trueBody": {
													"id": 957,
													"nodeType": "Block",
													"src": "4969:82:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 954,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 941,
																		"src": "5019:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 953,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "4990:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 956,
															"nodeType": "RevertStatement",
															"src": "4983:57:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:6",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "4640:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:6"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:6"
									},
									"scope": 1015,
									"src": "4620:437:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "5661:263:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 969,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "5682:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 968,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "5671:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 975,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "5731:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 972,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "5707:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$711_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:6",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 710,
														"src": "5707:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "EmitStatement",
												"src": "5702:39:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 978,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "5756:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 997,
													"nodeType": "Block",
													"src": "5875:43:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 994,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "5889:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 996,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:6"
														}
													]
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "5752:166:6",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "5773:96:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 986,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 963,
																						"src": "5824:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 985,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1025,
																					"src": "5816:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1025_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1025",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:6",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1024,
																			"src": "5816:33:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 990,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "5853:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 982,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "5787:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1285_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:6",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1202,
																	"src": "5787:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 992,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:6",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "5614:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "5633:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 964,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:6"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:6"
									},
									"scope": 1015,
									"src": "5582:342:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "6149:86:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1004,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "IfStatement",
												"src": "6159:70:6",
												"trueBody": {
													"id": 1011,
													"nodeType": "Block",
													"src": "6178:51:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1008,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "6199:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1010,
															"nodeType": "RevertStatement",
															"src": "6192:26:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:6",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:6"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:6"
									},
									"scope": 1015,
									"src": "6113:122:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1016,
							"src": "496:5741:6",
							"usedErrors": [
								741,
								746,
								751,
								754
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1025
						]
					},
					"id": 1026,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1017,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1018,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:7",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1025,
							"linearizedBaseContracts": [
								1025
							],
							"name": "IBeacon",
							"nameLocation": "224:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:7",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1024,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:7"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "460:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:7"
									},
									"scope": 1025,
									"src": "411:58:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1026,
							"src": "214:257:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1285
						],
						"Errors": [
							1307
						]
					},
					"id": 1286,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1027,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1029,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1286,
							"sourceUnit": 1308,
							"src": "127:36:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1028,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1307,
										"src": "135:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1030,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1285,
							"linearizedBaseContracts": [
								1285
							],
							"name": "Address",
							"nameLocation": "241:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:8",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1035,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "358:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:8"
									},
									"src": "335:39:8"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "1361:294:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1045,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1285",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1285",
																		"typeString": "library Address"
																	}
																],
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1043,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1048,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "1399:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1062,
												"nodeType": "IfStatement",
												"src": "1371:125:8",
												"trueBody": {
													"id": 1061,
													"nodeType": "Block",
													"src": "1407:89:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1055,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1285",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1285",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1053,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:8",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1058,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1040,
																		"src": "1478:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1050,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "1428:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1307_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:8",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1295,
																	"src": "1428:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1060,
															"nodeType": "RevertStatement",
															"src": "1421:64:8"
														}
													]
												}
											},
											{
												"assignments": [
													1064,
													1066
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "1507:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1063,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1066,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "1521:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1065,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1073,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1067,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "1548:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1069,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "1570:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:8"
											},
											{
												"condition": {
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:8",
													"subExpression": {
														"id": 1074,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "1596:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1081,
												"nodeType": "IfStatement",
												"src": "1591:58:8",
												"trueBody": {
													"id": 1080,
													"nodeType": "Block",
													"src": "1605:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1077,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1066,
																		"src": "1627:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1076,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "1619:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1079,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1309:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1336:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:8"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:8"
									},
									"scope": 1285,
									"src": "1290:365:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "2589:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1094,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "2628:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "2636:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1093,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "2606:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1098,
												"nodeType": "Return",
												"src": "2599:45:8"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "2522:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "2538:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1087,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:8"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "2575:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:8"
									},
									"scope": 1285,
									"src": "2500:151:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "3088:294:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1114,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1285",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1285",
																		"typeString": "library Address"
																	}
																],
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1112,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1117,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "3126:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1131,
												"nodeType": "IfStatement",
												"src": "3098:123:8",
												"trueBody": {
													"id": 1130,
													"nodeType": "Block",
													"src": "3133:88:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1124,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1285",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1285",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1123,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1122,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:8",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1127,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "3204:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1119,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "3154:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1307_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:8",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1295,
																	"src": "3154:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1129,
															"nodeType": "RevertStatement",
															"src": "3147:63:8"
														}
													]
												}
											},
											{
												"assignments": [
													1133,
													1135
												],
												"declarations": [
													{
														"constant": false,
														"id": 1133,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1149,
														"src": "3231:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1132,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1135,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1149,
														"src": "3245:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1134,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1142,
												"initialValue": {
													"arguments": [
														{
															"id": 1140,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "3298:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1136,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "3272:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1138,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "3291:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1144,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "3347:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1145,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "3355:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1146,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "3364:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1143,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "3320:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1111,
												"id": 1148,
												"nodeType": "Return",
												"src": "3313:62:8"
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3006:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3022:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1104,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3041:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:8"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3074:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1109,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:8"
									},
									"scope": 1285,
									"src": "2975:407:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "3621:154:8",
										"statements": [
											{
												"assignments": [
													1161,
													1163
												],
												"declarations": [
													{
														"constant": false,
														"id": 1161,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1175,
														"src": "3632:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1160,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1163,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1175,
														"src": "3646:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1162,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": {
													"arguments": [
														{
															"id": 1166,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "3691:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1164,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "3673:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1170,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "3740:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1171,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "3748:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1172,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "3757:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1169,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "3713:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1159,
												"id": 1174,
												"nodeType": "Return",
												"src": "3706:62:8"
											}
										]
									},
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "3549:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "3565:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1154,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:8"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "3607:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:8"
									},
									"scope": 1285,
									"src": "3521:254:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "4013:156:8",
										"statements": [
											{
												"assignments": [
													1187,
													1189
												],
												"declarations": [
													{
														"constant": false,
														"id": 1187,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1201,
														"src": "4024:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1186,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1189,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1201,
														"src": "4038:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1188,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1194,
												"initialValue": {
													"arguments": [
														{
															"id": 1192,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "4085:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1190,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "4065:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1196,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "4134:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1197,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "4142:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1198,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "4151:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1195,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "4107:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1185,
												"id": 1200,
												"nodeType": "Return",
												"src": "4100:62:8"
											}
										]
									},
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "3946:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "3962:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1180,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:8"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "3999:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:8"
									},
									"scope": 1285,
									"src": "3916:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "4595:424:8",
										"statements": [
											{
												"condition": {
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:8",
													"subExpression": {
														"id": 1214,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "4610:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1239,
													"nodeType": "Block",
													"src": "4669:344:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1221,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1209,
																			"src": "4857:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1225,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1205,
																				"src": "4883:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1236,
															"nodeType": "IfStatement",
															"src": "4853:119:8",
															"trueBody": {
																"id": 1235,
																"nodeType": "Block",
																"src": "4908:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1232,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1205,
																					"src": "4950:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1231,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1035,
																				"src": "4933:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1234,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1237,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "4992:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1213,
															"id": 1238,
															"nodeType": "Return",
															"src": "4985:17:8"
														}
													]
												},
												"id": 1240,
												"nodeType": "IfStatement",
												"src": "4605:408:8",
												"trueBody": {
													"id": 1220,
													"nodeType": "Block",
													"src": "4619:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1217,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1209,
																		"src": "4641:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1216,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "4633:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1219,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4482:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4506:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4528:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1208,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:8"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4581:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1211,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:8"
									},
									"scope": 1285,
									"src": "4437:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "5323:122:8",
										"statements": [
											{
												"condition": {
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:8",
													"subExpression": {
														"id": 1252,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "5338:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1261,
													"nodeType": "Block",
													"src": "5397:42:8",
													"statements": [
														{
															"expression": {
																"id": 1259,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "5418:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1251,
															"id": 1260,
															"nodeType": "Return",
															"src": "5411:17:8"
														}
													]
												},
												"id": 1262,
												"nodeType": "IfStatement",
												"src": "5333:106:8",
												"trueBody": {
													"id": 1258,
													"nodeType": "Block",
													"src": "5347:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1255,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1247,
																		"src": "5369:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1254,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "5361:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1257,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:8",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "5247:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "5261:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:8"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "5309:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1249,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:8"
									},
									"scope": 1285,
									"src": "5221:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "5614:432:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1270,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "5690:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1281,
													"nodeType": "Block",
													"src": "5989:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1276,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "6010:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1307_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6017:10:8",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1298,
																	"src": "6010:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6010:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1280,
															"nodeType": "RevertStatement",
															"src": "6003:26:8"
														}
													]
												},
												"id": 1282,
												"nodeType": "IfStatement",
												"src": "5686:354:8",
												"trueBody": {
													"id": 1275,
													"nodeType": "Block",
													"src": "5713:270:8",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:133:8",
																"nodeType": "YulBlock",
																"src": "5840:133:8",
																"statements": [
																	{
																		"nativeSrc": "5858:40:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5858:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5887:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "5887:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5881:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5881:5:8"
																			},
																			"nativeSrc": "5881:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5862:15:8",
																				"nodeType": "YulTypedName",
																				"src": "5862:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5926:2:8",
																							"nodeType": "YulLiteral",
																							"src": "5926:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5930:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "5930:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5922:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:8"
																					},
																					"nativeSrc": "5922:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5922:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5943:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "5943:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5915:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:8"
																			},
																			"nativeSrc": "5915:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:44:8"
																		},
																		"nativeSrc": "5915:44:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:44:8"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1267,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5887:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1267,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5930:10:8",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1274,
															"nodeType": "InlineAssembly",
															"src": "5815:158:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:8",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "5576:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:8"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:8"
									},
									"scope": 1285,
									"src": "5559:487:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1286,
							"src": "233:5815:8",
							"usedErrors": [
								1035
							],
							"usedEvents": []
						}
					],
					"src": "101:5948:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1307
						]
					},
					"id": 1308,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1287,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1288,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:9",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1307,
							"linearizedBaseContracts": [
								1307
							],
							"name": "Errors",
							"nameLocation": "419:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:9",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1295,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "557:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "574:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:9"
									},
									"src": "531:59:9"
								},
								{
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:9",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1298,
									"name": "FailedCall",
									"nameLocation": "696:10:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:9"
									},
									"src": "690:19:9"
								},
								{
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:9",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1301,
									"name": "FailedDeployment",
									"nameLocation": "772:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:9"
									},
									"src": "766:25:9"
								},
								{
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:9",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1306,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "884:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:9"
									},
									"src": "860:33:9"
								}
							],
							"scope": 1308,
							"src": "411:484:9",
							"usedErrors": [
								1295,
								1298,
								1301,
								1306
							],
							"usedEvents": []
						}
					],
					"src": "100:796:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1431
						]
					},
					"id": 1432,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1309,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1310,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:10",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 1431,
							"linearizedBaseContracts": [
								1431
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1313,
									"members": [
										{
											"constant": false,
											"id": 1312,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1313,
											"src": "1462:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1311,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1433:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1316,
									"members": [
										{
											"constant": false,
											"id": 1315,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1316,
											"src": "1517:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1314,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1488:46:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1319,
									"members": [
										{
											"constant": false,
											"id": 1318,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1319,
											"src": "1569:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1317,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1540:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1322,
									"members": [
										{
											"constant": false,
											"id": 1321,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1322,
											"src": "1624:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1320,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1595:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 1325,
									"members": [
										{
											"constant": false,
											"id": 1324,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1325,
											"src": "1678:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 1323,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1650:47:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1328,
									"members": [
										{
											"constant": false,
											"id": 1327,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1328,
											"src": "1731:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1326,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1703:47:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1331,
									"members": [
										{
											"constant": false,
											"id": 1330,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1331,
											"src": "1783:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1329,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1756:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "1983:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:10",
													"nodeType": "YulBlock",
													"src": "2018:38:10",
													"statements": [
														{
															"nativeSrc": "2032:14:10",
															"nodeType": "YulAssignment",
															"src": "2032:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:10",
																"nodeType": "YulIdentifier",
																"src": "2042:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1338,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1334,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1340,
												"nodeType": "InlineAssembly",
												"src": "1993:63:10"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:10",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "1923:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:10"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "1960:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1337,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1336,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1313,
														"src": "1960:11:10"
													},
													"referencedDeclaration": 1313,
													"src": "1960:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:10"
									},
									"scope": 1431,
									"src": "1899:163:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "2243:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:10",
													"nodeType": "YulBlock",
													"src": "2278:38:10",
													"statements": [
														{
															"nativeSrc": "2292:14:10",
															"nodeType": "YulAssignment",
															"src": "2292:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:10",
																"nodeType": "YulIdentifier",
																"src": "2302:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1349,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1345,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1351,
												"nodeType": "InlineAssembly",
												"src": "2253:63:10"
											}
										]
									},
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:10",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "2183:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1344,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:10"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "2220:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1316_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1348,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1347,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1316,
														"src": "2220:11:10"
													},
													"referencedDeclaration": 1316,
													"src": "2220:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1316_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:10"
									},
									"scope": 1431,
									"src": "2159:163:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "2503:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:10",
													"nodeType": "YulBlock",
													"src": "2538:38:10",
													"statements": [
														{
															"nativeSrc": "2552:14:10",
															"nodeType": "YulAssignment",
															"src": "2552:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:10",
																"nodeType": "YulIdentifier",
																"src": "2562:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1360,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1356,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1362,
												"nodeType": "InlineAssembly",
												"src": "2513:63:10"
											}
										]
									},
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:10",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "2443:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:10"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "2480:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1319_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1359,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1358,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1319,
														"src": "2480:11:10"
													},
													"referencedDeclaration": 1319,
													"src": "2480:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1319_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:10"
									},
									"scope": 1431,
									"src": "2419:163:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "2763:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:10",
													"nodeType": "YulBlock",
													"src": "2798:38:10",
													"statements": [
														{
															"nativeSrc": "2812:14:10",
															"nodeType": "YulAssignment",
															"src": "2812:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:10",
																"nodeType": "YulIdentifier",
																"src": "2822:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1371,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1367,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1373,
												"nodeType": "InlineAssembly",
												"src": "2773:63:10"
											}
										]
									},
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:10",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "2703:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1366,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:10"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "2740:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1322_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1370,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1369,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1322,
														"src": "2740:11:10"
													},
													"referencedDeclaration": 1322,
													"src": "2740:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1322_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:10"
									},
									"scope": 1431,
									"src": "2679:163:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "3020:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:10",
													"nodeType": "YulBlock",
													"src": "3055:38:10",
													"statements": [
														{
															"nativeSrc": "3069:14:10",
															"nodeType": "YulAssignment",
															"src": "3069:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:10",
																"nodeType": "YulIdentifier",
																"src": "3079:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1382,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1378,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1384,
												"nodeType": "InlineAssembly",
												"src": "3030:63:10"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:10",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "2961:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1377,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:10"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "2998:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$1325_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 1381,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1380,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1325,
														"src": "2998:10:10"
													},
													"referencedDeclaration": 1325,
													"src": "2998:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$1325_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:10"
									},
									"scope": 1431,
									"src": "2938:161:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "3277:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:10",
													"nodeType": "YulBlock",
													"src": "3312:38:10",
													"statements": [
														{
															"nativeSrc": "3326:14:10",
															"nodeType": "YulAssignment",
															"src": "3326:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:10",
																"nodeType": "YulIdentifier",
																"src": "3336:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1393,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1389,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1395,
												"nodeType": "InlineAssembly",
												"src": "3287:63:10"
											}
										]
									},
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:10",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "3218:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1388,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:10"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "3255:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1328_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1392,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1391,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1328,
														"src": "3255:10:10"
													},
													"referencedDeclaration": 1328,
													"src": "3255:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1328_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:10"
									},
									"scope": 1431,
									"src": "3195:161:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1407,
										"nodeType": "Block",
										"src": "3558:85:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:10",
													"nodeType": "YulBlock",
													"src": "3593:44:10",
													"statements": [
														{
															"nativeSrc": "3607:20:10",
															"nodeType": "YulAssignment",
															"src": "3607:20:10",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:10",
																"nodeType": "YulIdentifier",
																"src": "3617:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1404,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1400,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1406,
												"nodeType": "InlineAssembly",
												"src": "3568:69:10"
											}
										]
									},
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:10",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "3491:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1399,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:10"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "3536:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1328_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1403,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1402,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1328,
														"src": "3536:10:10"
													},
													"referencedDeclaration": 1328,
													"src": "3536:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1328_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:10"
									},
									"scope": 1431,
									"src": "3468:175:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "3818:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:10",
													"nodeType": "YulBlock",
													"src": "3853:38:10",
													"statements": [
														{
															"nativeSrc": "3867:14:10",
															"nodeType": "YulAssignment",
															"src": "3867:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:10",
																"nodeType": "YulIdentifier",
																"src": "3877:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1415,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1411,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1417,
												"nodeType": "InlineAssembly",
												"src": "3828:63:10"
											}
										]
									},
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:10",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "3760:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1410,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:10"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "3797:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1331_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1414,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1413,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1331,
														"src": "3797:9:10"
													},
													"referencedDeclaration": 1331,
													"src": "3797:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1331_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:10"
									},
									"scope": 1431,
									"src": "3738:159:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1429,
										"nodeType": "Block",
										"src": "4094:85:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:10",
													"nodeType": "YulBlock",
													"src": "4129:44:10",
													"statements": [
														{
															"nativeSrc": "4143:20:10",
															"nodeType": "YulAssignment",
															"src": "4143:20:10",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:10",
																"nodeType": "YulIdentifier",
																"src": "4153:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1426,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1422,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1428,
												"nodeType": "InlineAssembly",
												"src": "4104:69:10"
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:10",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "4029:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:10"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "4073:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1331_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1425,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1424,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1331,
														"src": "4073:9:10"
													},
													"referencedDeclaration": 1331,
													"src": "4073:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1331_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:10"
									},
									"scope": 1431,
									"src": "4007:172:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1432,
							"src": "1407:2774:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:10"
				},
				"id": 10
			},
			"UUPS/UUPSV2.sol": {
				"ast": {
					"absolutePath": "UUPS/UUPSV2.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							690
						],
						"ERC1967Utils": [
							1015
						],
						"IERC1822Proxiable": [
							721
						],
						"Initializable": [
							462
						],
						"OwnableUpgradeable": [
							194
						],
						"UUPSUpgradeable": [
							644
						],
						"UUPSV2": [
							1506
						]
					},
					"id": 1507,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1433,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1434,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1507,
							"sourceUnit": 463,
							"src": "95:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 1435,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1507,
							"sourceUnit": 645,
							"src": "172:77:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1436,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1507,
							"sourceUnit": 195,
							"src": "251:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1437,
										"name": "Initializable",
										"nameLocations": [
											"355:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "355:13:11"
									},
									"id": 1438,
									"nodeType": "InheritanceSpecifier",
									"src": "355:13:11"
								},
								{
									"baseName": {
										"id": 1439,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"411:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 644,
										"src": "411:15:11"
									},
									"id": 1440,
									"nodeType": "InheritanceSpecifier",
									"src": "411:15:11"
								},
								{
									"baseName": {
										"id": 1441,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"467:18:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "467:18:11"
									},
									"id": 1442,
									"nodeType": "InheritanceSpecifier",
									"src": "467:18:11"
								}
							],
							"canonicalName": "UUPSV2",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1506,
							"linearizedBaseContracts": [
								1506,
								194,
								690,
								644,
								721,
								462
							],
							"name": "UUPSV2",
							"nameLocation": "339:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0c55699c",
									"id": 1444,
									"mutability": "mutable",
									"name": "x",
									"nameLocation": "534:1:11",
									"nodeType": "VariableDeclaration",
									"scope": 1506,
									"src": "522:13:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1443,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "522:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "730:81:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1448,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "741:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "741:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "741:22:11"
											}
										]
									},
									"documentation": {
										"id": 1445,
										"nodeType": "StructuredDocumentation",
										"src": "662:48:11",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 1452,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "727:2:11"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "730:0:11"
									},
									"scope": 1506,
									"src": "716:95:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "913:162:11",
										"statements": [
											{
												"expression": {
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1459,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "924:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1460,
														"name": "_var",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "928:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "924:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "924:8:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1464,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "958:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "962:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "958:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1463,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "943:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "943:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "943:26:11"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1468,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "1012:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1012:24:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1470,
												"nodeType": "ExpressionStatement",
												"src": "1012:24:11"
											}
										]
									},
									"functionSelector": "fe4b84df",
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1457,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1456,
												"name": "initializer",
												"nameLocations": [
													"901:11:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "901:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "901:11:11"
										}
									],
									"name": "initialize",
									"nameLocation": "870:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "_var",
												"nameLocation": "886:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "881:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "881:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:11:11"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:0:11"
									},
									"scope": 1506,
									"src": "861:214:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										598
									],
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "1204:2:11",
										"statements": []
									},
									"id": 1481,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1478,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1477,
												"name": "onlyOwner",
												"nameLocations": [
													"1194:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "1194:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1194:9:11"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "1149:17:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1476,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1185:8:11"
									},
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1167:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1167:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1166:9:11"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1204:0:11"
									},
									"scope": 1506,
									"src": "1140:66:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1490,
										"nodeType": "Block",
										"src": "1271:28:11",
										"statements": [
											{
												"expression": {
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1484,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "1282:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1485,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "1286:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "32",
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1290:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "1286:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1282:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "1282:9:11"
											}
										]
									},
									"functionSelector": "b7c738f4",
									"id": 1491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cal",
									"nameLocation": "1256:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:2:11"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1271:0:11"
									},
									"scope": 1506,
									"src": "1247:52:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1504,
										"nodeType": "Block",
										"src": "1397:77:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 1498,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1438:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSV2_$1506",
																		"typeString": "contract UUPSV2"
																	}
																},
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1443:10:11",
																"memberName": "initialize",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1472,
																"src": "1438:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																	"typeString": "function (uint256) external"
																}
															},
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1454:8:11",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "1438:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"hexValue": "31",
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1464:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"id": 1496,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1415:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1419:18:11",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "1415:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1415:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1495,
												"id": 1503,
												"nodeType": "Return",
												"src": "1408:58:11"
											}
										]
									},
									"functionSelector": "a4ef7d30",
									"id": 1505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "showInitCode",
									"nameLocation": "1346:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:2:11"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "1383:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1383:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:14:11"
									},
									"scope": 1506,
									"src": "1337:137:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1507,
							"src": "330:1147:11",
							"usedErrors": [
								30,
								35,
								211,
								214,
								489,
								494,
								741,
								754,
								1035,
								1298
							],
							"usedEvents": [
								41,
								219,
								698
							]
						}
					],
					"src": "33:1444:11"
				},
				"id": 11
			}
		}
	}
}