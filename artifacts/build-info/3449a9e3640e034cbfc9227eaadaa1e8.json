{
	"id": "3449a9e3640e034cbfc9227eaadaa1e8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"IfElse.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\ncontract IfElse{\r\n\r\n    function example(uint x) external pure returns(uint) {\r\n        if(x < 10){\r\n            return 1;\r\n        }else if(x<20){\r\n            return 2;\r\n        }else {\r\n            return 3;\r\n        }\r\n    }\r\n    function tenary(uint x) external pure returns(uint) {\r\n        return x<10?1:x<20?2:3;\r\n    }\r\n\r\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"IfElse.sol": {
				"IfElse": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "example",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "tenary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"IfElse.sol\":60:392  contract IfElse{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"IfElse.sol\":60:392  contract IfElse{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x477e4a02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x67b58887\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"IfElse.sol\":84:288  function example(uint x) external pure returns(uint) {... */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"IfElse.sol\":84:288  function example(uint x) external pure returns(uint) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"IfElse.sol\":294:387  function tenary(uint x) external pure returns(uint) {... */\n    tag_4:\n      tag_5\n      tag_12\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n        /* \"IfElse.sol\":84:288  function example(uint x) external pure returns(uint) {... */\n    tag_8:\n        /* \"IfElse.sol\":131:135  uint */\n      0x00\n        /* \"IfElse.sol\":155:157  10 */\n      0x0a\n        /* \"IfElse.sol\":151:152  x */\n      dup3\n        /* \"IfElse.sol\":151:157  x < 10 */\n      lt\n        /* \"IfElse.sol\":148:281  if(x < 10){... */\n      iszero\n      tag_16\n      jumpi\n      pop\n        /* \"IfElse.sol\":180:181  1 */\n      0x01\n      swap2\n        /* \"IfElse.sol\":84:288  function example(uint x) external pure returns(uint) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"IfElse.sol\":148:281  if(x < 10){... */\n    tag_16:\n        /* \"IfElse.sol\":203:205  20 */\n      0x14\n        /* \"IfElse.sol\":201:202  x */\n      dup3\n        /* \"IfElse.sol\":201:205  x<20 */\n      lt\n        /* \"IfElse.sol\":198:281  if(x<20){... */\n      iszero\n      tag_18\n      jumpi\n      pop\n        /* \"IfElse.sol\":228:229  2 */\n      0x02\n      swap2\n        /* \"IfElse.sol\":84:288  function example(uint x) external pure returns(uint) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"IfElse.sol\":198:281  if(x<20){... */\n    tag_18:\n      pop\n        /* \"IfElse.sol\":268:269  3 */\n      0x03\n      swap2\n        /* \"IfElse.sol\":84:288  function example(uint x) external pure returns(uint) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"IfElse.sol\":294:387  function tenary(uint x) external pure returns(uint) {... */\n    tag_13:\n        /* \"IfElse.sol\":340:344  uint */\n      0x00\n        /* \"IfElse.sol\":366:368  10 */\n      0x0a\n        /* \"IfElse.sol\":364:365  x */\n      dup3\n        /* \"IfElse.sol\":364:368  x<10 */\n      lt\n        /* \"IfElse.sol\":364:379  x<10?1:x<20?2:3 */\n      tag_21\n      jumpi\n        /* \"IfElse.sol\":373:375  20 */\n      0x14\n        /* \"IfElse.sol\":371:372  x */\n      dup3\n        /* \"IfElse.sol\":371:375  x<20 */\n      lt\n        /* \"IfElse.sol\":371:379  x<20?2:3 */\n      tag_22\n      jumpi\n        /* \"IfElse.sol\":378:379  3 */\n      0x03\n        /* \"IfElse.sol\":364:379  x<10?1:x<20?2:3 */\n      jump(tag_24)\n        /* \"IfElse.sol\":371:379  x<20?2:3 */\n    tag_22:\n        /* \"IfElse.sol\":376:377  2 */\n      0x02\n        /* \"IfElse.sol\":364:379  x<10?1:x<20?2:3 */\n      jump(tag_24)\n    tag_21:\n        /* \"IfElse.sol\":369:370  1 */\n      0x01\n        /* \"IfElse.sol\":364:379  x<10?1:x<20?2:3 */\n    tag_24:\n        /* \"IfElse.sol\":357:379  return x<10?1:x<20?2:3 */\n      0xff\n      and\n      swap3\n        /* \"IfElse.sol\":294:387  function tenary(uint x) external pure returns(uint) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_7:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_27:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220148c97689fc738e124803ed26083244a4e3d09776502382b5996da1a36d715f064736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506101008061001c5f395ff3fe6080604052348015600e575f5ffd5b50600436106030575f3560e01c8063477e4a0214603457806367b58887146055575b5f5ffd5b6043603f36600460b4565b6064565b60405190815260200160405180910390f35b6043606036600460b4565b608d565b5f600a821015607557506001919050565b6014821015608557506002919050565b506003919050565b5f600a821060a8576014821060a257600360ab565b600260ab565b60015b60ff1692915050565b5f6020828403121560c3575f5ffd5b503591905056fea2646970667358221220148c97689fc738e124803ed26083244a4e3d09776502382b5996da1a36d715f064736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x100 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x30 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x477E4A02 EQ PUSH1 0x34 JUMPI DUP1 PUSH4 0x67B58887 EQ PUSH1 0x55 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x43 PUSH1 0x3F CALLDATASIZE PUSH1 0x4 PUSH1 0xB4 JUMP JUMPDEST PUSH1 0x64 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x43 PUSH1 0x60 CALLDATASIZE PUSH1 0x4 PUSH1 0xB4 JUMP JUMPDEST PUSH1 0x8D JUMP JUMPDEST PUSH0 PUSH1 0xA DUP3 LT ISZERO PUSH1 0x75 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x14 DUP3 LT ISZERO PUSH1 0x85 JUMPI POP PUSH1 0x2 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x3 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA DUP3 LT PUSH1 0xA8 JUMPI PUSH1 0x14 DUP3 LT PUSH1 0xA2 JUMPI PUSH1 0x3 PUSH1 0xAB JUMP JUMPDEST PUSH1 0x2 PUSH1 0xAB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xC3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ DUP13 SWAP8 PUSH9 0x9FC738E124803ED260 DUP4 0x24 BLOBBASEFEE 0x4E RETURNDATASIZE MULMOD PUSH24 0x6502382B5996DA1A36D715F064736F6C634300081D003300 ",
							"sourceMap": "60:332:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@example_26": {
									"entryPoint": 100,
									"id": 26,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tenary_46": {
									"entryPoint": 141,
									"id": 46,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:378:1",
										"nodeType": "YulBlock",
										"src": "0:378:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:1",
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:1",
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:1",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:1",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nativeSrc": "132:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nativeSrc": "132:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nativeSrc": "101:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:1",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nativeSrc": "97:32:1",
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nativeSrc": "94:52:1",
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nativeSrc": "155:33:1",
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nativeSrc": "165:23:1",
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:1",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:1",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:1",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nativeSrc": "300:76:1",
													"nodeType": "YulBlock",
													"src": "300:76:1",
													"statements": [
														{
															"nativeSrc": "310:26:1",
															"nodeType": "YulAssignment",
															"src": "310:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "322:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "333:2:1",
																		"nodeType": "YulLiteral",
																		"src": "333:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "318:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:1"
																},
																"nativeSrc": "318:18:1",
																"nodeType": "YulFunctionCall",
																"src": "318:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "310:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "352:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "363:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "345:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:1"
																},
																"nativeSrc": "345:25:1",
																"nodeType": "YulFunctionCall",
																"src": "345:25:1"
															},
															"nativeSrc": "345:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "345:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "199:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "269:9:1",
														"nodeType": "YulTypedName",
														"src": "269:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "280:6:1",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "291:4:1",
														"nodeType": "YulTypedName",
														"src": "291:4:1",
														"type": ""
													}
												],
												"src": "199:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50600436106030575f3560e01c8063477e4a0214603457806367b58887146055575b5f5ffd5b6043603f36600460b4565b6064565b60405190815260200160405180910390f35b6043606036600460b4565b608d565b5f600a821015607557506001919050565b6014821015608557506002919050565b506003919050565b5f600a821060a8576014821060a257600360ab565b600260ab565b60015b60ff1692915050565b5f6020828403121560c3575f5ffd5b503591905056fea2646970667358221220148c97689fc738e124803ed26083244a4e3d09776502382b5996da1a36d715f064736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x30 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x477E4A02 EQ PUSH1 0x34 JUMPI DUP1 PUSH4 0x67B58887 EQ PUSH1 0x55 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x43 PUSH1 0x3F CALLDATASIZE PUSH1 0x4 PUSH1 0xB4 JUMP JUMPDEST PUSH1 0x64 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x43 PUSH1 0x60 CALLDATASIZE PUSH1 0x4 PUSH1 0xB4 JUMP JUMPDEST PUSH1 0x8D JUMP JUMPDEST PUSH0 PUSH1 0xA DUP3 LT ISZERO PUSH1 0x75 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x14 DUP3 LT ISZERO PUSH1 0x85 JUMPI POP PUSH1 0x2 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x3 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA DUP3 LT PUSH1 0xA8 JUMPI PUSH1 0x14 DUP3 LT PUSH1 0xA2 JUMPI PUSH1 0x3 PUSH1 0xAB JUMP JUMPDEST PUSH1 0x2 PUSH1 0xAB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xC3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ DUP13 SWAP8 PUSH9 0x9FC738E124803ED260 DUP4 0x24 BLOBBASEFEE 0x4E RETURNDATASIZE MULMOD PUSH24 0x6502382B5996DA1A36D715F064736F6C634300081D003300 ",
							"sourceMap": "60:332:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;84:204;;;;;;:::i;:::-;;:::i;:::-;;;345:25:1;;;333:2;318:18;84:204:0;;;;;;;294:93;;;;;;:::i;:::-;;:::i;84:204::-;131:4;155:2;151:1;:6;148:133;;;-1:-1:-1;180:1:0;;84:204;-1:-1:-1;84:204:0:o;148:133::-;203:2;201:1;:4;198:83;;;-1:-1:-1;228:1:0;;84:204;-1:-1:-1;84:204:0:o;198:83::-;-1:-1:-1;268:1:0;;84:204;-1:-1:-1;84:204:0:o;294:93::-;340:4;366:2;364:1;:4;:15;;373:2;371:1;:4;:8;;378:1;364:15;;371:8;376:1;364:15;;;369:1;364:15;357:22;;;294:93;-1:-1:-1;;294:93:0:o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "51200",
								"executionCost": "97",
								"totalCost": "51297"
							},
							"external": {
								"example(uint256)": "309",
								"tenary(uint256)": "342"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 392,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 392,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 392,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 392,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 392,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 392,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60,
									"end": 392,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 392,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 392,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 392,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 392,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 392,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 392,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 392,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 392,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 392,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 392,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 392,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 392,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 392,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 392,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220148c97689fc738e124803ed26083244a4e3d09776502382b5996da1a36d715f064736f6c634300081d0033",
									".code": [
										{
											"begin": 60,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 392,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 392,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 392,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 392,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 392,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 392,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 392,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "477E4A02"
										},
										{
											"begin": 60,
											"end": 392,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "67B58887"
										},
										{
											"begin": 60,
											"end": 392,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 392,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 392,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 84,
											"end": 288,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 84,
											"end": 288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 84,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 84,
											"end": 288,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 84,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 84,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 84,
											"end": 288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 84,
											"end": 288,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 84,
											"end": 288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 84,
											"end": 288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 84,
											"end": 288,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 84,
											"end": 288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 84,
											"end": 288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 84,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 84,
											"end": 288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 84,
											"end": 288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84,
											"end": 288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 84,
											"end": 288,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 84,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 84,
											"end": 288,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 294,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 294,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 294,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 294,
											"end": 387,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 294,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 294,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 294,
											"end": 387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 294,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 294,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 294,
											"end": 387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 84,
											"end": 288,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 84,
											"end": 288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 131,
											"end": 135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 151,
											"end": 152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 151,
											"end": 157,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 148,
											"end": 281,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 148,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 148,
											"end": 281,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 180,
											"end": 181,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 84,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 148,
											"end": 281,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 148,
											"end": 281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 203,
											"end": 205,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 201,
											"end": 202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 201,
											"end": 205,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 198,
											"end": 281,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 198,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 198,
											"end": 281,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 228,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 228,
											"end": 229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 84,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 198,
											"end": 281,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 198,
											"end": 281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 268,
											"end": 269,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 268,
											"end": 269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 84,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 294,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 294,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 340,
											"end": 344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 366,
											"end": 368,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 364,
											"end": 365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 364,
											"end": 368,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 364,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 364,
											"end": 379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 371,
											"end": 372,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 371,
											"end": 375,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 371,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 371,
											"end": 379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 378,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 364,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 364,
											"end": 379,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 371,
											"end": 379,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 371,
											"end": 379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 376,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 364,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 364,
											"end": 379,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 364,
											"end": 379,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 364,
											"end": 379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 369,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 364,
											"end": 379,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 364,
											"end": 379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 357,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 357,
											"end": 379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 357,
											"end": 379,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 294,
											"end": 387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 294,
											"end": 387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"IfElse.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"example(uint256)": "477e4a02",
							"tenary(uint256)": "67b58887"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"example\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"tenary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IfElse.sol\":\"IfElse\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IfElse.sol\":{\"keccak256\":\"0x3714072c2893f2afa9739aee2e70bba3bb638ef6f336b0319295606ca9e6f154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6dbe7df8f1186c02a3d14274bf223ffe48655358cdbca7eecad0a35c1ab55f5\",\"dweb:/ipfs/QmU6B4eTb8DYZkh8SC67uvBStZ9UaLBoLougBtT7qADkvL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"IfElse.sol": {
				"ast": {
					"absolutePath": "IfElse.sol",
					"exportedSymbols": {
						"IfElse": [
							47
						]
					},
					"id": 48,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IfElse",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 47,
							"linearizedBaseContracts": [
								47
							],
							"name": "IfElse",
							"nameLocation": "69:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "137:151:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "151:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "155:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "151:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 14,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "201:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3230",
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "203:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														"src": "201:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 22,
														"nodeType": "Block",
														"src": "246:35:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "33",
																	"id": 20,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "268:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"functionReturnParameters": 7,
																"id": 21,
																"nodeType": "Return",
																"src": "261:8:0"
															}
														]
													},
													"id": 23,
													"nodeType": "IfStatement",
													"src": "198:83:0",
													"trueBody": {
														"id": 19,
														"nodeType": "Block",
														"src": "206:35:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "32",
																	"id": 17,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "228:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"functionReturnParameters": 7,
																"id": 18,
																"nodeType": "Return",
																"src": "221:8:0"
															}
														]
													}
												},
												"id": 24,
												"nodeType": "IfStatement",
												"src": "148:133:0",
												"trueBody": {
													"id": 13,
													"nodeType": "Block",
													"src": "158:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "31",
																"id": 11,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "180:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"functionReturnParameters": 7,
															"id": 12,
															"nodeType": "Return",
															"src": "173:8:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "477e4a02",
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "example",
									"nameLocation": "93:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "106:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "101:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "101:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "100:8:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "131:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "131:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "130:6:0"
									},
									"scope": 47,
									"src": "84:204:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "346:41:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 33,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "364:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3130",
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "366:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"src": "364:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 37,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "371:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3230",
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "373:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20_by_1",
																	"typeString": "int_const 20"
																},
																"value": "20"
															},
															"src": "371:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "33",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "378:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "371:8:0",
														"trueExpression": {
															"hexValue": "32",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "376:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "364:15:0",
													"trueExpression": {
														"hexValue": "31",
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "369:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 32,
												"id": 44,
												"nodeType": "Return",
												"src": "357:22:0"
											}
										]
									},
									"functionSelector": "67b58887",
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tenary",
									"nameLocation": "303:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "315:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "310:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "310:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "309:8:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "340:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "340:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "339:6:0"
									},
									"scope": 47,
									"src": "294:93:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 48,
							"src": "60:332:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:359:0"
				},
				"id": 0
			}
		}
	}
}