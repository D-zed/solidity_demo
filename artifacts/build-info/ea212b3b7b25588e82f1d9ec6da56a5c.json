{
	"id": "ea212b3b7b25588e82f1d9ec6da56a5c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\n// state variables;\r\n// global variables;\r\n// function modifier;\r\n// function\r\n// error handle\r\n\r\ncontract Ownable {\r\n\r\n    address public owner;\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner(){\r\n        //调用者为owner的时候才可以调用\r\n        require(msg.sender == owner,\"not owner\");\r\n        _;\r\n    }\r\n\r\n    function setOwner(address _newOwner) external onlyOwner {\r\n        require(_newOwner != address(0),\"invalid address\" );\r\n        owner=_newOwner;\r\n    }\r\n\r\n    \r\n    function onlyOwnerCanCallFunc() external onlyOwner{\r\n\r\n    }\r\n\r\n    function allOwnerCanCallFunc() external{\r\n\r\n    }\r\n\r\n\r\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "allOwnerCanCallFunc",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "onlyOwnerCanCallFunc",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ownable.sol\":158:714  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"Ownable.sol\":213:264  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"Ownable.sol\":238:243  owner */\n  0x00\n    /* \"Ownable.sol\":238:256  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"Ownable.sol\":246:256  msg.sender */\n  caller\n    /* \"Ownable.sol\":238:256  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"Ownable.sol\":158:714  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ownable.sol\":158:714  contract Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x13af4035\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf0a51d20\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfa4e30ba\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"Ownable.sol\":424:576  function setOwner(address _newOwner) external onlyOwner {... */\n    tag_3:\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"Ownable.sol\":184:204  address public owner */\n    tag_4:\n      sload(0x00)\n      tag_11\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_11:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":469:501   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":451:502   */\n      dup2\n      mstore\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"Ownable.sol\":184:204  address public owner */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ownable.sol\":590:650  function onlyOwnerCanCallFunc() external onlyOwner{... */\n    tag_6:\n      tag_7\n      tag_18\n      jump\t// in\n        /* \"Ownable.sol\":424:576  function setOwner(address _newOwner) external onlyOwner {... */\n    tag_10:\n        /* \"Ownable.sol\":378:383  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"Ownable.sol\":364:374  msg.sender */\n      caller\n        /* \"Ownable.sol\":364:383  msg.sender == owner */\n      eq\n        /* \"Ownable.sol\":356:396  require(msg.sender == owner,\"not owner\") */\n      tag_20\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":715:717   */\n      0x20\n        /* \"Ownable.sol\":356:396  require(msg.sender == owner,\"not owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":697:718   */\n      mstore\n        /* \"#utility.yul\":754:755   */\n      0x09\n        /* \"#utility.yul\":734:752   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":727:756   */\n      mstore\n      shl(0xb9, 0x3737ba1037bbb732b9)\n        /* \"#utility.yul\":772:790   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":765:804   */\n      mstore\n        /* \"#utility.yul\":821:839   */\n      0x64\n      add\n        /* \"Ownable.sol\":356:396  require(msg.sender == owner,\"not owner\") */\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":499:522  _newOwner != address(0) */\n      dup2\n      and\n        /* \"Ownable.sol\":491:542  require(_newOwner != address(0),\"invalid address\" ) */\n      tag_24\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1052:1054   */\n      0x20\n        /* \"Ownable.sol\":491:542  require(_newOwner != address(0),\"invalid address\" ) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1034:1055   */\n      mstore\n        /* \"#utility.yul\":1091:1093   */\n      0x0f\n        /* \"#utility.yul\":1071:1089   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1064:1094   */\n      mstore\n      shl(0x88, 0x696e76616c69642061646472657373)\n        /* \"#utility.yul\":1110:1128   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1103:1148   */\n      mstore\n        /* \"#utility.yul\":1165:1183   */\n      0x64\n      add\n        /* \"Ownable.sol\":491:542  require(_newOwner != address(0),\"invalid address\" ) */\n      tag_21\n        /* \"#utility.yul\":850:1189   */\n      jump\n        /* \"Ownable.sol\":491:542  require(_newOwner != address(0),\"invalid address\" ) */\n    tag_24:\n        /* \"Ownable.sol\":553:558  owner */\n      0x00\n        /* \"Ownable.sol\":553:568  owner=_newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Ownable.sol\":424:576  function setOwner(address _newOwner) external onlyOwner {... */\n      jump\t// out\n        /* \"Ownable.sol\":658:707  function allOwnerCanCallFunc() external{... */\n    tag_16:\n      jump\t// out\n        /* \"Ownable.sol\":590:650  function onlyOwnerCanCallFunc() external onlyOwner{... */\n    tag_18:\n        /* \"Ownable.sol\":378:383  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"Ownable.sol\":364:374  msg.sender */\n      caller\n        /* \"Ownable.sol\":364:383  msg.sender == owner */\n      eq\n        /* \"Ownable.sol\":356:396  require(msg.sender == owner,\"not owner\") */\n      tag_16\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":715:717   */\n      0x20\n        /* \"Ownable.sol\":356:396  require(msg.sender == owner,\"not owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":697:718   */\n      mstore\n        /* \"#utility.yul\":754:755   */\n      0x09\n        /* \"#utility.yul\":734:752   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":727:756   */\n      mstore\n      shl(0xb9, 0x3737ba1037bbb732b9)\n        /* \"#utility.yul\":772:790   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":765:804   */\n      mstore\n        /* \"#utility.yul\":821:839   */\n      0x64\n      add\n        /* \"Ownable.sol\":356:396  require(msg.sender == owner,\"not owner\") */\n      tag_21\n        /* \"#utility.yul\":513:845   */\n      jump\n        /* \"#utility.yul\":14:300   */\n    tag_9:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_34\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_34:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_35\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      0x00\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_35:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122073f761b6eb95c5f061747943bfa0d9ca9d8c2bfec7939d4adbd7737a9784ab6a64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b505f80546001600160a01b031916331790556101f68061002d5f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c806313af40351461004e5780638da5cb5b14610063578063f0a51d2014610061578063fa4e30ba14610091575b5f5ffd5b61006161005c366004610193565b610099565b005b5f54610075906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61006161014e565b5f546001600160a01b031633146100e35760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b6001600160a01b03811661012b5760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206164647265737360881b60448201526064016100da565b5f80546001600160a01b0319166001600160a01b0392909216919091179055565b565b5f546001600160a01b0316331461014c5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064016100da565b5f602082840312156101a3575f5ffd5b81356001600160a01b03811681146101b9575f5ffd5b939250505056fea264697066735822122073f761b6eb95c5f061747943bfa0d9ca9d8c2bfec7939d4adbd7737a9784ab6a64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x1F6 DUP1 PUSH2 0x2D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0xF0A51D20 EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xFA4E30BA EQ PUSH2 0x91 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x61 PUSH2 0x5C CALLDATASIZE PUSH1 0x4 PUSH2 0x193 JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH2 0x75 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x14E JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x696E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDA JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDA JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xF761B6EB95C5F061747943BFA0D9CA9D8C2BFEC7 SWAP4 SWAP14 BLOBBASEFEE 0xDB 0xD7 PUSH20 0x7A9784AB6A64736F6C634300081D003300000000 ",
							"sourceMap": "158:556:0:-:0;;;213:51;;;;;;;;;-1:-1:-1;238:5:0;:18;;-1:-1:-1;;;;;;238:18:0;246:10;238:18;;;158:556;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@allOwnerCanCallFunc_56": {
									"entryPoint": 332,
									"id": 56,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@onlyOwnerCanCallFunc_52": {
									"entryPoint": 334,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_3": {
									"entryPoint": null,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setOwner_46": {
									"entryPoint": 153,
									"id": 46,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1191:1",
										"nodeType": "YulBlock",
										"src": "0:1191:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:216:1",
													"nodeType": "YulBlock",
													"src": "84:216:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:1",
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:1",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:1",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nativeSrc": "132:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nativeSrc": "132:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nativeSrc": "101:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:1",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nativeSrc": "97:32:1",
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nativeSrc": "94:52:1",
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nativeSrc": "155:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "181:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "168:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:1"
																},
																"nativeSrc": "168:23:1",
																"nodeType": "YulFunctionCall",
																"src": "168:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:1",
																	"nodeType": "YulTypedName",
																	"src": "159:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:1",
																"nodeType": "YulBlock",
																"src": "254:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:1",
																					"nodeType": "YulLiteral",
																					"src": "263:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:1",
																					"nodeType": "YulLiteral",
																					"src": "266:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:1"
																			},
																			"nativeSrc": "256:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:1"
																		},
																		"nativeSrc": "256:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "213:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "224:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "239:3:1",
																										"nodeType": "YulLiteral",
																										"src": "239:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "244:1:1",
																										"nodeType": "YulLiteral",
																										"src": "244:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "235:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:1"
																								},
																								"nativeSrc": "235:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "248:1:1",
																								"nodeType": "YulLiteral",
																								"src": "248:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "231:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:1"
																						},
																						"nativeSrc": "231:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "220:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:1"
																				},
																				"nativeSrc": "220:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "210:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:1"
																		},
																		"nativeSrc": "210:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "203:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:1"
																},
																"nativeSrc": "203:50:1",
																"nodeType": "YulFunctionCall",
																"src": "203:50:1"
															},
															"nativeSrc": "200:70:1",
															"nodeType": "YulIf",
															"src": "200:70:1"
														},
														{
															"nativeSrc": "279:15:1",
															"nodeType": "YulAssignment",
															"src": "279:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:1",
																"nodeType": "YulIdentifier",
																"src": "289:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "14:286:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:1",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:1",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:1",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:286:1"
											},
											{
												"body": {
													"nativeSrc": "406:102:1",
													"nodeType": "YulBlock",
													"src": "406:102:1",
													"statements": [
														{
															"nativeSrc": "416:26:1",
															"nodeType": "YulAssignment",
															"src": "416:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "428:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "439:2:1",
																		"nodeType": "YulLiteral",
																		"src": "439:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "424:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "424:3:1"
																},
																"nativeSrc": "424:18:1",
																"nodeType": "YulFunctionCall",
																"src": "424:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "416:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "416:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "458:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "473:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "473:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "489:3:1",
																								"nodeType": "YulLiteral",
																								"src": "489:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "494:1:1",
																								"nodeType": "YulLiteral",
																								"src": "494:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "485:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "485:3:1"
																						},
																						"nativeSrc": "485:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "485:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "498:1:1",
																						"nodeType": "YulLiteral",
																						"src": "498:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "481:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "481:3:1"
																				},
																				"nativeSrc": "481:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "481:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "469:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "469:3:1"
																		},
																		"nativeSrc": "469:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "469:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "451:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:1"
																},
																"nativeSrc": "451:51:1",
																"nodeType": "YulFunctionCall",
																"src": "451:51:1"
															},
															"nativeSrc": "451:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "451:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "305:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "375:9:1",
														"nodeType": "YulTypedName",
														"src": "375:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "386:6:1",
														"nodeType": "YulTypedName",
														"src": "386:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "397:4:1",
														"nodeType": "YulTypedName",
														"src": "397:4:1",
														"type": ""
													}
												],
												"src": "305:203:1"
											},
											{
												"body": {
													"nativeSrc": "687:158:1",
													"nodeType": "YulBlock",
													"src": "687:158:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "704:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "704:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "715:2:1",
																		"nodeType": "YulLiteral",
																		"src": "715:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "697:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "697:6:1"
																},
																"nativeSrc": "697:21:1",
																"nodeType": "YulFunctionCall",
																"src": "697:21:1"
															},
															"nativeSrc": "697:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "697:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "738:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "738:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "749:2:1",
																				"nodeType": "YulLiteral",
																				"src": "749:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "734:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "734:3:1"
																		},
																		"nativeSrc": "734:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "734:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "754:1:1",
																		"nodeType": "YulLiteral",
																		"src": "754:1:1",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "727:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "727:6:1"
																},
																"nativeSrc": "727:29:1",
																"nodeType": "YulFunctionCall",
																"src": "727:29:1"
															},
															"nativeSrc": "727:29:1",
															"nodeType": "YulExpressionStatement",
															"src": "727:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "776:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "776:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "787:2:1",
																				"nodeType": "YulLiteral",
																				"src": "787:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "772:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "772:3:1"
																		},
																		"nativeSrc": "772:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "772:18:1"
																	},
																	{
																		"hexValue": "6e6f74206f776e6572",
																		"kind": "string",
																		"nativeSrc": "792:11:1",
																		"nodeType": "YulLiteral",
																		"src": "792:11:1",
																		"type": "",
																		"value": "not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "765:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "765:6:1"
																},
																"nativeSrc": "765:39:1",
																"nodeType": "YulFunctionCall",
																"src": "765:39:1"
															},
															"nativeSrc": "765:39:1",
															"nodeType": "YulExpressionStatement",
															"src": "765:39:1"
														},
														{
															"nativeSrc": "813:26:1",
															"nodeType": "YulAssignment",
															"src": "813:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "825:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "825:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "836:2:1",
																		"nodeType": "YulLiteral",
																		"src": "836:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "821:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "821:3:1"
																},
																"nativeSrc": "821:18:1",
																"nodeType": "YulFunctionCall",
																"src": "821:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "813:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "813:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "513:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "664:9:1",
														"nodeType": "YulTypedName",
														"src": "664:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "678:4:1",
														"nodeType": "YulTypedName",
														"src": "678:4:1",
														"type": ""
													}
												],
												"src": "513:332:1"
											},
											{
												"body": {
													"nativeSrc": "1024:165:1",
													"nodeType": "YulBlock",
													"src": "1024:165:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1041:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1041:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1052:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1052:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1034:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1034:6:1"
																},
																"nativeSrc": "1034:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1034:21:1"
															},
															"nativeSrc": "1034:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "1034:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1075:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1075:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1086:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1086:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1071:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1071:3:1"
																		},
																		"nativeSrc": "1071:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1071:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1091:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1091:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1064:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1064:6:1"
																},
																"nativeSrc": "1064:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1064:30:1"
															},
															"nativeSrc": "1064:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "1064:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1114:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1114:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1125:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1125:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1110:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1110:3:1"
																		},
																		"nativeSrc": "1110:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1110:18:1"
																	},
																	{
																		"hexValue": "696e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "1130:17:1",
																		"nodeType": "YulLiteral",
																		"src": "1130:17:1",
																		"type": "",
																		"value": "invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1103:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1103:6:1"
																},
																"nativeSrc": "1103:45:1",
																"nodeType": "YulFunctionCall",
																"src": "1103:45:1"
															},
															"nativeSrc": "1103:45:1",
															"nodeType": "YulExpressionStatement",
															"src": "1103:45:1"
														},
														{
															"nativeSrc": "1157:26:1",
															"nodeType": "YulAssignment",
															"src": "1157:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1169:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1169:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1180:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1180:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1165:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1165:3:1"
																},
																"nativeSrc": "1165:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1165:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1157:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1157:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "850:339:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1001:9:1",
														"nodeType": "YulTypedName",
														"src": "1001:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1015:4:1",
														"nodeType": "YulTypedName",
														"src": "1015:4:1",
														"type": ""
													}
												],
												"src": "850:339:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"not owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"invalid address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061004a575f3560e01c806313af40351461004e5780638da5cb5b14610063578063f0a51d2014610061578063fa4e30ba14610091575b5f5ffd5b61006161005c366004610193565b610099565b005b5f54610075906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61006161014e565b5f546001600160a01b031633146100e35760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b6001600160a01b03811661012b5760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206164647265737360881b60448201526064016100da565b5f80546001600160a01b0319166001600160a01b0392909216919091179055565b565b5f546001600160a01b0316331461014c5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064016100da565b5f602082840312156101a3575f5ffd5b81356001600160a01b03811681146101b9575f5ffd5b939250505056fea264697066735822122073f761b6eb95c5f061747943bfa0d9ca9d8c2bfec7939d4adbd7737a9784ab6a64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0xF0A51D20 EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xFA4E30BA EQ PUSH2 0x91 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x61 PUSH2 0x5C CALLDATASIZE PUSH1 0x4 PUSH2 0x193 JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH2 0x75 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x14E JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x696E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDA JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDA JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xF761B6EB95C5F061747943BFA0D9CA9D8C2BFEC7 SWAP4 SWAP14 BLOBBASEFEE 0xDB 0xD7 PUSH20 0x7A9784AB6A64736F6C634300081D003300000000 ",
							"sourceMap": "158:556:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:152;;;;;;:::i;:::-;;:::i;:::-;;184:20;;;;;-1:-1:-1;;;;;184:20:0;;;;;;-1:-1:-1;;;;;469:32:1;;;451:51;;439:2;424:18;184:20:0;;;;;;;590:60;;;:::i;424:152::-;378:5;;-1:-1:-1;;;;;378:5:0;364:10;:19;356:40;;;;-1:-1:-1;;;356:40:0;;715:2:1;356:40:0;;;697:21:1;754:1;734:18;;;727:29;-1:-1:-1;;;772:18:1;;;765:39;821:18;;356:40:0;;;;;;;;;-1:-1:-1;;;;;499:23:0;::::1;491:51;;;::::0;-1:-1:-1;;;491:51:0;;1052:2:1;491:51:0::1;::::0;::::1;1034:21:1::0;1091:2;1071:18;;;1064:30;-1:-1:-1;;;1110:18:1;;;1103:45;1165:18;;491:51:0::1;850:339:1::0;491:51:0::1;553:5;:15:::0;;-1:-1:-1;;;;;;553:15:0::1;-1:-1:-1::0;;;;;553:15:0;;;::::1;::::0;;;::::1;::::0;;424:152::o;658:49::-;:::o;590:60::-;378:5;;-1:-1:-1;;;;;378:5:0;364:10;:19;356:40;;;;-1:-1:-1;;;356:40:0;;715:2:1;356:40:0;;;697:21:1;754:1;734:18;;;727:29;-1:-1:-1;;;772:18:1;;;765:39;821:18;;356:40:0;513:332:1;14:286;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:1;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "100400",
								"executionCost": "24379",
								"totalCost": "124779"
							},
							"external": {
								"allOwnerCanCallFunc()": "141",
								"onlyOwnerCanCallFunc()": "2439",
								"owner()": "2323",
								"setOwner(address)": "26685"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 158,
									"end": 714,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 158,
									"end": 714,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 158,
									"end": 714,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 213,
									"end": 264,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 213,
									"end": 264,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 213,
									"end": 264,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 213,
									"end": 264,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 213,
									"end": 264,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 213,
									"end": 264,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 213,
									"end": 264,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 213,
									"end": 264,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 213,
									"end": 264,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 213,
									"end": 264,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 238,
									"end": 243,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 256,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 238,
									"end": 256,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 238,
									"end": 256,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 246,
									"end": 256,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 238,
									"end": 256,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 238,
									"end": 256,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 238,
									"end": 256,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 158,
									"end": 714,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 158,
									"end": 714,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 158,
									"end": 714,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 158,
									"end": 714,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 158,
									"end": 714,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 158,
									"end": 714,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 158,
									"end": 714,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073f761b6eb95c5f061747943bfa0d9ca9d8c2bfec7939d4adbd7737a9784ab6a64736f6c634300081d0033",
									".code": [
										{
											"begin": 158,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "13AF4035"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "F0A51D20"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FA4E30BA"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 158,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 158,
											"end": 714,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 424,
											"end": 576,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 424,
											"end": 576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 424,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 424,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 424,
											"end": 576,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 424,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 424,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 424,
											"end": 576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 424,
											"end": 576,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 424,
											"end": 576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 424,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 424,
											"end": 576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 424,
											"end": 576,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 424,
											"end": 576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 424,
											"end": 576,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 204,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 184,
											"end": 204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 204,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 184,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 184,
											"end": 204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 184,
											"end": 204,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 184,
											"end": 204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 184,
											"end": 204,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 204,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 184,
											"end": 204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 184,
											"end": 204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 451,
											"end": 502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 184,
											"end": 204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 184,
											"end": 204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 184,
											"end": 204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 184,
											"end": 204,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 184,
											"end": 204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 204,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 590,
											"end": 650,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 590,
											"end": 650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 590,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 590,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 590,
											"end": 650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 424,
											"end": 576,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 424,
											"end": 576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 378,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 378,
											"end": 383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 364,
											"end": 374,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 364,
											"end": 383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 356,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 356,
											"end": 396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 356,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 356,
											"end": 396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 356,
											"end": 396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 356,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 356,
											"end": 396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 356,
											"end": 396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 734,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 727,
											"end": 756,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737BA1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 772,
											"end": 790,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 772,
											"end": 790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 772,
											"end": 790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 765,
											"end": 804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 821,
											"end": 839,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 821,
											"end": 839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 356,
											"end": 396,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 356,
											"end": 396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 356,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 356,
											"end": 396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 356,
											"end": 396,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 356,
											"end": 396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 396,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 356,
											"end": 396,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 356,
											"end": 396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 499,
											"end": 522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 499,
											"end": 522,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 491,
											"end": 542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 491,
											"end": 542,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 491,
											"end": 542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 491,
											"end": 542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 491,
											"end": 542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1054,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 491,
											"end": 542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 491,
											"end": 542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 491,
											"end": 542,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 1071,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1071,
											"end": 1089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1071,
											"end": 1089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E76616C69642061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1110,
											"end": 1128,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1110,
											"end": 1128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1165,
											"end": 1183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 491,
											"end": 542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 850,
											"end": 1189,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 491,
											"end": 542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 491,
											"end": 542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 553,
											"end": 558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 568,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 553,
											"end": 568,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 553,
											"end": 568,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 553,
											"end": 568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 568,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 553,
											"end": 568,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 553,
											"end": 568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 553,
											"end": 568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 553,
											"end": 568,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 553,
											"end": 568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 568,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 424,
											"end": 576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 658,
											"end": 707,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 658,
											"end": 707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 658,
											"end": 707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 590,
											"end": 650,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 590,
											"end": 650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 378,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 378,
											"end": 383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 364,
											"end": 374,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 364,
											"end": 383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 356,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 356,
											"end": 396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 356,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 356,
											"end": 396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 356,
											"end": 396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 356,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 356,
											"end": 396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 356,
											"end": 396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 734,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 727,
											"end": 756,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737BA1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 772,
											"end": 790,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 772,
											"end": 790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 772,
											"end": 790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 765,
											"end": 804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 821,
											"end": 839,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 821,
											"end": 839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 356,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 513,
											"end": 845,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Ownable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allOwnerCanCallFunc()": "f0a51d20",
							"onlyOwnerCanCallFunc()": "fa4e30ba",
							"owner()": "8da5cb5b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"allOwnerCanCallFunc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onlyOwnerCanCallFunc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Ownable.sol\":{\"keccak256\":\"0x6da3e9104744a2a7fd52adec48c43239db2eae27237bfbc7e7f19a5ff0e4b57a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd1a5f8cfe6f576c17dcd4f5e1af89cb82d6d91057ae10ce4636808169f566a1\",\"dweb:/ipfs/Qmb9YKekPDuz1Fc6Yyzqp6uhrHfPVrzXzCYUrosA3TCSdf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "Ownable.sol:Ownable",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Ownable.sol": {
				"ast": {
					"absolutePath": "Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							57
						]
					},
					"id": 58,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 57,
							"linearizedBaseContracts": [
								57
							],
							"name": "Ownable",
							"nameLocation": "167:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "199:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 57,
									"src": "184:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "184:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "227:37:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "238:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "246:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "250:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "246:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "238:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "238:18:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "224:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "227:0:0"
									},
									"scope": 57,
									"src": "213:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "292:124:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "364:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "368:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "364:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 17,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "378:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "364:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206f776e6572",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "384:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															},
															"value": "not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "356:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "356:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "356:40:0"
											},
											{
												"id": 22,
												"nodeType": "PlaceholderStatement",
												"src": "407:1:0"
											}
										]
									},
									"id": 24,
									"name": "onlyOwner",
									"nameLocation": "281:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:2:0"
									},
									"src": "272:144:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "480:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 32,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "499:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 35,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "520:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 34,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "512:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 33,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "512:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "512:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "499:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c69642061646472657373",
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "523:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225",
																"typeString": "literal_string \"invalid address\""
															},
															"value": "invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225",
																"typeString": "literal_string \"invalid address\""
															}
														],
														"id": 31,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "491:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "491:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "491:51:0"
											},
											{
												"expression": {
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 41,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "553:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 42,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "559:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "553:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "553:15:0"
											}
										]
									},
									"functionSelector": "13af4035",
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 29,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 28,
												"name": "onlyOwner",
												"nameLocations": [
													"470:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 24,
												"src": "470:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "470:9:0"
										}
									],
									"name": "setOwner",
									"nameLocation": "433:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "450:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "442:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:19:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "480:0:0"
									},
									"scope": 57,
									"src": "424:152:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "640:10:0",
										"statements": []
									},
									"functionSelector": "fa4e30ba",
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 49,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 48,
												"name": "onlyOwner",
												"nameLocations": [
													"631:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 24,
												"src": "631:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "631:9:0"
										}
									],
									"name": "onlyOwnerCanCallFunc",
									"nameLocation": "599:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "619:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "640:0:0"
									},
									"scope": 57,
									"src": "590:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "697:10:0",
										"statements": []
									},
									"functionSelector": "f0a51d20",
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allOwnerCanCallFunc",
									"nameLocation": "667:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "686:2:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "697:0:0"
									},
									"scope": 57,
									"src": "658:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 58,
							"src": "158:556:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:681:0"
				},
				"id": 0
			}
		}
	}
}