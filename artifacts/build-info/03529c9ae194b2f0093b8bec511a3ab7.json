{
	"id": "03529c9ae194b2f0093b8bec511a3ab7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"ForAndWhileLoops.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\ncontract ForAndWhileLoops {\r\n\r\n    function loops() external pure {\r\n        for (uint i=0;i<10;i++){\r\n            if(i==3){\r\n                continue ;\r\n            }\r\n        }\r\n\r\n        uint j=0;\r\n        while(j<10){\r\n            j++;\r\n        }\r\n    }\r\n\r\n    function sum(uint a) external pure returns (uint){\r\n        uint s ;\r\n        for(uint i=1;i<10;i++){\r\n            s+=i;\r\n        }\r\n        return s;\r\n    }\r\n\r\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"ForAndWhileLoops.sol": {
				"ForAndWhileLoops": {
					"abi": [
						{
							"inputs": [],
							"name": "loops",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "a",
									"type": "uint256"
								}
							],
							"name": "sum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ForAndWhileLoops.sol\":60:487  contract ForAndWhileLoops {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ForAndWhileLoops.sol\":60:487  contract ForAndWhileLoops {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x188b85b4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x938b9ceb\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"ForAndWhileLoops.sol\":325:482  function sum(uint a) external pure returns (uint){... */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"ForAndWhileLoops.sol\":325:482  function sum(uint a) external pure returns (uint){... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ForAndWhileLoops.sol\":95:317  function loops() external pure {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"ForAndWhileLoops.sol\":325:482  function sum(uint a) external pure returns (uint){... */\n    tag_8:\n        /* \"ForAndWhileLoops.sol\":369:373  uint */\n      0x00\n      dup1\n        /* \"ForAndWhileLoops.sol\":414:415  1 */\n      0x01\n        /* \"ForAndWhileLoops.sol\":403:456  for(uint i=1;i<10;i++){... */\n    tag_14:\n        /* \"ForAndWhileLoops.sol\":418:420  10 */\n      0x0a\n        /* \"ForAndWhileLoops.sol\":416:417  i */\n      dup2\n        /* \"ForAndWhileLoops.sol\":416:420  i<10 */\n      lt\n        /* \"ForAndWhileLoops.sol\":403:456  for(uint i=1;i<10;i++){... */\n      iszero\n      tag_15\n      jumpi\n        /* \"ForAndWhileLoops.sol\":440:444  s+=i */\n      tag_17\n        /* \"ForAndWhileLoops.sol\":443:444  i */\n      dup2\n        /* \"ForAndWhileLoops.sol\":440:444  s+=i */\n      dup4\n      tag_18\n      jump\t// in\n    tag_17:\n      swap2\n      pop\n        /* \"ForAndWhileLoops.sol\":421:424  i++ */\n      0x01\n      add\n        /* \"ForAndWhileLoops.sol\":403:456  for(uint i=1;i<10;i++){... */\n      jump(tag_14)\n    tag_15:\n      pop\n        /* \"ForAndWhileLoops.sol\":473:474  s */\n      swap3\n        /* \"ForAndWhileLoops.sol\":325:482  function sum(uint a) external pure returns (uint){... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ForAndWhileLoops.sol\":95:317  function loops() external pure {... */\n    tag_12:\n        /* \"ForAndWhileLoops.sol\":142:148  uint i */\n      0x00\n        /* \"ForAndWhileLoops.sol\":137:238  for (uint i=0;i<10;i++){... */\n    tag_20:\n        /* \"ForAndWhileLoops.sol\":153:155  10 */\n      0x0a\n        /* \"ForAndWhileLoops.sol\":151:152  i */\n      dup2\n        /* \"ForAndWhileLoops.sol\":151:155  i<10 */\n      lt\n        /* \"ForAndWhileLoops.sol\":137:238  for (uint i=0;i<10;i++){... */\n      iszero\n      tag_21\n      jumpi\n        /* \"ForAndWhileLoops.sol\":156:159  i++ */\n      0x01\n      add\n        /* \"ForAndWhileLoops.sol\":137:238  for (uint i=0;i<10;i++){... */\n      jump(tag_20)\n    tag_21:\n      pop\n        /* \"ForAndWhileLoops.sol\":250:256  uint j */\n      0x00\n        /* \"ForAndWhileLoops.sol\":269:310  while(j<10){... */\n    tag_24:\n        /* \"ForAndWhileLoops.sol\":277:279  10 */\n      0x0a\n        /* \"ForAndWhileLoops.sol\":275:276  j */\n      dup2\n        /* \"ForAndWhileLoops.sol\":275:279  j<10 */\n      lt\n        /* \"ForAndWhileLoops.sol\":269:310  while(j<10){... */\n      iszero\n      tag_25\n      jumpi\n        /* \"ForAndWhileLoops.sol\":295:298  j++ */\n      dup1\n      tag_26\n      dup2\n      tag_27\n      jump\t// in\n    tag_26:\n      swap2\n      pop\n      pop\n        /* \"ForAndWhileLoops.sol\":269:310  while(j<10){... */\n      jump(tag_24)\n    tag_25:\n        /* \"ForAndWhileLoops.sol\":126:317  {... */\n      pop\n        /* \"ForAndWhileLoops.sol\":95:317  function loops() external pure {... */\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_7:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_31\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_31:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":381:508   */\n    tag_28:\n        /* \"#utility.yul\":442:452   */\n      0x4e487b71\n        /* \"#utility.yul\":437:440   */\n      0xe0\n        /* \"#utility.yul\":433:453   */\n      shl\n        /* \"#utility.yul\":430:431   */\n      0x00\n        /* \"#utility.yul\":423:454   */\n      mstore\n        /* \"#utility.yul\":473:477   */\n      0x11\n        /* \"#utility.yul\":470:471   */\n      0x04\n        /* \"#utility.yul\":463:478   */\n      mstore\n        /* \"#utility.yul\":497:501   */\n      0x24\n        /* \"#utility.yul\":494:495   */\n      0x00\n        /* \"#utility.yul\":487:502   */\n      revert\n        /* \"#utility.yul\":513:638   */\n    tag_18:\n        /* \"#utility.yul\":578:587   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":599:609   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":596:632   */\n      iszero\n      tag_36\n      jumpi\n        /* \"#utility.yul\":612:630   */\n      tag_36\n      tag_28\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":513:638   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":643:778   */\n    tag_27:\n        /* \"#utility.yul\":682:685   */\n      0x00\n        /* \"#utility.yul\":703:720   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":700:743   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":723:741   */\n      tag_39\n      tag_28\n      jump\t// in\n    tag_39:\n      pop\n        /* \"#utility.yul\":770:771   */\n      0x01\n        /* \"#utility.yul\":759:772   */\n      add\n      swap1\n        /* \"#utility.yul\":643:778   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208ba47b7f71187f13611e02ee07b4c7859936791a2578a622a794cf7b453e901c64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506101568061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c8063188b85b414610038578063938b9ceb1461005d575b5f5ffd5b61004b6100463660046100c4565b610067565b60405190815260200160405180910390f35b610065610090565b005b5f8060015b600a8110156100895761007f81836100ef565b915060010161006c565b5092915050565b5f5b600a8110156100a357600101610092565b505f5b600a8110156100c157806100b981610108565b9150506100a6565b50565b5f602082840312156100d4575f5ffd5b5035919050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610102576101026100db565b92915050565b5f60018201610119576101196100db565b506001019056fea26469706673582212208ba47b7f71187f13611e02ee07b4c7859936791a2578a622a794cf7b453e901c64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x156 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x188B85B4 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x938B9CEB EQ PUSH2 0x5D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x46 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4 JUMP JUMPDEST PUSH2 0x67 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65 PUSH2 0x90 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH1 0x1 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x89 JUMPI PUSH2 0x7F DUP2 DUP4 PUSH2 0xEF JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x6C JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x1 ADD PUSH2 0x92 JUMP JUMPDEST POP PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xC1 JUMPI DUP1 PUSH2 0xB9 DUP2 PUSH2 0x108 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x102 JUMPI PUSH2 0x102 PUSH2 0xDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x119 JUMPI PUSH2 0x119 PUSH2 0xDB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 LOG4 PUSH28 0x7F71187F13611E02EE07B4C7859936791A2578A622A794CF7B453E90 SHR PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "60:427:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@loops_35": {
									"entryPoint": 144,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sum_64": {
									"entryPoint": 103,
									"id": 64,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:780:1",
										"nodeType": "YulBlock",
										"src": "0:780:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:1",
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:1",
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:1",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:1",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nativeSrc": "132:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nativeSrc": "132:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nativeSrc": "101:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:1",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nativeSrc": "97:32:1",
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nativeSrc": "94:52:1",
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nativeSrc": "155:33:1",
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nativeSrc": "165:23:1",
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:1",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:1",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:1",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nativeSrc": "300:76:1",
													"nodeType": "YulBlock",
													"src": "300:76:1",
													"statements": [
														{
															"nativeSrc": "310:26:1",
															"nodeType": "YulAssignment",
															"src": "310:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "322:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "333:2:1",
																		"nodeType": "YulLiteral",
																		"src": "333:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "318:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:1"
																},
																"nativeSrc": "318:18:1",
																"nodeType": "YulFunctionCall",
																"src": "318:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "310:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "352:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "363:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "345:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:1"
																},
																"nativeSrc": "345:25:1",
																"nodeType": "YulFunctionCall",
																"src": "345:25:1"
															},
															"nativeSrc": "345:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "345:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "199:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "269:9:1",
														"nodeType": "YulTypedName",
														"src": "269:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "280:6:1",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "291:4:1",
														"nodeType": "YulTypedName",
														"src": "291:4:1",
														"type": ""
													}
												],
												"src": "199:177:1"
											},
											{
												"body": {
													"nativeSrc": "413:95:1",
													"nodeType": "YulBlock",
													"src": "413:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "430:1:1",
																		"nodeType": "YulLiteral",
																		"src": "430:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "437:3:1",
																				"nodeType": "YulLiteral",
																				"src": "437:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "442:10:1",
																				"nodeType": "YulLiteral",
																				"src": "442:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "433:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "433:3:1"
																		},
																		"nativeSrc": "433:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "433:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "423:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "423:6:1"
																},
																"nativeSrc": "423:31:1",
																"nodeType": "YulFunctionCall",
																"src": "423:31:1"
															},
															"nativeSrc": "423:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "423:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "470:1:1",
																		"nodeType": "YulLiteral",
																		"src": "470:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "473:4:1",
																		"nodeType": "YulLiteral",
																		"src": "473:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "463:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "463:6:1"
																},
																"nativeSrc": "463:15:1",
																"nodeType": "YulFunctionCall",
																"src": "463:15:1"
															},
															"nativeSrc": "463:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "463:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "494:1:1",
																		"nodeType": "YulLiteral",
																		"src": "494:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "497:4:1",
																		"nodeType": "YulLiteral",
																		"src": "497:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "487:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "487:6:1"
																},
																"nativeSrc": "487:15:1",
																"nodeType": "YulFunctionCall",
																"src": "487:15:1"
															},
															"nativeSrc": "487:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "487:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "381:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "381:127:1"
											},
											{
												"body": {
													"nativeSrc": "561:77:1",
													"nodeType": "YulBlock",
													"src": "561:77:1",
													"statements": [
														{
															"nativeSrc": "571:16:1",
															"nodeType": "YulAssignment",
															"src": "571:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "582:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "582:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "585:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "585:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "578:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "578:3:1"
																},
																"nativeSrc": "578:9:1",
																"nodeType": "YulFunctionCall",
																"src": "578:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "571:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "571:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "610:22:1",
																"nodeType": "YulBlock",
																"src": "610:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "612:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "612:16:1"
																			},
																			"nativeSrc": "612:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "612:18:1"
																		},
																		"nativeSrc": "612:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "612:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "602:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "602:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "605:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "605:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "599:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "599:2:1"
																},
																"nativeSrc": "599:10:1",
																"nodeType": "YulFunctionCall",
																"src": "599:10:1"
															},
															"nativeSrc": "596:36:1",
															"nodeType": "YulIf",
															"src": "596:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "513:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "544:1:1",
														"nodeType": "YulTypedName",
														"src": "544:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "547:1:1",
														"nodeType": "YulTypedName",
														"src": "547:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "553:3:1",
														"nodeType": "YulTypedName",
														"src": "553:3:1",
														"type": ""
													}
												],
												"src": "513:125:1"
											},
											{
												"body": {
													"nativeSrc": "690:88:1",
													"nodeType": "YulBlock",
													"src": "690:88:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "721:22:1",
																"nodeType": "YulBlock",
																"src": "721:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "723:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "723:16:1"
																			},
																			"nativeSrc": "723:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "723:18:1"
																		},
																		"nativeSrc": "723:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "723:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "706:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "706:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "717:1:1",
																				"nodeType": "YulLiteral",
																				"src": "717:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "713:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "713:3:1"
																		},
																		"nativeSrc": "713:6:1",
																		"nodeType": "YulFunctionCall",
																		"src": "713:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "703:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "703:2:1"
																},
																"nativeSrc": "703:17:1",
																"nodeType": "YulFunctionCall",
																"src": "703:17:1"
															},
															"nativeSrc": "700:43:1",
															"nodeType": "YulIf",
															"src": "700:43:1"
														},
														{
															"nativeSrc": "752:20:1",
															"nodeType": "YulAssignment",
															"src": "752:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "763:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "763:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "770:1:1",
																		"nodeType": "YulLiteral",
																		"src": "770:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "759:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "759:3:1"
																},
																"nativeSrc": "759:13:1",
																"nodeType": "YulFunctionCall",
																"src": "759:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "752:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "752:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "643:135:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "672:5:1",
														"nodeType": "YulTypedName",
														"src": "672:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "682:3:1",
														"nodeType": "YulTypedName",
														"src": "682:3:1",
														"type": ""
													}
												],
												"src": "643:135:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610034575f3560e01c8063188b85b414610038578063938b9ceb1461005d575b5f5ffd5b61004b6100463660046100c4565b610067565b60405190815260200160405180910390f35b610065610090565b005b5f8060015b600a8110156100895761007f81836100ef565b915060010161006c565b5092915050565b5f5b600a8110156100a357600101610092565b505f5b600a8110156100c157806100b981610108565b9150506100a6565b50565b5f602082840312156100d4575f5ffd5b5035919050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610102576101026100db565b92915050565b5f60018201610119576101196100db565b506001019056fea26469706673582212208ba47b7f71187f13611e02ee07b4c7859936791a2578a622a794cf7b453e901c64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x188B85B4 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x938B9CEB EQ PUSH2 0x5D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x46 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4 JUMP JUMPDEST PUSH2 0x67 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65 PUSH2 0x90 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH1 0x1 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x89 JUMPI PUSH2 0x7F DUP2 DUP4 PUSH2 0xEF JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x6C JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x1 ADD PUSH2 0x92 JUMP JUMPDEST POP PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xC1 JUMPI DUP1 PUSH2 0xB9 DUP2 PUSH2 0x108 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x102 JUMPI PUSH2 0x102 PUSH2 0xDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x119 JUMPI PUSH2 0x119 PUSH2 0xDB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 LOG4 PUSH28 0x7F71187F13611E02EE07B4C7859936791A2578A622A794CF7B453E90 SHR PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "60:427:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:157;;;;;;:::i;:::-;;:::i;:::-;;;345:25:1;;;333:2;318:18;325:157:0;;;;;;;95:222;;;:::i;:::-;;325:157;369:4;;414:1;403:53;418:2;416:1;:4;403:53;;;440:4;443:1;440:4;;:::i;:::-;;-1:-1:-1;421:3:0;;403:53;;;-1:-1:-1;473:1:0;325:157;-1:-1:-1;;325:157:0:o;95:222::-;142:6;137:101;153:2;151:1;:4;137:101;;;156:3;;137:101;;;-1:-1:-1;250:6:0;269:41;277:2;275:1;:4;269:41;;;295:3;;;;:::i;:::-;;;;269:41;;;126:191;95:222::o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;381:127::-;442:10;437:3;433:20;430:1;423:31;473:4;470:1;463:15;497:4;494:1;487:15;513:125;578:9;;;599:10;;;596:36;;;612:18;;:::i;:::-;513:125;;;;:::o;643:135::-;682:3;703:17;;;700:43;;723:18;;:::i;:::-;-1:-1:-1;770:1:1;759:13;;643:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "68400",
								"executionCost": "115",
								"totalCost": "68515"
							},
							"external": {
								"loops()": "infinite",
								"sum(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 487,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 487,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 487,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 487,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 487,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 487,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60,
									"end": 487,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 487,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 487,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 487,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 487,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 487,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 487,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 487,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 487,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 487,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 487,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 487,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 487,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 487,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 487,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208ba47b7f71187f13611e02ee07b4c7859936791a2578a622a794cf7b453e901c64736f6c634300081d0033",
									".code": [
										{
											"begin": 60,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 487,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 487,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 487,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 487,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 487,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 487,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 487,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 487,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "188B85B4"
										},
										{
											"begin": 60,
											"end": 487,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "938B9CEB"
										},
										{
											"begin": 60,
											"end": 487,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 487,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 487,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 325,
											"end": 482,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 325,
											"end": 482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 325,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 325,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 325,
											"end": 482,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 325,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 325,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 325,
											"end": 482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 325,
											"end": 482,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 325,
											"end": 482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 325,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 325,
											"end": 482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 325,
											"end": 482,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 325,
											"end": 482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 325,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 325,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 325,
											"end": 482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 325,
											"end": 482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 325,
											"end": 482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 482,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 95,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 95,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 95,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 95,
											"end": 317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 95,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 317,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 325,
											"end": 482,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 325,
											"end": 482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 369,
											"end": 373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 414,
											"end": 415,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 403,
											"end": 456,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 403,
											"end": 456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 418,
											"end": 420,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 416,
											"end": 417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 416,
											"end": 420,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 403,
											"end": 456,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 403,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 403,
											"end": 456,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 440,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 443,
											"end": 444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 440,
											"end": 444,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 440,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 440,
											"end": 444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 440,
											"end": 444,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 440,
											"end": 444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 440,
											"end": 444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 421,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 403,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 403,
											"end": 456,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 403,
											"end": 456,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 403,
											"end": 456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 473,
											"end": 474,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 325,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 325,
											"end": 482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 95,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 238,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 137,
											"end": 238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 153,
											"end": 155,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 151,
											"end": 152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 151,
											"end": 155,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 137,
											"end": 238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 156,
											"end": 159,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 156,
											"end": 159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 137,
											"end": 238,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 137,
											"end": 238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 250,
											"end": 256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 269,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 277,
											"end": 279,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 275,
											"end": 276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 275,
											"end": 279,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 269,
											"end": 310,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 269,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 269,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 295,
											"end": 298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 295,
											"end": 298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 295,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 295,
											"end": 298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 295,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 295,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 295,
											"end": 298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 295,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 295,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 269,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 269,
											"end": 310,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 269,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 269,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 126,
											"end": 317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 381,
											"end": 508,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 381,
											"end": 508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 442,
											"end": 452,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 437,
											"end": 440,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 430,
											"end": 431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 423,
											"end": 454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 473,
											"end": 477,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 470,
											"end": 471,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 463,
											"end": 478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 497,
											"end": 501,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 494,
											"end": 495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 502,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 513,
											"end": 638,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 513,
											"end": 638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 578,
											"end": 587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 578,
											"end": 587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 578,
											"end": 587,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 599,
											"end": 609,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 599,
											"end": 609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 599,
											"end": 609,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 596,
											"end": 632,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 596,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 596,
											"end": 632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 612,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 612,
											"end": 630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 612,
											"end": 630,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 513,
											"end": 638,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 513,
											"end": 638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 513,
											"end": 638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 643,
											"end": 778,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 643,
											"end": 778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 682,
											"end": 685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 720,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 703,
											"end": 720,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 703,
											"end": 720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 700,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 700,
											"end": 743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 723,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 723,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 723,
											"end": 741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 723,
											"end": 741,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 723,
											"end": 741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 770,
											"end": 771,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 759,
											"end": 772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 643,
											"end": 778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"ForAndWhileLoops.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"loops()": "938b9ceb",
							"sum(uint256)": "188b85b4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"loops\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"sum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ForAndWhileLoops.sol\":\"ForAndWhileLoops\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ForAndWhileLoops.sol\":{\"keccak256\":\"0xa8c562f6b318105593f835b67bf6bd99f95e4e783e78b5f113234c5c81056a4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78c065becfdae402f2990173e297835876b6a0554ba4163f891ea45e1770d5e\",\"dweb:/ipfs/QmU2At3a8YLfyNera1XDr2zorC1CpVGYZSJx8yGruSAh5b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> ForAndWhileLoops.sol:19:18:\n   |\n19 |     function sum(uint a) external pure returns (uint){\n   |                  ^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 344,
					"file": "ForAndWhileLoops.sol",
					"start": 338
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ForAndWhileLoops.sol": {
				"ast": {
					"absolutePath": "ForAndWhileLoops.sol",
					"exportedSymbols": {
						"ForAndWhileLoops": [
							65
						]
					},
					"id": 66,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ForAndWhileLoops",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 65,
							"linearizedBaseContracts": [
								65
							],
							"name": "ForAndWhileLoops",
							"nameLocation": "69:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "126:191:0",
										"statements": [
											{
												"body": {
													"id": 20,
													"nodeType": "Block",
													"src": "160:78:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 14,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "178:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 15,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "181:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "178:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 19,
															"nodeType": "IfStatement",
															"src": "175:52:0",
															"trueBody": {
																"id": 18,
																"nodeType": "Block",
																"src": "183:44:0",
																"statements": [
																	{
																		"id": 17,
																		"nodeType": "Continue",
																		"src": "202:8:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "151:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "153:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "151:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 21,
												"initializationExpression": {
													"assignments": [
														5
													],
													"declarations": [
														{
															"constant": false,
															"id": 5,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "147:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 21,
															"src": "142:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "142:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 7,
													"initialValue": {
														"hexValue": "30",
														"id": 6,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "149:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "142:8:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "156:3:0",
														"subExpression": {
															"id": 11,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "156:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 13,
													"nodeType": "ExpressionStatement",
													"src": "156:3:0"
												},
												"nodeType": "ForStatement",
												"src": "137:101:0"
											},
											{
												"assignments": [
													23
												],
												"declarations": [
													{
														"constant": false,
														"id": 23,
														"mutability": "mutable",
														"name": "j",
														"nameLocation": "255:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "250:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 22,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "250:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 25,
												"initialValue": {
													"hexValue": "30",
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "257:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "250:8:0"
											},
											{
												"body": {
													"id": 32,
													"nodeType": "Block",
													"src": "280:30:0",
													"statements": [
														{
															"expression": {
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "295:3:0",
																"subExpression": {
																	"id": 29,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "295:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 31,
															"nodeType": "ExpressionStatement",
															"src": "295:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 26,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "275:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "277:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "275:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 33,
												"nodeType": "WhileStatement",
												"src": "269:41:0"
											}
										]
									},
									"functionSelector": "938b9ceb",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loops",
									"nameLocation": "104:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "109:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "126:0:0"
									},
									"scope": 65,
									"src": "95:222:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "374:108:0",
										"statements": [
											{
												"assignments": [
													43
												],
												"declarations": [
													{
														"constant": false,
														"id": 43,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "390:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 63,
														"src": "385:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 42,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "385:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 44,
												"nodeType": "VariableDeclarationStatement",
												"src": "385:6:0"
											},
											{
												"body": {
													"id": 59,
													"nodeType": "Block",
													"src": "425:31:0",
													"statements": [
														{
															"expression": {
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 55,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "440:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 56,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "443:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "440:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 58,
															"nodeType": "ExpressionStatement",
															"src": "440:4:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 49,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "416:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "418:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "416:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 60,
												"initializationExpression": {
													"assignments": [
														46
													],
													"declarations": [
														{
															"constant": false,
															"id": 46,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "412:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 60,
															"src": "407:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 45,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "407:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 48,
													"initialValue": {
														"hexValue": "31",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "414:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "407:8:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "421:3:0",
														"subExpression": {
															"id": 52,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "421:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 54,
													"nodeType": "ExpressionStatement",
													"src": "421:3:0"
												},
												"nodeType": "ForStatement",
												"src": "403:53:0"
											},
											{
												"expression": {
													"id": 61,
													"name": "s",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 43,
													"src": "473:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 41,
												"id": 62,
												"nodeType": "Return",
												"src": "466:8:0"
											}
										]
									},
									"functionSelector": "188b85b4",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sum",
									"nameLocation": "334:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "343:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "338:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "338:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "337:8:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "369:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "369:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "368:6:0"
									},
									"scope": 65,
									"src": "325:157:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 66,
							"src": "60:427:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:454:0"
				},
				"id": 0
			}
		}
	}
}